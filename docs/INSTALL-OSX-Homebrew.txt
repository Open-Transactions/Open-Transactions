##########################################################################
#                                                                        #
#                                                                        #
#                   ##    INSTALL - OSX Homebrew    ##                   #
#                                                                        #
#                                                                        #
##########################################################################




#############

##   ALL   ##

# Go to the APP STORE (or otherwise) and install XCODE
# Load XCODE and Open Preferences; under download, install �Command Line Tools�

# Tell xcode-select where the installed xcode is:
$ sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer

# install brew:
$ ruby -e "$(curl -fsSkL raw.github.com/mxcl/homebrew/go)"
# check brew works
$ brew doctor

# add dupes and versions to homebrew:
$ brew tap homebrew/dupes
$ brew tap homebrew/versions

# update:
$ brew update


#############

# use CLANG by default (add to your profile)

$ echo 'export CPP=cpp; export CC=clang; export CXX=clang++' >> ~/.profile
$ source ~/.profile

$ brew install --use-clang cmake automake autoconf libtool
$ brew install --use-clang protobuf msgpack zeromq22 openssl

## If you are NOT on Mavericks !!
$ brew install --use-clang boost


#############

##   ALL   ##


# Get the Homebew-Prefix loacation from brew, and sets it in $HOMEBREW_PREFIX
# (We use the "$HOMEBREW_PREFIX" for where to install OpenSSL and OT):
$ echo "export $(brew --config | grep HOMEBREW_PREFIX | sed 's/: /=/')" >> ~/.profile
$ source ~/.profile


## OPTIONAL -  ONLY FOR NON-GLOBAL INSTALLS) ##

# if your $HOMEBREW_PREFIX is not standard (eg /usr/local) you need to add it to the aclocal dirlist:
$ sudo bash -c 'echo '$HOMEBREW_PREFIX/share/aclocal' >> `aclocal --print-ac-dir`/dirlist'

# and set a path to your homebrew prefix for the current session
$ export PATH=$HOMEBREW_PREFIX/bin:$PATH



#############

## CHAISCRIPT ##

# fetch chaiscript
$ mkdir -p ~/Scratch/Sources; cd ~/Scratch/Sources
$ git clone git://github.com/ChaiScript/ChaiScript.git

# build chaiscript  (Now using non-boost version)
$ cd ChaiScript
$ git checkout c6a1d1ea7552a4ebbc877b1714e8d5adfe32d85a
$ cmake . -DCMAKE_INSTALL_PREFIX=$HOMEBREW_PREFIX
$ make -j2
$ make test
$ make install
$ cd ..

########################################


## OPEN TRANSACTIONS ##

# fetch Open Transactions and prepare your copy for build

$ export PKG_CONFIG_PATH=$HOMEBREW_PREFIX/lib/pkgconfig

$ mkdir -p ~/Scratch/Sources; cd ~/Scratch/Sources
$ git clone git://github.com/Open-Transactions/Open-Transactions.git
$ cd Open-Transactions

$ ./autogen.sh

## If you are NOT on Mavericks !!
## include "--disable-cxx11" in your configure options.

(for a x64)
$ ./configure --prefix=$HOMEBREW_PREFIX --with-openssl=/usr/local/opt/openssl

(for a x32)
$ ./configure --target=i686-apple-darwin11 --prefix=$HOMEBREW_PREFIX --with-openssl=/usr/local/opt/openssl

(NB: Default without the "--prefix=$HOMEBREW_PREFIX" installs sytem-wide  
and will require admin privileges for "$ sudo make install" step below)


#########   Configure Options:   #########

Debug Mode:      --enable-debug
Signal Handling: --enable-sighandler
Warnings:        --enable-warnings

Release Mode:    --enable-release

No Boost:        --disable-boost
No C++11:        --disable-cxx11

(Optional)
System Keyring:  --with-keyring=ARG
Arguments:       gnome, kwallet, windows or mac

Enable SWIG Support for:
       Java:     --with-java
       Perl 5:   --with-perl5
       PHP:      --with-php
       Python:   --with-python
       Ruby:     --with-ruby
       TCL:      --with-tcl
       CSHARP:   --with-csharp
       D:        --with-d

##########################################


$ make uninstall (if you have ever installed anything)

$ make -j2

Build Multithreaded, need about 1gb of ram per thread.
-j (int, mutiple of of 2)   EXAMPLE: make -j4

DO NOT do just -j (no number) as that will use an unlimited
number of threads and crash your system.

$ make install


==============================
###  Miscellaneous Notes:  ###

# Create a wallet data folder (will reset everything):

$ mkdir -p ~/.ot && cp -R sample-data/ot-sample-data/* ~/.ot

# add to ~/.profile

export PKG_CONFIG_PATH=$HOMEBREW_PREFIX/lib/pkgconfig

# set PATH so it includes homebrew prefix
if [ -d "$HOMEBREW_PREFIX/bin" ] ; then
    PATH="$HOMEBREW_PREFIX/bin:$PATH"
fi

# to avoid logging out and then logging back in again, just do ...
$ source ~/.profile

# to run otserver
$ otserver

# for python client api support export env variable
$ export PYTHON_PATH=$HOMEBREW_PREFIX/lib:$PYTHON_PATH

==============================
