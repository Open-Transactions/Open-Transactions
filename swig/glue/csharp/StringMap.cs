/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace OpenTransactions.OTAPI {

public class StringMap : Storable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal StringMap(global::System.IntPtr cPtr, bool cMemoryOwn) : base(otapiPINVOKE.StringMap_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(StringMap obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~StringMap() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapiPINVOKE.delete_StringMap(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public MapStringString the_map {
    set {
      otapiPINVOKE.StringMap_the_map_set(swigCPtr, MapStringString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = otapiPINVOKE.StringMap_the_map_get(swigCPtr);
      MapStringString ret = (cPtr == global::System.IntPtr.Zero) ? null : new MapStringString(cPtr, false);
      return ret;
    } 
  }

  public void SetValue(string strKey, string strValue) {
    otapiPINVOKE.StringMap_SetValue(swigCPtr, strKey, strValue);
    if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public string GetValue(string strKey) {
    string ret = otapiPINVOKE.StringMap_GetValue(swigCPtr, strKey);
    if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new static StringMap ot_dynamic_cast(Storable pObject) {
    global::System.IntPtr cPtr = otapiPINVOKE.StringMap_ot_dynamic_cast(Storable.getCPtr(pObject));
    StringMap ret = (cPtr == global::System.IntPtr.Zero) ? null : new StringMap(cPtr, false);
    return ret;
  }

}

}
