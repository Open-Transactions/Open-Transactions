/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module otapi;

static import otapi_im;
static import tango.stdc.config;
static import tango.stdc.stringz;
static import tango.stdc.stringz;
static import tango.core.Exception;


class imaxdiv_t {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(imaxdiv_t obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_imaxdiv_t(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public void quot(long value) {
    otapi_im.imaxdiv_t_quot_set(cast(void*)swigCPtr, value);
  }

  public long quot() {
    auto ret = otapi_im.imaxdiv_t_quot_get(cast(void*)swigCPtr);
    return ret;
  }

  public void rem(long value) {
    otapi_im.imaxdiv_t_rem_set(cast(void*)swigCPtr, value);
  }

  public long rem() {
    auto ret = otapi_im.imaxdiv_t_rem_get(cast(void*)swigCPtr);
    return ret;
  }

  public this() {
    this(otapi_im.new_imaxdiv_t(), true);
  }
}

long imaxabs(long n) {
  auto ret = otapi_im.imaxabs(n);
  return ret;
}

imaxdiv_t imaxdiv(long numer, long denom) {
  imaxdiv_t ret = new imaxdiv_t(otapi_im.imaxdiv(numer, denom), true);
  return ret;
}

class VectorUnsignedChar {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(VectorUnsignedChar obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_VectorUnsignedChar(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public void clear() {
    otapi_im.VectorUnsignedChar_clear(cast(void*)swigCPtr);
  }

  public void push_back(ubyte x) {
    otapi_im.VectorUnsignedChar_push_back(cast(void*)swigCPtr, x);
  }

  public size_t size() {
    auto ret = otapi_im.VectorUnsignedChar_size(cast(void*)swigCPtr);
    return ret;
  }

  public size_t capacity() {
    auto ret = otapi_im.VectorUnsignedChar_capacity(cast(void*)swigCPtr);
    return ret;
  }

  public void reserve(size_t n) {
    otapi_im.VectorUnsignedChar_reserve(cast(void*)swigCPtr, n);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public this() {
    this(otapi_im.new_VectorUnsignedChar__SWIG_0(), true);
  }

  public this(VectorUnsignedChar other) {
    this(otapi_im.new_VectorUnsignedChar__SWIG_1(VectorUnsignedChar.swigGetCPtr(other)), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public this(size_t capacity) {
    this(otapi_im.new_VectorUnsignedChar__SWIG_2(capacity), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public size_t unused() {
    auto ret = otapi_im.VectorUnsignedChar_unused(cast(void*)swigCPtr);
    return ret;
  }

  public ubyte remove() {
    auto ret = otapi_im.VectorUnsignedChar_remove__SWIG_0(cast(void*)swigCPtr);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public ubyte remove(size_t index) {
    auto ret = otapi_im.VectorUnsignedChar_remove__SWIG_1(cast(void*)swigCPtr, index);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public ubyte getElement(size_t index) {
    auto ret = otapi_im.VectorUnsignedChar_getElement(cast(void*)swigCPtr, index);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void setElement(size_t index, ubyte val) {
    otapi_im.VectorUnsignedChar_setElement(cast(void*)swigCPtr, index, val);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public this(ubyte[] values) {
    this();
    append(values);
  }

  alias push_back add;
  alias push_back push;
  alias push_back opCatAssign;
  alias size length;
  alias opSlice slice;

  public ubyte opIndexAssign(ubyte value, size_t index) {
    if (index >= size()) {
      throw new tango.core.Exception.NoSuchElementException("Tried to assign to element out of vector bounds.");
    }
    setElement(index, value);
    return value;
  }

  public ubyte opIndex(size_t index) {
    if (index >= size()) {
      throw new tango.core.Exception.NoSuchElementException("Tried to read from element out of vector bounds.");
    }
    return getElement(index);
  }

  public void append(ubyte[] value...) {
    foreach (v; value) {
      add(v);
    }
  }

  public ubyte[] opSlice() {
    ubyte[] array = new ubyte[size()];
    foreach (i, ref value; array) {
      value = getElement(i);
    }
    return array;
  }

  public int opApply(int delegate(ref ubyte value) dg) {
    int result;

    size_t currentSize = size();
    for (size_t i = 0; i < currentSize; ++i) {
      auto value = getElement(i);
      result = dg(value);
      setElement(i, value);
    }
    return result;
  }

  public int opApply(int delegate(ref size_t index, ref ubyte value) dg) {
    int result;

    size_t currentSize = size();
    for (size_t i = 0; i < currentSize; ++i) {
      auto value = getElement(i);

      // Workaround for http://d.puremagic.com/issues/show_bug.cgi?id=2443.
      auto index = i;

      result = dg(index, value);
      setElement(i, value);
    }
    return result;
  }

  public void capacity(size_t value) {
    if (value < size()) {
      throw new tango.core.Exception.IllegalArgumentException("Tried to make the capacity of a vector smaller than its size.");
    }

    reserve(value);
  }
}

class MapStringString {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(MapStringString obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_MapStringString(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(otapi_im.new_MapStringString__SWIG_0(), true);
  }

  public this(MapStringString arg0) {
    this(otapi_im.new_MapStringString__SWIG_1(MapStringString.swigGetCPtr(arg0)), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public uint size() {
    auto ret = otapi_im.MapStringString_size(cast(void*)swigCPtr);
    return ret;
  }

  public bool empty() {
    bool ret = otapi_im.MapStringString_empty(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void clear() {
    otapi_im.MapStringString_clear(cast(void*)swigCPtr);
  }

  public char[] get(char[] key) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MapStringString_get(cast(void*)swigCPtr, (key ? tango.stdc.stringz.toStringz(key) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void set(char[] key, char[] x) {
    otapi_im.MapStringString_set(cast(void*)swigCPtr, (key ? tango.stdc.stringz.toStringz(key) : null), (x ? tango.stdc.stringz.toStringz(x) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public void del(char[] key) {
    otapi_im.MapStringString_del(cast(void*)swigCPtr, (key ? tango.stdc.stringz.toStringz(key) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public bool has_key(char[] key) {
    bool ret = otapi_im.MapStringString_has_key(cast(void*)swigCPtr, (key ? tango.stdc.stringz.toStringz(key) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }
}

char[] OT_PW_DISPLAY() {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_PW_DISPLAY_get());
  return ret;
}

int OTPASSWORD_BLOCKSIZE() {
  auto ret = otapi_im.OTPASSWORD_BLOCKSIZE_get();
  return ret;
}

int OTPASSWORD_MEMSIZE() {
  auto ret = otapi_im.OTPASSWORD_MEMSIZE_get();
  return ret;
}

int OT_LARGE_BLOCKSIZE() {
  auto ret = otapi_im.OT_LARGE_BLOCKSIZE_get();
  return ret;
}

int OT_LARGE_MEMSIZE() {
  auto ret = otapi_im.OT_LARGE_MEMSIZE_get();
  return ret;
}

int OT_DEFAULT_BLOCKSIZE() {
  auto ret = otapi_im.OT_DEFAULT_BLOCKSIZE_get();
  return ret;
}

int OT_DEFAULT_MEMSIZE() {
  auto ret = otapi_im.OT_DEFAULT_MEMSIZE_get();
  return ret;
}

class OTPassword {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(OTPassword obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OTPassword(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  enum BlockSize {
    DEFAULT_SIZE = 128,
    LARGER_SIZE = 32767
  }

  public OTPassword.BlockSize m_theBlockSize() {
    OTPassword.BlockSize ret = cast(OTPassword.BlockSize)otapi_im.OTPassword_m_theBlockSize_get(cast(void*)swigCPtr);
    return ret;
  }

  public bool isPassword() {
    bool ret = otapi_im.OTPassword_isPassword(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public ubyte* getPassword_uint8() {
    auto ret = cast(ubyte*)otapi_im.OTPassword_getPassword_uint8(cast(void*)swigCPtr);
    return ret;
  }

  public char[] getPassword() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTPassword_getPassword(cast(void*)swigCPtr));
    return ret;
  }

  public ubyte* getPasswordWritable() {
    auto ret = cast(ubyte*)otapi_im.OTPassword_getPasswordWritable(cast(void*)swigCPtr);
    return ret;
  }

  public char[] getPasswordWritable_char() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTPassword_getPasswordWritable_char(cast(void*)swigCPtr));
    return ret;
  }

  public int setPassword(char[] szInput, int nInputSize) {
    auto ret = otapi_im.OTPassword_setPassword(cast(void*)swigCPtr, (szInput ? tango.stdc.stringz.toStringz(szInput) : null), nInputSize);
    return ret;
  }

  public int setPassword_uint8(ubyte* szInput, uint nInputSize) {
    auto ret = otapi_im.OTPassword_setPassword_uint8(cast(void*)swigCPtr, cast(void*)szInput, nInputSize);
    return ret;
  }

  public bool addChar(ubyte theChar) {
    bool ret = otapi_im.OTPassword_addChar(cast(void*)swigCPtr, theChar) ? true : false;
    return ret;
  }

  public int randomizePassword(uint nNewSize) {
    auto ret = otapi_im.OTPassword_randomizePassword__SWIG_0(cast(void*)swigCPtr, nNewSize);
    return ret;
  }

  public int randomizePassword() {
    auto ret = otapi_im.OTPassword_randomizePassword__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public static bool randomizePassword_uint8(ubyte* szDestination, uint nNewSize) {
    bool ret = otapi_im.OTPassword_randomizePassword_uint8(cast(void*)szDestination, nNewSize) ? true : false;
    return ret;
  }

  public static bool randomizePassword(char[] szDestination, uint nNewSize) {
    bool ret = otapi_im.OTPassword_randomizePassword__SWIG_2((szDestination ? tango.stdc.stringz.toStringz(szDestination) : null), nNewSize) ? true : false;
    return ret;
  }

  public bool isMemory() {
    bool ret = otapi_im.OTPassword_isMemory(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void* getMemory() {
    auto ret = cast(void*)otapi_im.OTPassword_getMemory(cast(void*)swigCPtr);
    return ret;
  }

  public ubyte* getMemory_uint8() {
    auto ret = cast(ubyte*)otapi_im.OTPassword_getMemory_uint8(cast(void*)swigCPtr);
    return ret;
  }

  public void* getMemoryWritable() {
    auto ret = cast(void*)otapi_im.OTPassword_getMemoryWritable(cast(void*)swigCPtr);
    return ret;
  }

  public int setMemory(void* vInput, uint nInputSize) {
    auto ret = otapi_im.OTPassword_setMemory(cast(void*)swigCPtr, cast(void*)vInput, nInputSize);
    return ret;
  }

  public int addMemory(void* vAppend, uint nAppendSize) {
    auto ret = otapi_im.OTPassword_addMemory(cast(void*)swigCPtr, cast(void*)vAppend, nAppendSize);
    return ret;
  }

  public int randomizeMemory(uint nNewSize) {
    auto ret = otapi_im.OTPassword_randomizeMemory__SWIG_0(cast(void*)swigCPtr, nNewSize);
    return ret;
  }

  public int randomizeMemory() {
    auto ret = otapi_im.OTPassword_randomizeMemory__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public static bool randomizeMemory_uint8(ubyte* szDestination, uint nNewSize) {
    bool ret = otapi_im.OTPassword_randomizeMemory_uint8(cast(void*)szDestination, nNewSize) ? true : false;
    return ret;
  }

  public static bool randomizeMemory(void* szDestination, uint nNewSize) {
    bool ret = otapi_im.OTPassword_randomizeMemory__SWIG_2(cast(void*)szDestination, nNewSize) ? true : false;
    return ret;
  }

  public uint getBlockSize() {
    auto ret = otapi_im.OTPassword_getBlockSize(cast(void*)swigCPtr);
    return ret;
  }

  public bool Compare(OTPassword rhs) {
    bool ret = otapi_im.OTPassword_Compare(cast(void*)swigCPtr, OTPassword.swigGetCPtr(rhs)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public uint getPasswordSize() {
    auto ret = otapi_im.OTPassword_getPasswordSize(cast(void*)swigCPtr);
    return ret;
  }

  public uint getMemorySize() {
    auto ret = otapi_im.OTPassword_getMemorySize(cast(void*)swigCPtr);
    return ret;
  }

  public void zeroMemory() {
    otapi_im.OTPassword_zeroMemory__SWIG_0(cast(void*)swigCPtr);
  }

  public static void zeroMemory(ubyte* szMemory, uint theSize) {
    otapi_im.OTPassword_zeroMemory__SWIG_1(cast(void*)szMemory, theSize);
  }

  public static void zeroMemory(void* vMemory, uint theSize) {
    otapi_im.OTPassword_zeroMemory__SWIG_2(cast(void*)vMemory, theSize);
  }

  public static void* safe_memcpy(void* dest, uint dest_size, void* src, uint src_length, bool bZeroSource) {
    auto ret = cast(void*)otapi_im.OTPassword_safe_memcpy__SWIG_0(cast(void*)dest, dest_size, cast(void*)src, src_length, bZeroSource);
    return ret;
  }

  public static void* safe_memcpy(void* dest, uint dest_size, void* src, uint src_length) {
    auto ret = cast(void*)otapi_im.OTPassword_safe_memcpy__SWIG_1(cast(void*)dest, dest_size, cast(void*)src, src_length);
    return ret;
  }

  public static OTPassword CreateTextBuffer() {
    void* cPtr = otapi_im.OTPassword_CreateTextBuffer();
    OTPassword ret = (cPtr is null) ? null : new OTPassword(cPtr, false);
    return ret;
  }

  public bool SetSize(uint uSize) {
    bool ret = otapi_im.OTPassword_SetSize(cast(void*)swigCPtr, uSize) ? true : false;
    return ret;
  }

  public this(OTPassword.BlockSize theBlockSize) {
    this(otapi_im.new_OTPassword__SWIG_0(cast(int)theBlockSize), true);
  }

  public this() {
    this(otapi_im.new_OTPassword__SWIG_1(), true);
  }

  public this(OTPassword rhs) {
    this(otapi_im.new_OTPassword__SWIG_2(OTPassword.swigGetCPtr(rhs)), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public this(char[] szInput, uint nInputSize, OTPassword.BlockSize theBlockSize) {
    this(otapi_im.new_OTPassword__SWIG_3((szInput ? tango.stdc.stringz.toStringz(szInput) : null), nInputSize, cast(int)theBlockSize), true);
  }

  public this(char[] szInput, uint nInputSize) {
    this(otapi_im.new_OTPassword__SWIG_4((szInput ? tango.stdc.stringz.toStringz(szInput) : null), nInputSize), true);
  }

  public this(ubyte* szInput, uint nInputSize, OTPassword.BlockSize theBlockSize) {
    this(otapi_im.new_OTPassword__SWIG_5(cast(void*)szInput, nInputSize, cast(int)theBlockSize), true);
  }

  public this(ubyte* szInput, uint nInputSize) {
    this(otapi_im.new_OTPassword__SWIG_6(cast(void*)szInput, nInputSize), true);
  }

  public this(void* vInput, uint nInputSize, OTPassword.BlockSize theBlockSize) {
    this(otapi_im.new_OTPassword__SWIG_7(cast(void*)vInput, nInputSize, cast(int)theBlockSize), true);
  }

  public this(void* vInput, uint nInputSize) {
    this(otapi_im.new_OTPassword__SWIG_8(cast(void*)vInput, nInputSize), true);
  }
}

class OTCallback {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(OTCallback obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OTCallback(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(otapi_im.new_OTCallback(), true);
    swigDirectorConnect();
  }

  public void runOne(char[] szDisplay, OTPassword theOutput) {
    if (swigIsMethodOverridden!(void delegate(char[], OTPassword), void function(char[], OTPassword), runOne)()) otapi_im.OTCallback_runOneSwigExplicitOTCallback(cast(void*)swigCPtr, (szDisplay ? tango.stdc.stringz.toStringz(szDisplay) : null), OTPassword.swigGetCPtr(theOutput)); else otapi_im.OTCallback_runOne(cast(void*)swigCPtr, (szDisplay ? tango.stdc.stringz.toStringz(szDisplay) : null), OTPassword.swigGetCPtr(theOutput));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public void runTwo(char[] szDisplay, OTPassword theOutput) {
    if (swigIsMethodOverridden!(void delegate(char[], OTPassword), void function(char[], OTPassword), runTwo)()) otapi_im.OTCallback_runTwoSwigExplicitOTCallback(cast(void*)swigCPtr, (szDisplay ? tango.stdc.stringz.toStringz(szDisplay) : null), OTPassword.swigGetCPtr(theOutput)); else otapi_im.OTCallback_runTwo(cast(void*)swigCPtr, (szDisplay ? tango.stdc.stringz.toStringz(szDisplay) : null), OTPassword.swigGetCPtr(theOutput));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  private void swigDirectorConnect() {
    otapi_im.SwigDirector_OTCallback_Callback0 callback0;
    if (swigIsMethodOverridden!(void delegate(char[], OTPassword), void function(char[], OTPassword), runOne)()) {
      callback0 = &swigDirectorCallback_OTCallback_runOne;
    }

    otapi_im.SwigDirector_OTCallback_Callback1 callback1;
    if (swigIsMethodOverridden!(void delegate(char[], OTPassword), void function(char[], OTPassword), runTwo)()) {
      callback1 = &swigDirectorCallback_OTCallback_runTwo;
    }

    otapi_im.OTCallback_director_connect(cast(void*)swigCPtr, cast(void*)this, callback0, callback1);
  }

  private bool swigIsMethodOverridden(DelegateType, FunctionType, alias fn)() {
    DelegateType dg = &fn;
    return dg.funcptr != SwigNonVirtualAddressOf!(FunctionType, fn);
  }

  private static Function SwigNonVirtualAddressOf(Function, alias fn)() {
    return cast(Function) &fn;
  }
}

private extern(C) void swigDirectorCallback_OTCallback_runOne(void* dObject, char* szDisplay, void* theOutput) {
  (cast(OTCallback)dObject).runOne(tango.stdc.stringz.fromStringz(szDisplay), new OTPassword(theOutput, false));
}

private extern(C) void swigDirectorCallback_OTCallback_runTwo(void* dObject, char* szDisplay, void* theOutput) {
  (cast(OTCallback)dObject).runTwo(tango.stdc.stringz.fromStringz(szDisplay), new OTPassword(theOutput, false));
}

class OTCaller {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(OTCaller obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OTCaller(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(otapi_im.new_OTCaller(), true);
  }

  public bool GetPassword(OTPassword theOutput) {
    bool ret = otapi_im.OTCaller_GetPassword(cast(void*)swigCPtr, OTPassword.swigGetCPtr(theOutput)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void ZeroOutPassword() {
    otapi_im.OTCaller_ZeroOutPassword(cast(void*)swigCPtr);
  }

  public char[] GetDisplay() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTCaller_GetDisplay(cast(void*)swigCPtr));
    return ret;
  }

  public void SetDisplay(char[] szDisplay, int nLength) {
    otapi_im.OTCaller_SetDisplay(cast(void*)swigCPtr, (szDisplay ? tango.stdc.stringz.toStringz(szDisplay) : null), nLength);
  }

  public void delCallback() {
    otapi_im.OTCaller_delCallback(cast(void*)swigCPtr);
  }

  public void setCallback(OTCallback cb) {
    otapi_im.OTCaller_setCallback(cast(void*)swigCPtr, OTCallback.swigGetCPtr(cb));
  }

  public bool isCallbackSet() {
    bool ret = otapi_im.OTCaller_isCallbackSet(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void callOne() {
    otapi_im.OTCaller_callOne(cast(void*)swigCPtr);
  }

  public void callTwo() {
    otapi_im.OTCaller_callTwo(cast(void*)swigCPtr);
  }
}

class WrapTimeT {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(WrapTimeT obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_WrapTimeT(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(otapi_im.new_WrapTimeT(), true);
  }

  public long getTime() {
    auto ret = otapi_im.WrapTimeT_getTime(cast(void*)swigCPtr);
    return ret;
  }

  public void setTime(long _time) {
    otapi_im.WrapTimeT_setTime(cast(void*)swigCPtr, _time);
  }
}

class OTAPI_Wrap {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(OTAPI_Wrap obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
      }
    }
  }

  public static SWIGTYPE_p_OTAPI_Exec SetExecutor(SWIGTYPE_p_OTAPI_Exec exec) {
    void* cPtr = otapi_im.OTAPI_Wrap_SetExecutor(SWIGTYPE_p_OTAPI_Exec.swigGetCPtr(exec));
    SWIGTYPE_p_OTAPI_Exec ret = (cPtr is null) ? null : new SWIGTYPE_p_OTAPI_Exec(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_OTAPI_Exec Exec() {
    void* cPtr = otapi_im.OTAPI_Wrap_Exec();
    SWIGTYPE_p_OTAPI_Exec ret = (cPtr is null) ? null : new SWIGTYPE_p_OTAPI_Exec(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_OTAPI_Exec It() {
    void* cPtr = otapi_im.OTAPI_Wrap_It();
    SWIGTYPE_p_OTAPI_Exec ret = (cPtr is null) ? null : new SWIGTYPE_p_OTAPI_Exec(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_OT_API OTAPI() {
    void* cPtr = otapi_im.OTAPI_Wrap_OTAPI();
    SWIGTYPE_p_OT_API ret = (cPtr is null) ? null : new SWIGTYPE_p_OT_API(cPtr, false);
    return ret;
  }

  public static long StringToLong(char[] strNumber) {
    auto ret = otapi_im.OTAPI_Wrap_StringToLong((strNumber ? tango.stdc.stringz.toStringz(strNumber) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LongToString(long lNumber) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LongToString(lNumber));
    return ret;
  }

  public static ulong StringToUlong(char[] strNumber) {
    auto ret = otapi_im.OTAPI_Wrap_StringToUlong((strNumber ? tango.stdc.stringz.toStringz(strNumber) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] UlongToString(ulong lNumber) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_UlongToString(lNumber));
    return ret;
  }

  public static bool AppInit() {
    bool ret = otapi_im.OTAPI_Wrap_AppInit() ? true : false;
    return ret;
  }

  public static bool AppCleanup() {
    bool ret = otapi_im.OTAPI_Wrap_AppCleanup() ? true : false;
    return ret;
  }

  public static void SetAppBinaryFolder(char[] strFolder) {
    otapi_im.OTAPI_Wrap_SetAppBinaryFolder((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public static void SetHomeFolder(char[] strFolder) {
    otapi_im.OTAPI_Wrap_SetHomeFolder((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public static bool SetWallet(char[] strWalletFilename) {
    bool ret = otapi_im.OTAPI_Wrap_SetWallet((strWalletFilename ? tango.stdc.stringz.toStringz(strWalletFilename) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool WalletExists() {
    bool ret = otapi_im.OTAPI_Wrap_WalletExists() ? true : false;
    return ret;
  }

  public static bool LoadWallet() {
    bool ret = otapi_im.OTAPI_Wrap_LoadWallet() ? true : false;
    return ret;
  }

  public static bool SwitchWallet() {
    bool ret = otapi_im.OTAPI_Wrap_SwitchWallet() ? true : false;
    return ret;
  }

  public static void Output(int nLogLevel, char[] strOutput) {
    otapi_im.OTAPI_Wrap_Output(nLogLevel, (strOutput ? tango.stdc.stringz.toStringz(strOutput) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public static WrapTimeT GetTime() {
    WrapTimeT ret = new WrapTimeT(otapi_im.OTAPI_Wrap_GetTime(), true);
    return ret;
  }

  public static char[] NumList_Add(char[] strNumList, char[] strNumbers) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_NumList_Add((strNumList ? tango.stdc.stringz.toStringz(strNumList) : null), (strNumbers ? tango.stdc.stringz.toStringz(strNumbers) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] NumList_Remove(char[] strNumList, char[] strNumbers) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_NumList_Remove((strNumList ? tango.stdc.stringz.toStringz(strNumList) : null), (strNumbers ? tango.stdc.stringz.toStringz(strNumbers) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool NumList_VerifyQuery(char[] strNumList, char[] strNumbers) {
    bool ret = otapi_im.OTAPI_Wrap_NumList_VerifyQuery((strNumList ? tango.stdc.stringz.toStringz(strNumList) : null), (strNumbers ? tango.stdc.stringz.toStringz(strNumbers) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool NumList_VerifyAll(char[] strNumList, char[] strNumbers) {
    bool ret = otapi_im.OTAPI_Wrap_NumList_VerifyAll((strNumList ? tango.stdc.stringz.toStringz(strNumList) : null), (strNumbers ? tango.stdc.stringz.toStringz(strNumbers) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int NumList_Count(char[] strNumList) {
    auto ret = otapi_im.OTAPI_Wrap_NumList_Count((strNumList ? tango.stdc.stringz.toStringz(strNumList) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Encode(char[] strPlaintext, bool bLineBreaks) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Encode((strPlaintext ? tango.stdc.stringz.toStringz(strPlaintext) : null), bLineBreaks));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Decode(char[] strEncoded, bool bLineBreaks) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Decode((strEncoded ? tango.stdc.stringz.toStringz(strEncoded) : null), bLineBreaks));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Encrypt(char[] RECIPIENT_NYM_ID, char[] strPlaintext) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Encrypt((RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (strPlaintext ? tango.stdc.stringz.toStringz(strPlaintext) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Decrypt(char[] RECIPIENT_NYM_ID, char[] strCiphertext) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Decrypt((RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (strCiphertext ? tango.stdc.stringz.toStringz(strCiphertext) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] CreateSymmetricKey() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_CreateSymmetricKey());
    return ret;
  }

  public static char[] SymmetricEncrypt(char[] SYMMETRIC_KEY, char[] PLAintEXT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SymmetricEncrypt((SYMMETRIC_KEY ? tango.stdc.stringz.toStringz(SYMMETRIC_KEY) : null), (PLAintEXT ? tango.stdc.stringz.toStringz(PLAintEXT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SymmetricDecrypt(char[] SYMMETRIC_KEY, char[] CIPHERTEXT_ENVELOPE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SymmetricDecrypt((SYMMETRIC_KEY ? tango.stdc.stringz.toStringz(SYMMETRIC_KEY) : null), (CIPHERTEXT_ENVELOPE ? tango.stdc.stringz.toStringz(CIPHERTEXT_ENVELOPE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SignContract(char[] SIGNER_NYM_ID, char[] THE_CONTRACT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SignContract((SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] FlatSign(char[] SIGNER_NYM_ID, char[] THE_INPUT, char[] CONTRACT_TYPE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_FlatSign((SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (THE_INPUT ? tango.stdc.stringz.toStringz(THE_INPUT) : null), (CONTRACT_TYPE ? tango.stdc.stringz.toStringz(CONTRACT_TYPE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] AddSignature(char[] SIGNER_NYM_ID, char[] THE_CONTRACT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_AddSignature((SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool VerifySignature(char[] SIGNER_NYM_ID, char[] THE_CONTRACT) {
    bool ret = otapi_im.OTAPI_Wrap_VerifySignature((SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] VerifyAndRetrieveXMLContents(char[] THE_CONTRACT, char[] SIGNER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_VerifyAndRetrieveXMLContents((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_ID ? tango.stdc.stringz.toStringz(SIGNER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetMemlogSize() {
    auto ret = otapi_im.OTAPI_Wrap_GetMemlogSize();
    return ret;
  }

  public static char[] GetMemlogAtIndex(int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetMemlogAtIndex(nIndex));
    return ret;
  }

  public static char[] PeekMemlogFront() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_PeekMemlogFront());
    return ret;
  }

  public static char[] PeekMemlogBack() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_PeekMemlogBack());
    return ret;
  }

  public static bool PopMemlogFront() {
    bool ret = otapi_im.OTAPI_Wrap_PopMemlogFront() ? true : false;
    return ret;
  }

  public static bool PopMemlogBack() {
    bool ret = otapi_im.OTAPI_Wrap_PopMemlogBack() ? true : false;
    return ret;
  }

  public static char[] CreateNym(int nKeySize, char[] NYM_ID_SOURCE, char[] ALT_LOCATION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_CreateNym(nKeySize, (NYM_ID_SOURCE ? tango.stdc.stringz.toStringz(NYM_ID_SOURCE) : null), (ALT_LOCATION ? tango.stdc.stringz.toStringz(ALT_LOCATION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_ActiveCronItemIDs(char[] NYM_ID, char[] SERVER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_ActiveCronItemIDs((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetActiveCronItem(char[] SERVER_ID, long lTransNum) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetActiveCronItem((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), lTransNum));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_SourceForID(char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_SourceForID((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_AltSourceLocation(char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_AltSourceLocation((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetNym_CredentialCount(char[] NYM_ID) {
    auto ret = otapi_im.OTAPI_Wrap_GetNym_CredentialCount((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_CredentialID(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_CredentialID((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_CredentialContents(char[] NYM_ID, char[] CREDENTIAL_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_CredentialContents((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (CREDENTIAL_ID ? tango.stdc.stringz.toStringz(CREDENTIAL_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetNym_RevokedCredCount(char[] NYM_ID) {
    auto ret = otapi_im.OTAPI_Wrap_GetNym_RevokedCredCount((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_RevokedCredID(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_RevokedCredID((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_RevokedCredContents(char[] NYM_ID, char[] CREDENTIAL_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_RevokedCredContents((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (CREDENTIAL_ID ? tango.stdc.stringz.toStringz(CREDENTIAL_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetNym_SubcredentialCount(char[] NYM_ID, char[] MASTER_CRED_ID) {
    auto ret = otapi_im.OTAPI_Wrap_GetNym_SubcredentialCount((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (MASTER_CRED_ID ? tango.stdc.stringz.toStringz(MASTER_CRED_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_SubCredentialID(char[] NYM_ID, char[] MASTER_CRED_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_SubCredentialID((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (MASTER_CRED_ID ? tango.stdc.stringz.toStringz(MASTER_CRED_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_SubCredentialContents(char[] NYM_ID, char[] MASTER_CRED_ID, char[] SUB_CRED_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_SubCredentialContents((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (MASTER_CRED_ID ? tango.stdc.stringz.toStringz(MASTER_CRED_ID) : null), (SUB_CRED_ID ? tango.stdc.stringz.toStringz(SUB_CRED_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] AddSubcredential(char[] NYM_ID, char[] MASTER_CRED_ID, int nKeySize) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_AddSubcredential((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (MASTER_CRED_ID ? tango.stdc.stringz.toStringz(MASTER_CRED_ID) : null), nKeySize));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool RevokeSubcredential(char[] NYM_ID, char[] MASTER_CRED_ID, char[] SUB_CRED_ID) {
    bool ret = otapi_im.OTAPI_Wrap_RevokeSubcredential((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (MASTER_CRED_ID ? tango.stdc.stringz.toStringz(MASTER_CRED_ID) : null), (SUB_CRED_ID ? tango.stdc.stringz.toStringz(SUB_CRED_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] CreateServerContract(char[] NYM_ID, char[] strXMLcontents) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_CreateServerContract((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (strXMLcontents ? tango.stdc.stringz.toStringz(strXMLcontents) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] CreateAssetContract(char[] NYM_ID, char[] strXMLcontents) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_CreateAssetContract((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (strXMLcontents ? tango.stdc.stringz.toStringz(strXMLcontents) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] CalculateAssetContractID(char[] str_Contract) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_CalculateAssetContractID((str_Contract ? tango.stdc.stringz.toStringz(str_Contract) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] CalculateServerContractID(char[] str_Contract) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_CalculateServerContractID((str_Contract ? tango.stdc.stringz.toStringz(str_Contract) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int AddServerContract(char[] strContract) {
    auto ret = otapi_im.OTAPI_Wrap_AddServerContract((strContract ? tango.stdc.stringz.toStringz(strContract) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int AddAssetContract(char[] strContract) {
    auto ret = otapi_im.OTAPI_Wrap_AddAssetContract((strContract ? tango.stdc.stringz.toStringz(strContract) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetServerCount() {
    auto ret = otapi_im.OTAPI_Wrap_GetServerCount();
    return ret;
  }

  public static int GetAssetTypeCount() {
    auto ret = otapi_im.OTAPI_Wrap_GetAssetTypeCount();
    return ret;
  }

  public static int GetAccountCount() {
    auto ret = otapi_im.OTAPI_Wrap_GetAccountCount();
    return ret;
  }

  public static int GetNymCount() {
    auto ret = otapi_im.OTAPI_Wrap_GetNymCount();
    return ret;
  }

  public static char[] GetServer_ID(int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetServer_ID(nIndex));
    return ret;
  }

  public static char[] GetServer_Name(char[] SERVER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetServer_Name((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetServer_Contract(char[] SERVER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetServer_Contract((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] FormatAmount(char[] ASSET_TYPE_ID, long THE_AMOUNT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_FormatAmount((ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), THE_AMOUNT));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long StringToAmount(char[] ASSET_TYPE_ID, char[] str_input) {
    auto ret = otapi_im.OTAPI_Wrap_StringToAmount((ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (str_input ? tango.stdc.stringz.toStringz(str_input) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAssetType_ID(int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAssetType_ID(nIndex));
    return ret;
  }

  public static char[] GetAssetType_Name(char[] ASSET_TYPE_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAssetType_Name((ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAssetType_TLA(char[] ASSET_TYPE_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAssetType_TLA((ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAssetType_Contract(char[] ASSET_TYPE_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAssetType_Contract((ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAccountWallet_ID(int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAccountWallet_ID(nIndex));
    return ret;
  }

  public static char[] GetAccountWallet_Name(char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAccountWallet_Name((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long GetAccountWallet_Balance(char[] ACCOUNT_ID) {
    auto ret = otapi_im.OTAPI_Wrap_GetAccountWallet_Balance((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAccountWallet_Type(char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAccountWallet_Type((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAccountWallet_AssetTypeID(char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAccountWallet_AssetTypeID((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAccountWallet_ServerID(char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAccountWallet_ServerID((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAccountWallet_NymID(char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAccountWallet_NymID((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAccountWallet_InboxHash(char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAccountWallet_InboxHash((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetAccountWallet_OutboxHash(char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetAccountWallet_OutboxHash((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool VerifyAccountReceipt(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID) {
    bool ret = otapi_im.OTAPI_Wrap_VerifyAccountReceipt((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetNym_TransactionNumCount(char[] SERVER_ID, char[] NYM_ID) {
    auto ret = otapi_im.OTAPI_Wrap_GetNym_TransactionNumCount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_ID(int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_ID(nIndex));
    return ret;
  }

  public static char[] GetNym_Name(char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_Name((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_Stats(char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_Stats((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_NymboxHash(char[] SERVER_ID, char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_NymboxHash((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_RecentHash(char[] SERVER_ID, char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_RecentHash((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_InboxHash(char[] ACCOUNT_ID, char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_InboxHash((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_OutboxHash(char[] ACCOUNT_ID, char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_OutboxHash((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool IsNym_RegisteredAtServer(char[] NYM_ID, char[] SERVER_ID) {
    bool ret = otapi_im.OTAPI_Wrap_IsNym_RegisteredAtServer((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetNym_MailCount(char[] NYM_ID) {
    auto ret = otapi_im.OTAPI_Wrap_GetNym_MailCount((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_MailContentsByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_MailContentsByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_MailSenderIDByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_MailSenderIDByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_MailServerIDByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_MailServerIDByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Nym_RemoveMailByIndex(char[] NYM_ID, int nIndex) {
    bool ret = otapi_im.OTAPI_Wrap_Nym_RemoveMailByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Nym_VerifyMailByIndex(char[] NYM_ID, int nIndex) {
    bool ret = otapi_im.OTAPI_Wrap_Nym_VerifyMailByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetNym_OutmailCount(char[] NYM_ID) {
    auto ret = otapi_im.OTAPI_Wrap_GetNym_OutmailCount((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_OutmailContentsByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_OutmailContentsByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_OutmailRecipientIDByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_OutmailRecipientIDByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_OutmailServerIDByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_OutmailServerIDByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Nym_RemoveOutmailByIndex(char[] NYM_ID, int nIndex) {
    bool ret = otapi_im.OTAPI_Wrap_Nym_RemoveOutmailByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Nym_VerifyOutmailByIndex(char[] NYM_ID, int nIndex) {
    bool ret = otapi_im.OTAPI_Wrap_Nym_VerifyOutmailByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int GetNym_OutpaymentsCount(char[] NYM_ID) {
    auto ret = otapi_im.OTAPI_Wrap_GetNym_OutpaymentsCount((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_OutpaymentsContentsByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_OutpaymentsContentsByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_OutpaymentsRecipientIDByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_OutpaymentsRecipientIDByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GetNym_OutpaymentsServerIDByIndex(char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetNym_OutpaymentsServerIDByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Nym_RemoveOutpaymentsByIndex(char[] NYM_ID, int nIndex) {
    bool ret = otapi_im.OTAPI_Wrap_Nym_RemoveOutpaymentsByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Nym_VerifyOutpaymentsByIndex(char[] NYM_ID, int nIndex) {
    bool ret = otapi_im.OTAPI_Wrap_Nym_VerifyOutpaymentsByIndex((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_CanRemoveServer(char[] SERVER_ID) {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_CanRemoveServer((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_RemoveServer(char[] SERVER_ID) {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_RemoveServer((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_CanRemoveAssetType(char[] ASSET_ID) {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_CanRemoveAssetType((ASSET_ID ? tango.stdc.stringz.toStringz(ASSET_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_RemoveAssetType(char[] ASSET_ID) {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_RemoveAssetType((ASSET_ID ? tango.stdc.stringz.toStringz(ASSET_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_CanRemoveNym(char[] NYM_ID) {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_CanRemoveNym((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_RemoveNym(char[] NYM_ID) {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_RemoveNym((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_CanRemoveAccount(char[] ACCOUNT_ID) {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_CanRemoveAccount((ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_ChangePassphrase() {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_ChangePassphrase() ? true : false;
    return ret;
  }

  public static char[] Wallet_ExportNym(char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Wallet_ExportNym((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Wallet_ImportNym(char[] FILE_CONTENTS) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Wallet_ImportNym((FILE_CONTENTS ? tango.stdc.stringz.toStringz(FILE_CONTENTS) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Wallet_ImportCert(char[] DISPLAY_NAME, char[] FILE_CONTENTS) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Wallet_ImportCert((DISPLAY_NAME ? tango.stdc.stringz.toStringz(DISPLAY_NAME) : null), (FILE_CONTENTS ? tango.stdc.stringz.toStringz(FILE_CONTENTS) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Wallet_ExportCert(char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Wallet_ExportCert((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Wallet_GetNymIDFromPartial(char[] PARTIAL_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Wallet_GetNymIDFromPartial((PARTIAL_ID ? tango.stdc.stringz.toStringz(PARTIAL_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Wallet_GetServerIDFromPartial(char[] PARTIAL_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Wallet_GetServerIDFromPartial((PARTIAL_ID ? tango.stdc.stringz.toStringz(PARTIAL_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Wallet_GetAssetIDFromPartial(char[] PARTIAL_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Wallet_GetAssetIDFromPartial((PARTIAL_ID ? tango.stdc.stringz.toStringz(PARTIAL_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Wallet_GetAccountIDFromPartial(char[] PARTIAL_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Wallet_GetAccountIDFromPartial((PARTIAL_ID ? tango.stdc.stringz.toStringz(PARTIAL_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool SetNym_Name(char[] NYM_ID, char[] SIGNER_NYM_ID, char[] NYM_NEW_NAME) {
    bool ret = otapi_im.OTAPI_Wrap_SetNym_Name((NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (NYM_NEW_NAME ? tango.stdc.stringz.toStringz(NYM_NEW_NAME) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool SetAccountWallet_Name(char[] ACCT_ID, char[] SIGNER_NYM_ID, char[] ACCT_NEW_NAME) {
    bool ret = otapi_im.OTAPI_Wrap_SetAccountWallet_Name((ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (ACCT_NEW_NAME ? tango.stdc.stringz.toStringz(ACCT_NEW_NAME) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool SetAssetType_Name(char[] ASSET_ID, char[] STR_NEW_NAME) {
    bool ret = otapi_im.OTAPI_Wrap_SetAssetType_Name((ASSET_ID ? tango.stdc.stringz.toStringz(ASSET_ID) : null), (STR_NEW_NAME ? tango.stdc.stringz.toStringz(STR_NEW_NAME) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool SetServer_Name(char[] SERVER_ID, char[] STR_NEW_NAME) {
    bool ret = otapi_im.OTAPI_Wrap_SetServer_Name((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (STR_NEW_NAME ? tango.stdc.stringz.toStringz(STR_NEW_NAME) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] WriteCheque(char[] SERVER_ID, long CHEQUE_AMOUNT, WrapTimeT VALID_FROM, WrapTimeT VALID_TO, char[] SENDER_ACCT_ID, char[] SENDER_USER_ID, char[] CHEQUE_MEMO, char[] RECIPIENT_USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_WriteCheque((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), CHEQUE_AMOUNT, WrapTimeT.swigGetCPtr(VALID_FROM), WrapTimeT.swigGetCPtr(VALID_TO), (SENDER_ACCT_ID ? tango.stdc.stringz.toStringz(SENDER_ACCT_ID) : null), (SENDER_USER_ID ? tango.stdc.stringz.toStringz(SENDER_USER_ID) : null), (CHEQUE_MEMO ? tango.stdc.stringz.toStringz(CHEQUE_MEMO) : null), (RECIPIENT_USER_ID ? tango.stdc.stringz.toStringz(RECIPIENT_USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool DiscardCheque(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID, char[] THE_CHEQUE) {
    bool ret = otapi_im.OTAPI_Wrap_DiscardCheque((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (THE_CHEQUE ? tango.stdc.stringz.toStringz(THE_CHEQUE) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] ProposePaymentPlan(char[] SERVER_ID, WrapTimeT VALID_FROM, WrapTimeT VALID_TO, char[] SENDER_ACCT_ID, char[] SENDER_USER_ID, char[] PLAN_CONSIDERATION, char[] RECIPIENT_ACCT_ID, char[] RECIPIENT_USER_ID, long INITIAL_PAYMENT_AMOUNT, WrapTimeT INITIAL_PAYMENT_DELAY, long PAYMENT_PLAN_AMOUNT, WrapTimeT PAYMENT_PLAN_DELAY, WrapTimeT PAYMENT_PLAN_PERIOD, WrapTimeT PAYMENT_PLAN_LENGTH, int PAYMENT_PLAN_MAX_PAYMENTS) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_ProposePaymentPlan((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), WrapTimeT.swigGetCPtr(VALID_FROM), WrapTimeT.swigGetCPtr(VALID_TO), (SENDER_ACCT_ID ? tango.stdc.stringz.toStringz(SENDER_ACCT_ID) : null), (SENDER_USER_ID ? tango.stdc.stringz.toStringz(SENDER_USER_ID) : null), (PLAN_CONSIDERATION ? tango.stdc.stringz.toStringz(PLAN_CONSIDERATION) : null), (RECIPIENT_ACCT_ID ? tango.stdc.stringz.toStringz(RECIPIENT_ACCT_ID) : null), (RECIPIENT_USER_ID ? tango.stdc.stringz.toStringz(RECIPIENT_USER_ID) : null), INITIAL_PAYMENT_AMOUNT, WrapTimeT.swigGetCPtr(INITIAL_PAYMENT_DELAY), PAYMENT_PLAN_AMOUNT, WrapTimeT.swigGetCPtr(PAYMENT_PLAN_DELAY), WrapTimeT.swigGetCPtr(PAYMENT_PLAN_PERIOD), WrapTimeT.swigGetCPtr(PAYMENT_PLAN_LENGTH), PAYMENT_PLAN_MAX_PAYMENTS));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] EasyProposePlan(char[] SERVER_ID, char[] DATE_RANGE, char[] SENDER_ACCT_ID, char[] SENDER_USER_ID, char[] PLAN_CONSIDERATION, char[] RECIPIENT_ACCT_ID, char[] RECIPIENT_USER_ID, char[] INITIAL_PAYMENT, char[] PAYMENT_PLAN, char[] PLAN_EXPIRY) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_EasyProposePlan((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (DATE_RANGE ? tango.stdc.stringz.toStringz(DATE_RANGE) : null), (SENDER_ACCT_ID ? tango.stdc.stringz.toStringz(SENDER_ACCT_ID) : null), (SENDER_USER_ID ? tango.stdc.stringz.toStringz(SENDER_USER_ID) : null), (PLAN_CONSIDERATION ? tango.stdc.stringz.toStringz(PLAN_CONSIDERATION) : null), (RECIPIENT_ACCT_ID ? tango.stdc.stringz.toStringz(RECIPIENT_ACCT_ID) : null), (RECIPIENT_USER_ID ? tango.stdc.stringz.toStringz(RECIPIENT_USER_ID) : null), (INITIAL_PAYMENT ? tango.stdc.stringz.toStringz(INITIAL_PAYMENT) : null), (PAYMENT_PLAN ? tango.stdc.stringz.toStringz(PAYMENT_PLAN) : null), (PLAN_EXPIRY ? tango.stdc.stringz.toStringz(PLAN_EXPIRY) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] ConfirmPaymentPlan(char[] SERVER_ID, char[] SENDER_USER_ID, char[] SENDER_ACCT_ID, char[] RECIPIENT_USER_ID, char[] PAYMENT_PLAN) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_ConfirmPaymentPlan((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (SENDER_USER_ID ? tango.stdc.stringz.toStringz(SENDER_USER_ID) : null), (SENDER_ACCT_ID ? tango.stdc.stringz.toStringz(SENDER_ACCT_ID) : null), (RECIPIENT_USER_ID ? tango.stdc.stringz.toStringz(RECIPIENT_USER_ID) : null), (PAYMENT_PLAN ? tango.stdc.stringz.toStringz(PAYMENT_PLAN) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Create_SmartContract(char[] SIGNER_NYM_ID, WrapTimeT VALID_FROM, WrapTimeT VALID_TO) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Create_SmartContract((SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), WrapTimeT.swigGetCPtr(VALID_FROM), WrapTimeT.swigGetCPtr(VALID_TO)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_AddBylaw(char[] THE_CONTRACT, char[] SIGNER_NYM_ID, char[] BYLAW_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_AddBylaw((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_AddClause(char[] THE_CONTRACT, char[] SIGNER_NYM_ID, char[] BYLAW_NAME, char[] CLAUSE_NAME, char[] SOURCE_CODE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_AddClause((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (CLAUSE_NAME ? tango.stdc.stringz.toStringz(CLAUSE_NAME) : null), (SOURCE_CODE ? tango.stdc.stringz.toStringz(SOURCE_CODE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_AddVariable(char[] THE_CONTRACT, char[] SIGNER_NYM_ID, char[] BYLAW_NAME, char[] VAR_NAME, char[] VAR_ACCESS, char[] VAR_TYPE, char[] VAR_VALUE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_AddVariable((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (VAR_NAME ? tango.stdc.stringz.toStringz(VAR_NAME) : null), (VAR_ACCESS ? tango.stdc.stringz.toStringz(VAR_ACCESS) : null), (VAR_TYPE ? tango.stdc.stringz.toStringz(VAR_TYPE) : null), (VAR_VALUE ? tango.stdc.stringz.toStringz(VAR_VALUE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_AddCallback(char[] THE_CONTRACT, char[] SIGNER_NYM_ID, char[] BYLAW_NAME, char[] CALLBACK_NAME, char[] CLAUSE_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_AddCallback((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (CALLBACK_NAME ? tango.stdc.stringz.toStringz(CALLBACK_NAME) : null), (CLAUSE_NAME ? tango.stdc.stringz.toStringz(CLAUSE_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_AddHook(char[] THE_CONTRACT, char[] SIGNER_NYM_ID, char[] BYLAW_NAME, char[] HOOK_NAME, char[] CLAUSE_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_AddHook((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (HOOK_NAME ? tango.stdc.stringz.toStringz(HOOK_NAME) : null), (CLAUSE_NAME ? tango.stdc.stringz.toStringz(CLAUSE_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_AddParty(char[] THE_CONTRACT, char[] SIGNER_NYM_ID, char[] PARTY_NAME, char[] AGENT_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_AddParty((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), (AGENT_NAME ? tango.stdc.stringz.toStringz(AGENT_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_AddAccount(char[] THE_CONTRACT, char[] SIGNER_NYM_ID, char[] PARTY_NAME, char[] ACCT_NAME, char[] ASSET_TYPE_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_AddAccount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), (ACCT_NAME ? tango.stdc.stringz.toStringz(ACCT_NAME) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int SmartContract_CountNumsNeeded(char[] THE_CONTRACT, char[] AGENT_NAME) {
    auto ret = otapi_im.OTAPI_Wrap_SmartContract_CountNumsNeeded((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (AGENT_NAME ? tango.stdc.stringz.toStringz(AGENT_NAME) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_ConfirmAccount(char[] THE_CONTRACT, char[] SIGNER_NYM_ID, char[] PARTY_NAME, char[] ACCT_NAME, char[] AGENT_NAME, char[] ACCT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_ConfirmAccount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), (ACCT_NAME ? tango.stdc.stringz.toStringz(ACCT_NAME) : null), (AGENT_NAME ? tango.stdc.stringz.toStringz(AGENT_NAME) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] SmartContract_ConfirmParty(char[] THE_CONTRACT, char[] PARTY_NAME, char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_SmartContract_ConfirmParty((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Smart_AreAllPartiesConfirmed(char[] THE_CONTRACT) {
    bool ret = otapi_im.OTAPI_Wrap_Smart_AreAllPartiesConfirmed((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Smart_GetBylawCount(char[] THE_CONTRACT) {
    auto ret = otapi_im.OTAPI_Wrap_Smart_GetBylawCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Smart_GetBylawByIndex(char[] THE_CONTRACT, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Smart_GetBylawByIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Bylaw_GetLanguage(char[] THE_CONTRACT, char[] BYLAW_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Bylaw_GetLanguage((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Bylaw_GetClauseCount(char[] THE_CONTRACT, char[] BYLAW_NAME) {
    auto ret = otapi_im.OTAPI_Wrap_Bylaw_GetClauseCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Clause_GetNameByIndex(char[] THE_CONTRACT, char[] BYLAW_NAME, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Clause_GetNameByIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Clause_GetContents(char[] THE_CONTRACT, char[] BYLAW_NAME, char[] CLAUSE_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Clause_GetContents((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (CLAUSE_NAME ? tango.stdc.stringz.toStringz(CLAUSE_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Bylaw_GetVariableCount(char[] THE_CONTRACT, char[] BYLAW_NAME) {
    auto ret = otapi_im.OTAPI_Wrap_Bylaw_GetVariableCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Variable_GetNameByIndex(char[] THE_CONTRACT, char[] BYLAW_NAME, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Variable_GetNameByIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Variable_GetType(char[] THE_CONTRACT, char[] BYLAW_NAME, char[] VARIABLE_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Variable_GetType((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (VARIABLE_NAME ? tango.stdc.stringz.toStringz(VARIABLE_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Variable_GetAccess(char[] THE_CONTRACT, char[] BYLAW_NAME, char[] VARIABLE_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Variable_GetAccess((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (VARIABLE_NAME ? tango.stdc.stringz.toStringz(VARIABLE_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Variable_GetContents(char[] THE_CONTRACT, char[] BYLAW_NAME, char[] VARIABLE_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Variable_GetContents((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (VARIABLE_NAME ? tango.stdc.stringz.toStringz(VARIABLE_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Bylaw_GetHookCount(char[] THE_CONTRACT, char[] BYLAW_NAME) {
    auto ret = otapi_im.OTAPI_Wrap_Bylaw_GetHookCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Hook_GetNameByIndex(char[] THE_CONTRACT, char[] BYLAW_NAME, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Hook_GetNameByIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Hook_GetClauseCount(char[] THE_CONTRACT, char[] BYLAW_NAME, char[] HOOK_NAME) {
    auto ret = otapi_im.OTAPI_Wrap_Hook_GetClauseCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (HOOK_NAME ? tango.stdc.stringz.toStringz(HOOK_NAME) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Hook_GetClauseAtIndex(char[] THE_CONTRACT, char[] BYLAW_NAME, char[] HOOK_NAME, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Hook_GetClauseAtIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (HOOK_NAME ? tango.stdc.stringz.toStringz(HOOK_NAME) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Bylaw_GetCallbackCount(char[] THE_CONTRACT, char[] BYLAW_NAME) {
    auto ret = otapi_im.OTAPI_Wrap_Bylaw_GetCallbackCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Callback_GetNameByIndex(char[] THE_CONTRACT, char[] BYLAW_NAME, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Callback_GetNameByIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Callback_GetClause(char[] THE_CONTRACT, char[] BYLAW_NAME, char[] CALLBACK_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Callback_GetClause((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (BYLAW_NAME ? tango.stdc.stringz.toStringz(BYLAW_NAME) : null), (CALLBACK_NAME ? tango.stdc.stringz.toStringz(CALLBACK_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Smart_GetPartyCount(char[] THE_CONTRACT) {
    auto ret = otapi_im.OTAPI_Wrap_Smart_GetPartyCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Smart_GetPartyByIndex(char[] THE_CONTRACT, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Smart_GetPartyByIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Smart_IsPartyConfirmed(char[] THE_CONTRACT, char[] PARTY_NAME) {
    bool ret = otapi_im.OTAPI_Wrap_Smart_IsPartyConfirmed((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Party_GetID(char[] THE_CONTRACT, char[] PARTY_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Party_GetID((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Party_GetAcctCount(char[] THE_CONTRACT, char[] PARTY_NAME) {
    auto ret = otapi_im.OTAPI_Wrap_Party_GetAcctCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Party_GetAcctNameByIndex(char[] THE_CONTRACT, char[] PARTY_NAME, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Party_GetAcctNameByIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Party_GetAcctID(char[] THE_CONTRACT, char[] PARTY_NAME, char[] ACCT_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Party_GetAcctID((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), (ACCT_NAME ? tango.stdc.stringz.toStringz(ACCT_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Party_GetAcctAssetID(char[] THE_CONTRACT, char[] PARTY_NAME, char[] ACCT_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Party_GetAcctAssetID((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), (ACCT_NAME ? tango.stdc.stringz.toStringz(ACCT_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Party_GetAcctAgentName(char[] THE_CONTRACT, char[] PARTY_NAME, char[] ACCT_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Party_GetAcctAgentName((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), (ACCT_NAME ? tango.stdc.stringz.toStringz(ACCT_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Party_GetAgentCount(char[] THE_CONTRACT, char[] PARTY_NAME) {
    auto ret = otapi_im.OTAPI_Wrap_Party_GetAgentCount((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Party_GetAgentNameByIndex(char[] THE_CONTRACT, char[] PARTY_NAME, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Party_GetAgentNameByIndex((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Party_GetAgentID(char[] THE_CONTRACT, char[] PARTY_NAME, char[] AGENT_NAME) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Party_GetAgentID((THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null), (PARTY_NAME ? tango.stdc.stringz.toStringz(PARTY_NAME) : null), (AGENT_NAME ? tango.stdc.stringz.toStringz(AGENT_NAME) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int activateSmartContract(char[] SERVER_ID, char[] USER_ID, char[] THE_SMART_CONTRACT) {
    auto ret = otapi_im.OTAPI_Wrap_activateSmartContract((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_SMART_CONTRACT ? tango.stdc.stringz.toStringz(THE_SMART_CONTRACT) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int triggerClause(char[] SERVER_ID, char[] USER_ID, long TRANSACTION_NUMBER, char[] CLAUSE_NAME, char[] STR_PARAM) {
    auto ret = otapi_im.OTAPI_Wrap_triggerClause((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), TRANSACTION_NUMBER, (CLAUSE_NAME ? tango.stdc.stringz.toStringz(CLAUSE_NAME) : null), (STR_PARAM ? tango.stdc.stringz.toStringz(STR_PARAM) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Msg_HarvestTransactionNumbers(char[] THE_MESSAGE, char[] USER_ID, bool bHarvestingForRetry, bool bReplyWasSuccess, bool bReplyWasFailure, bool bTransactionWasSuccess, bool bTransactionWasFailure) {
    bool ret = otapi_im.OTAPI_Wrap_Msg_HarvestTransactionNumbers((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), bHarvestingForRetry, bReplyWasSuccess, bReplyWasFailure, bTransactionWasSuccess, bTransactionWasFailure) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadUserPubkey_Encryption(char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadUserPubkey_Encryption((USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadUserPubkey_Signing(char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadUserPubkey_Signing((USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadPubkey_Encryption(char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadPubkey_Encryption((USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadPubkey_Signing(char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadPubkey_Signing((USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool VerifyUserPrivateKey(char[] USER_ID) {
    bool ret = otapi_im.OTAPI_Wrap_VerifyUserPrivateKey((USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadPurse(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadPurse((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadMint(char[] SERVER_ID, char[] ASSET_TYPE_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadMint((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadAssetContract(char[] ASSET_TYPE_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadAssetContract((ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadServerContract(char[] SERVER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadServerContract((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Mint_IsStillGood(char[] SERVER_ID, char[] ASSET_TYPE_ID) {
    bool ret = otapi_im.OTAPI_Wrap_Mint_IsStillGood((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool IsBasketCurrency(char[] ASSET_TYPE_ID) {
    bool ret = otapi_im.OTAPI_Wrap_IsBasketCurrency((ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Basket_GetMemberCount(char[] BASKET_ASSET_TYPE_ID) {
    auto ret = otapi_im.OTAPI_Wrap_Basket_GetMemberCount((BASKET_ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(BASKET_ASSET_TYPE_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Basket_GetMemberType(char[] BASKET_ASSET_TYPE_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Basket_GetMemberType((BASKET_ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(BASKET_ASSET_TYPE_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Basket_GetMinimumTransferAmount(char[] BASKET_ASSET_TYPE_ID) {
    auto ret = otapi_im.OTAPI_Wrap_Basket_GetMinimumTransferAmount((BASKET_ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(BASKET_ASSET_TYPE_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Basket_GetMemberMinimumTransferAmount(char[] BASKET_ASSET_TYPE_ID, int nIndex) {
    auto ret = otapi_im.OTAPI_Wrap_Basket_GetMemberMinimumTransferAmount((BASKET_ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(BASKET_ASSET_TYPE_ID) : null), nIndex);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadAssetAccount(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadAssetAccount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadInbox(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadInbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadOutbox(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadOutbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadInboxNoVerify(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadInboxNoVerify((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadOutboxNoVerify(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadOutboxNoVerify((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadPaymentInbox(char[] SERVER_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadPaymentInbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadPaymentInboxNoVerify(char[] SERVER_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadPaymentInboxNoVerify((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadRecordBox(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadRecordBox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadRecordBoxNoVerify(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadRecordBoxNoVerify((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool ClearRecord(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, int nIndex, bool bClearAll) {
    bool ret = otapi_im.OTAPI_Wrap_ClearRecord((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), nIndex, bClearAll) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadExpiredBox(char[] SERVER_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadExpiredBox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadExpiredBoxNoVerify(char[] SERVER_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadExpiredBoxNoVerify((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool ClearExpired(char[] SERVER_ID, char[] USER_ID, int nIndex, bool bClearAll) {
    bool ret = otapi_im.OTAPI_Wrap_ClearExpired((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), nIndex, bClearAll) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Ledger_GetCount(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_LEDGER) {
    auto ret = otapi_im.OTAPI_Wrap_Ledger_GetCount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_LEDGER ? tango.stdc.stringz.toStringz(THE_LEDGER) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Ledger_CreateResponse(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] ORIGINAL_LEDGER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Ledger_CreateResponse((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (ORIGINAL_LEDGER ? tango.stdc.stringz.toStringz(ORIGINAL_LEDGER) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Ledger_GetTransactionByIndex(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_LEDGER, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Ledger_GetTransactionByIndex((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_LEDGER ? tango.stdc.stringz.toStringz(THE_LEDGER) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Ledger_GetTransactionByID(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_LEDGER, long TRANSACTION_NUMBER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Ledger_GetTransactionByID((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_LEDGER ? tango.stdc.stringz.toStringz(THE_LEDGER) : null), TRANSACTION_NUMBER));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Ledger_GetTransactionIDByIndex(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_LEDGER, int nIndex) {
    auto ret = otapi_im.OTAPI_Wrap_Ledger_GetTransactionIDByIndex((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_LEDGER ? tango.stdc.stringz.toStringz(THE_LEDGER) : null), nIndex);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Ledger_AddTransaction(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_LEDGER, char[] THE_TRANSACTION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Ledger_AddTransaction((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_LEDGER ? tango.stdc.stringz.toStringz(THE_LEDGER) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Transaction_CreateResponse(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] RESPONSE_LEDGER, char[] ORIGINAL_TRANSACTION, bool BOOL_DO_I_ACCEPT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Transaction_CreateResponse((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (RESPONSE_LEDGER ? tango.stdc.stringz.toStringz(RESPONSE_LEDGER) : null), (ORIGINAL_TRANSACTION ? tango.stdc.stringz.toStringz(ORIGINAL_TRANSACTION) : null), BOOL_DO_I_ACCEPT));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Ledger_FinalizeResponse(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_LEDGER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Ledger_FinalizeResponse((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_LEDGER ? tango.stdc.stringz.toStringz(THE_LEDGER) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Ledger_GetInstrument(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_LEDGER, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Ledger_GetInstrument((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_LEDGER ? tango.stdc.stringz.toStringz(THE_LEDGER) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool RecordPayment(char[] SERVER_ID, char[] USER_ID, bool bIsInbox, int nIndex, bool bSaveCopy) {
    bool ret = otapi_im.OTAPI_Wrap_RecordPayment((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), bIsInbox, nIndex, bSaveCopy) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Transaction_GetType(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Transaction_GetType((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long ReplyNotice_GetRequestNum(char[] SERVER_ID, char[] USER_ID, char[] THE_TRANSACTION) {
    auto ret = otapi_im.OTAPI_Wrap_ReplyNotice_GetRequestNum((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Transaction_GetVoucher(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Transaction_GetVoucher((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Transaction_GetSuccess(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    auto ret = otapi_im.OTAPI_Wrap_Transaction_GetSuccess((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Transaction_IsCanceled(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    auto ret = otapi_im.OTAPI_Wrap_Transaction_IsCanceled((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Transaction_GetBalanceAgreementSuccess(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    auto ret = otapi_im.OTAPI_Wrap_Transaction_GetBalanceAgreementSuccess((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static WrapTimeT Transaction_GetDateSigned(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    WrapTimeT ret = new WrapTimeT(otapi_im.OTAPI_Wrap_Transaction_GetDateSigned((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Transaction_GetAmount(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    auto ret = otapi_im.OTAPI_Wrap_Transaction_GetAmount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Pending_GetNote(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Pending_GetNote((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Transaction_GetSenderUserID(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Transaction_GetSenderUserID((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Transaction_GetSenderAcctID(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Transaction_GetSenderAcctID((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Transaction_GetRecipientUserID(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Transaction_GetRecipientUserID((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Transaction_GetRecipientAcctID(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Transaction_GetRecipientAcctID((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Transaction_GetDisplayReferenceToNum(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_TRANSACTION) {
    auto ret = otapi_im.OTAPI_Wrap_Transaction_GetDisplayReferenceToNum((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_TRANSACTION ? tango.stdc.stringz.toStringz(THE_TRANSACTION) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool SavePurse(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] USER_ID, char[] THE_PURSE) {
    bool ret = otapi_im.OTAPI_Wrap_SavePurse((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] CreatePurse(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] OWNER_ID, char[] SIGNER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_CreatePurse((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (OWNER_ID ? tango.stdc.stringz.toStringz(OWNER_ID) : null), (SIGNER_ID ? tango.stdc.stringz.toStringz(SIGNER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] CreatePurse_Passphrase(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] SIGNER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_CreatePurse_Passphrase((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (SIGNER_ID ? tango.stdc.stringz.toStringz(SIGNER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Purse_GetTotalValue(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] THE_PURSE) {
    auto ret = otapi_im.OTAPI_Wrap_Purse_GetTotalValue((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Purse_Count(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] THE_PURSE) {
    auto ret = otapi_im.OTAPI_Wrap_Purse_Count((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Purse_HasPassword(char[] SERVER_ID, char[] THE_PURSE) {
    bool ret = otapi_im.OTAPI_Wrap_Purse_HasPassword((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Purse_Peek(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] OWNER_ID, char[] THE_PURSE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Purse_Peek((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (OWNER_ID ? tango.stdc.stringz.toStringz(OWNER_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Purse_Pop(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] OWNER_OR_SIGNER_ID, char[] THE_PURSE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Purse_Pop((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (OWNER_OR_SIGNER_ID ? tango.stdc.stringz.toStringz(OWNER_OR_SIGNER_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Purse_Push(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] SIGNER_ID, char[] OWNER_ID, char[] THE_PURSE, char[] THE_TOKEN) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Purse_Push((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (SIGNER_ID ? tango.stdc.stringz.toStringz(SIGNER_ID) : null), (OWNER_ID ? tango.stdc.stringz.toStringz(OWNER_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null), (THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Purse_Empty(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] SIGNER_ID, char[] THE_PURSE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Purse_Empty((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (SIGNER_ID ? tango.stdc.stringz.toStringz(SIGNER_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Wallet_ImportPurse(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] USER_ID, char[] THE_PURSE) {
    bool ret = otapi_im.OTAPI_Wrap_Wallet_ImportPurse((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int exchangePurse(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] USER_ID, char[] THE_PURSE) {
    auto ret = otapi_im.OTAPI_Wrap_exchangePurse((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Token_ChangeOwner(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] THE_TOKEN, char[] SIGNER_NYM_ID, char[] OLD_OWNER, char[] NEW_OWNER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Token_ChangeOwner((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null), (SIGNER_NYM_ID ? tango.stdc.stringz.toStringz(SIGNER_NYM_ID) : null), (OLD_OWNER ? tango.stdc.stringz.toStringz(OLD_OWNER) : null), (NEW_OWNER ? tango.stdc.stringz.toStringz(NEW_OWNER) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Token_GetID(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] THE_TOKEN) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Token_GetID((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Token_GetDenomination(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] THE_TOKEN) {
    auto ret = otapi_im.OTAPI_Wrap_Token_GetDenomination((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Token_GetSeries(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] THE_TOKEN) {
    auto ret = otapi_im.OTAPI_Wrap_Token_GetSeries((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static WrapTimeT Token_GetValidFrom(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] THE_TOKEN) {
    WrapTimeT ret = new WrapTimeT(otapi_im.OTAPI_Wrap_Token_GetValidFrom((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null)), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static WrapTimeT Token_GetValidTo(char[] SERVER_ID, char[] ASSET_TYPE_ID, char[] THE_TOKEN) {
    WrapTimeT ret = new WrapTimeT(otapi_im.OTAPI_Wrap_Token_GetValidTo((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null)), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Token_GetAssetID(char[] THE_TOKEN) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Token_GetAssetID((THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Token_GetServerID(char[] THE_TOKEN) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Token_GetServerID((THE_TOKEN ? tango.stdc.stringz.toStringz(THE_TOKEN) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Instrmnt_GetAmount(char[] THE_INSTRUMENT) {
    auto ret = otapi_im.OTAPI_Wrap_Instrmnt_GetAmount((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Instrmnt_GetTransNum(char[] THE_INSTRUMENT) {
    auto ret = otapi_im.OTAPI_Wrap_Instrmnt_GetTransNum((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static WrapTimeT Instrmnt_GetValidFrom(char[] THE_INSTRUMENT) {
    WrapTimeT ret = new WrapTimeT(otapi_im.OTAPI_Wrap_Instrmnt_GetValidFrom((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static WrapTimeT Instrmnt_GetValidTo(char[] THE_INSTRUMENT) {
    WrapTimeT ret = new WrapTimeT(otapi_im.OTAPI_Wrap_Instrmnt_GetValidTo((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)), true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetMemo(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetMemo((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetType(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetType((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetServerID(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetServerID((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetAssetID(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetAssetID((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetSenderUserID(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetSenderUserID((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetSenderAcctID(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetSenderAcctID((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetRemitterUserID(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetRemitterUserID((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetRemitterAcctID(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetRemitterAcctID((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetRecipientUserID(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetRecipientUserID((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Instrmnt_GetRecipientAcctID(char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Instrmnt_GetRecipientAcctID((THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int checkServerID(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_checkServerID((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int createUserAccount(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_createUserAccount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int deleteUserAccount(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_deleteUserAccount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int deleteAssetAccount(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID) {
    auto ret = otapi_im.OTAPI_Wrap_deleteAssetAccount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int usageCredits(char[] SERVER_ID, char[] USER_ID, char[] USER_ID_CHECK, long ADJUSTMENT) {
    auto ret = otapi_im.OTAPI_Wrap_usageCredits((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (USER_ID_CHECK ? tango.stdc.stringz.toStringz(USER_ID_CHECK) : null), ADJUSTMENT);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static long Message_GetUsageCredits(char[] THE_MESSAGE) {
    auto ret = otapi_im.OTAPI_Wrap_Message_GetUsageCredits((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int checkUser(char[] SERVER_ID, char[] USER_ID, char[] USER_ID_CHECK) {
    auto ret = otapi_im.OTAPI_Wrap_checkUser((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (USER_ID_CHECK ? tango.stdc.stringz.toStringz(USER_ID_CHECK) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int sendUserMessage(char[] SERVER_ID, char[] USER_ID, char[] USER_ID_RECIPIENT, char[] RECIPIENT_PUBKEY, char[] THE_MESSAGE) {
    auto ret = otapi_im.OTAPI_Wrap_sendUserMessage((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (USER_ID_RECIPIENT ? tango.stdc.stringz.toStringz(USER_ID_RECIPIENT) : null), (RECIPIENT_PUBKEY ? tango.stdc.stringz.toStringz(RECIPIENT_PUBKEY) : null), (THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int sendUserInstrument(char[] SERVER_ID, char[] USER_ID, char[] USER_ID_RECIPIENT, char[] RECIPIENT_PUBKEY, char[] THE_INSTRUMENT, char[] INSTRUMENT_FOR_SENDER) {
    auto ret = otapi_im.OTAPI_Wrap_sendUserInstrument((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (USER_ID_RECIPIENT ? tango.stdc.stringz.toStringz(USER_ID_RECIPIENT) : null), (RECIPIENT_PUBKEY ? tango.stdc.stringz.toStringz(RECIPIENT_PUBKEY) : null), (THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null), (INSTRUMENT_FOR_SENDER ? tango.stdc.stringz.toStringz(INSTRUMENT_FOR_SENDER) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getRequest(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getRequest((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getTransactionNumber(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getTransactionNumber((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int issueAssetType(char[] SERVER_ID, char[] USER_ID, char[] THE_CONTRACT) {
    auto ret = otapi_im.OTAPI_Wrap_issueAssetType((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getContract(char[] SERVER_ID, char[] USER_ID, char[] ASSET_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getContract((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ASSET_ID ? tango.stdc.stringz.toStringz(ASSET_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getMint(char[] SERVER_ID, char[] USER_ID, char[] ASSET_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getMint((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ASSET_ID ? tango.stdc.stringz.toStringz(ASSET_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int createAssetAccount(char[] SERVER_ID, char[] USER_ID, char[] ASSET_ID) {
    auto ret = otapi_im.OTAPI_Wrap_createAssetAccount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ASSET_ID ? tango.stdc.stringz.toStringz(ASSET_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getAccount(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getAccount((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getAccountFiles(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getAccountFiles((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GenerateBasketCreation(char[] USER_ID, long MINIMUM_TRANSFER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GenerateBasketCreation((USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), MINIMUM_TRANSFER));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] AddBasketCreationItem(char[] USER_ID, char[] THE_BASKET, char[] ASSET_TYPE_ID, long MINIMUM_TRANSFER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_AddBasketCreationItem((USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_BASKET ? tango.stdc.stringz.toStringz(THE_BASKET) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), MINIMUM_TRANSFER));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int issueBasket(char[] SERVER_ID, char[] USER_ID, char[] THE_BASKET) {
    auto ret = otapi_im.OTAPI_Wrap_issueBasket((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_BASKET ? tango.stdc.stringz.toStringz(THE_BASKET) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] GenerateBasketExchange(char[] SERVER_ID, char[] USER_ID, char[] BASKET_ASSET_TYPE_ID, char[] BASKET_ASSET_ACCT_ID, int TRANSFER_MULTIPLE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GenerateBasketExchange((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (BASKET_ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(BASKET_ASSET_TYPE_ID) : null), (BASKET_ASSET_ACCT_ID ? tango.stdc.stringz.toStringz(BASKET_ASSET_ACCT_ID) : null), TRANSFER_MULTIPLE));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] AddBasketExchangeItem(char[] SERVER_ID, char[] USER_ID, char[] THE_BASKET, char[] ASSET_TYPE_ID, char[] ASSET_ACCT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_AddBasketExchangeItem((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_BASKET ? tango.stdc.stringz.toStringz(THE_BASKET) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (ASSET_ACCT_ID ? tango.stdc.stringz.toStringz(ASSET_ACCT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int exchangeBasket(char[] SERVER_ID, char[] USER_ID, char[] BASKET_ASSET_ID, char[] THE_BASKET, bool BOOL_EXCHANGE_IN_OR_OUT) {
    auto ret = otapi_im.OTAPI_Wrap_exchangeBasket((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (BASKET_ASSET_ID ? tango.stdc.stringz.toStringz(BASKET_ASSET_ID) : null), (THE_BASKET ? tango.stdc.stringz.toStringz(THE_BASKET) : null), BOOL_EXCHANGE_IN_OR_OUT);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int notarizeWithdrawal(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID, long AMOUNT) {
    auto ret = otapi_im.OTAPI_Wrap_notarizeWithdrawal((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), AMOUNT);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int notarizeDeposit(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID, char[] THE_PURSE) {
    auto ret = otapi_im.OTAPI_Wrap_notarizeDeposit((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (THE_PURSE ? tango.stdc.stringz.toStringz(THE_PURSE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int notarizeTransfer(char[] SERVER_ID, char[] USER_ID, char[] ACCT_FROM, char[] ACCT_TO, long AMOUNT, char[] NOTE) {
    auto ret = otapi_im.OTAPI_Wrap_notarizeTransfer((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_FROM ? tango.stdc.stringz.toStringz(ACCT_FROM) : null), (ACCT_TO ? tango.stdc.stringz.toStringz(ACCT_TO) : null), AMOUNT, (NOTE ? tango.stdc.stringz.toStringz(NOTE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getInbox(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getInbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getOutbox(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getOutbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getNymbox(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getNymbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadNymbox(char[] SERVER_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadNymbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] LoadNymboxNoVerify(char[] SERVER_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_LoadNymboxNoVerify((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Nymbox_GetReplyNotice(char[] SERVER_ID, char[] USER_ID, long REQUEST_NUMBER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Nymbox_GetReplyNotice((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), REQUEST_NUMBER));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool HaveAlreadySeenReply(char[] SERVER_ID, char[] USER_ID, long REQUEST_NUMBER) {
    bool ret = otapi_im.OTAPI_Wrap_HaveAlreadySeenReply((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), REQUEST_NUMBER) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getBoxReceipt(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, int nBoxType, long TRANSACTION_NUMBER) {
    auto ret = otapi_im.OTAPI_Wrap_getBoxReceipt((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), nBoxType, TRANSACTION_NUMBER);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool DoesBoxReceiptExist(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, int nBoxType, long TRANSACTION_NUMBER) {
    bool ret = otapi_im.OTAPI_Wrap_DoesBoxReceiptExist((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), nBoxType, TRANSACTION_NUMBER) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int processInbox(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID, char[] ACCT_LEDGER) {
    auto ret = otapi_im.OTAPI_Wrap_processInbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (ACCT_LEDGER ? tango.stdc.stringz.toStringz(ACCT_LEDGER) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int processNymbox(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_processNymbox((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int withdrawVoucher(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID, char[] RECIPIENT_USER_ID, char[] CHEQUE_MEMO, long AMOUNT) {
    auto ret = otapi_im.OTAPI_Wrap_withdrawVoucher((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (RECIPIENT_USER_ID ? tango.stdc.stringz.toStringz(RECIPIENT_USER_ID) : null), (CHEQUE_MEMO ? tango.stdc.stringz.toStringz(CHEQUE_MEMO) : null), AMOUNT);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int payDividend(char[] SERVER_ID, char[] ISSUER_USER_ID, char[] DIVIDEND_FROM_ACCT_ID, char[] SHARES_ASSET_TYPE_ID, char[] DIVIDEND_MEMO, long AMOUNT_PER_SHARE) {
    auto ret = otapi_im.OTAPI_Wrap_payDividend((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (ISSUER_USER_ID ? tango.stdc.stringz.toStringz(ISSUER_USER_ID) : null), (DIVIDEND_FROM_ACCT_ID ? tango.stdc.stringz.toStringz(DIVIDEND_FROM_ACCT_ID) : null), (SHARES_ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(SHARES_ASSET_TYPE_ID) : null), (DIVIDEND_MEMO ? tango.stdc.stringz.toStringz(DIVIDEND_MEMO) : null), AMOUNT_PER_SHARE);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int depositCheque(char[] SERVER_ID, char[] USER_ID, char[] ACCT_ID, char[] THE_CHEQUE) {
    auto ret = otapi_im.OTAPI_Wrap_depositCheque((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (THE_CHEQUE ? tango.stdc.stringz.toStringz(THE_CHEQUE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int depositPaymentPlan(char[] SERVER_ID, char[] USER_ID, char[] THE_PAYMENT_PLAN) {
    auto ret = otapi_im.OTAPI_Wrap_depositPaymentPlan((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_PAYMENT_PLAN ? tango.stdc.stringz.toStringz(THE_PAYMENT_PLAN) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int issueMarketOffer(char[] ASSET_ACCT_ID, char[] CURRENCY_ACCT_ID, long MARKET_SCALE, long MINIMUM_INCREMENT, long TOTAL_ASSETS_ON_OFFER, long PRICE_LIMIT, bool bBuyingOrSelling, WrapTimeT LIFESPAN_IN_SECONDS, char[] STOP_SIGN, long ACTIVATION_PRICE) {
    auto ret = otapi_im.OTAPI_Wrap_issueMarketOffer((ASSET_ACCT_ID ? tango.stdc.stringz.toStringz(ASSET_ACCT_ID) : null), (CURRENCY_ACCT_ID ? tango.stdc.stringz.toStringz(CURRENCY_ACCT_ID) : null), MARKET_SCALE, MINIMUM_INCREMENT, TOTAL_ASSETS_ON_OFFER, PRICE_LIMIT, bBuyingOrSelling, WrapTimeT.swigGetCPtr(LIFESPAN_IN_SECONDS), (STOP_SIGN ? tango.stdc.stringz.toStringz(STOP_SIGN) : null), ACTIVATION_PRICE);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getMarketList(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getMarketList((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getMarketOffers(char[] SERVER_ID, char[] USER_ID, char[] MARKET_ID, long MAX_DEPTH) {
    auto ret = otapi_im.OTAPI_Wrap_getMarketOffers((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (MARKET_ID ? tango.stdc.stringz.toStringz(MARKET_ID) : null), MAX_DEPTH);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getMarketRecentTrades(char[] SERVER_ID, char[] USER_ID, char[] MARKET_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getMarketRecentTrades((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (MARKET_ID ? tango.stdc.stringz.toStringz(MARKET_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int getNym_MarketOffers(char[] SERVER_ID, char[] USER_ID) {
    auto ret = otapi_im.OTAPI_Wrap_getNym_MarketOffers((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int killMarketOffer(char[] SERVER_ID, char[] USER_ID, char[] ASSET_ACCT_ID, long TRANSACTION_NUMBER) {
    auto ret = otapi_im.OTAPI_Wrap_killMarketOffer((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ASSET_ACCT_ID ? tango.stdc.stringz.toStringz(ASSET_ACCT_ID) : null), TRANSACTION_NUMBER);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int killPaymentPlan(char[] SERVER_ID, char[] USER_ID, char[] FROM_ACCT_ID, long TRANSACTION_NUMBER) {
    auto ret = otapi_im.OTAPI_Wrap_killPaymentPlan((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (FROM_ACCT_ID ? tango.stdc.stringz.toStringz(FROM_ACCT_ID) : null), TRANSACTION_NUMBER);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] PopMessageBuffer(long REQUEST_NUMBER, char[] SERVER_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_PopMessageBuffer(REQUEST_NUMBER, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static void FlushMessageBuffer() {
    otapi_im.OTAPI_Wrap_FlushMessageBuffer();
  }

  public static char[] GetSentMessage(long REQUEST_NUMBER, char[] SERVER_ID, char[] USER_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_GetSentMessage(REQUEST_NUMBER, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool RemoveSentMessage(long REQUEST_NUMBER, char[] SERVER_ID, char[] USER_ID) {
    bool ret = otapi_im.OTAPI_Wrap_RemoveSentMessage(REQUEST_NUMBER, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static void FlushSentMessages(bool bHarvestingForRetry, char[] SERVER_ID, char[] USER_ID, char[] THE_NYMBOX) {
    otapi_im.OTAPI_Wrap_FlushSentMessages(bHarvestingForRetry, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_NYMBOX ? tango.stdc.stringz.toStringz(THE_NYMBOX) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public static void Sleep(long MILLISECONDS) {
    otapi_im.OTAPI_Wrap_Sleep(MILLISECONDS);
  }

  public static bool ResyncNymWithServer(char[] SERVER_ID, char[] USER_ID, char[] THE_MESSAGE) {
    bool ret = otapi_im.OTAPI_Wrap_ResyncNymWithServer((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Message_GetCommand(char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Message_GetCommand((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Message_GetSuccess(char[] THE_MESSAGE) {
    auto ret = otapi_im.OTAPI_Wrap_Message_GetSuccess((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int queryAssetTypes(char[] SERVER_ID, char[] USER_ID, char[] ENCODED_MAP) {
    auto ret = otapi_im.OTAPI_Wrap_queryAssetTypes((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ENCODED_MAP ? tango.stdc.stringz.toStringz(ENCODED_MAP) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Message_GetPayload(char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Message_GetPayload((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Message_GetDepth(char[] THE_MESSAGE) {
    auto ret = otapi_im.OTAPI_Wrap_Message_GetDepth((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Message_GetTransactionSuccess(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_MESSAGE) {
    auto ret = otapi_im.OTAPI_Wrap_Message_GetTransactionSuccess((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Message_IsTransactionCanceled(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_MESSAGE) {
    auto ret = otapi_im.OTAPI_Wrap_Message_IsTransactionCanceled((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int Message_GetBalanceAgreementSuccess(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] THE_MESSAGE) {
    auto ret = otapi_im.OTAPI_Wrap_Message_GetBalanceAgreementSuccess((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Message_GetLedger(char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Message_GetLedger((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Message_GetNewAssetTypeID(char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Message_GetNewAssetTypeID((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Message_GetNewIssuerAcctID(char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Message_GetNewIssuerAcctID((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Message_GetNewAcctID(char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Message_GetNewAcctID((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static char[] Message_GetNymboxHash(char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTAPI_Wrap_Message_GetNymboxHash((THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool ConnectServer(char[] SERVER_ID, char[] USER_ID, char[] strCA_FILE, char[] strKEY_FILE, char[] strKEY_PASSWORD) {
    bool ret = otapi_im.OTAPI_Wrap_ConnectServer((SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (strCA_FILE ? tango.stdc.stringz.toStringz(strCA_FILE) : null), (strKEY_FILE ? tango.stdc.stringz.toStringz(strKEY_FILE) : null), (strKEY_PASSWORD ? tango.stdc.stringz.toStringz(strKEY_PASSWORD) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool ProcessSockets() {
    bool ret = otapi_im.OTAPI_Wrap_ProcessSockets() ? true : false;
    return ret;
  }
}

int OT_CLI_GetArgsCount(char[] str_Args) {
  auto ret = otapi_im.OT_CLI_GetArgsCount((str_Args ? tango.stdc.stringz.toStringz(str_Args) : null));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] OT_CLI_GetValueByKey(char[] str_Args, char[] str_key) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_CLI_GetValueByKey((str_Args ? tango.stdc.stringz.toStringz(str_Args) : null), (str_key ? tango.stdc.stringz.toStringz(str_key) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] OT_CLI_GetValueByIndex(char[] str_Args, int nIndex) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_CLI_GetValueByIndex((str_Args ? tango.stdc.stringz.toStringz(str_Args) : null), nIndex));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] OT_CLI_GetKeyByIndex(char[] str_Args, int nIndex) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_CLI_GetKeyByIndex((str_Args ? tango.stdc.stringz.toStringz(str_Args) : null), nIndex));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] OT_CLI_ReadLine() {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_CLI_ReadLine());
  return ret;
}

char[] OT_CLI_ReadUntilEOF() {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_CLI_ReadUntilEOF());
  return ret;
}

class OT_ME {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(OT_ME obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OT_ME(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(otapi_im.new_OT_ME(), true);
  }

  public int opentxs_main_loop() {
    auto ret = otapi_im.OT_ME_opentxs_main_loop(cast(void*)swigCPtr);
    return ret;
  }

  public bool make_sure_enough_trans_nums(int nNumberNeeded, char[] SERVER_ID, char[] NYM_ID) {
    bool ret = otapi_im.OT_ME_make_sure_enough_trans_nums(cast(void*)swigCPtr, nNumberNeeded, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] register_nym(char[] SERVER_ID, char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_register_nym(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] check_user(char[] SERVER_ID, char[] NYM_ID, char[] TARGET_NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_check_user(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (TARGET_NYM_ID ? tango.stdc.stringz.toStringz(TARGET_NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] create_pseudonym(int nKeybits, char[] NYM_ID_SOURCE, char[] ALT_LOCATION) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_create_pseudonym(cast(void*)swigCPtr, nKeybits, (NYM_ID_SOURCE ? tango.stdc.stringz.toStringz(NYM_ID_SOURCE) : null), (ALT_LOCATION ? tango.stdc.stringz.toStringz(ALT_LOCATION) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] issue_asset_type(char[] SERVER_ID, char[] NYM_ID, char[] THE_CONTRACT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_issue_asset_type(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (THE_CONTRACT ? tango.stdc.stringz.toStringz(THE_CONTRACT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] issue_basket_currency(char[] SERVER_ID, char[] NYM_ID, char[] THE_BASKET) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_issue_basket_currency(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (THE_BASKET ? tango.stdc.stringz.toStringz(THE_BASKET) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] exchange_basket_currency(char[] SERVER_ID, char[] NYM_ID, char[] ASSET_TYPE_ID, char[] THE_BASKET, char[] ACCOUNT_ID, bool IN_OR_OUT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_exchange_basket_currency(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (THE_BASKET ? tango.stdc.stringz.toStringz(THE_BASKET) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), IN_OR_OUT));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] retrieve_contract(char[] SERVER_ID, char[] NYM_ID, char[] CONTRACT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_retrieve_contract(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (CONTRACT_ID ? tango.stdc.stringz.toStringz(CONTRACT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] load_or_retrieve_contract(char[] SERVER_ID, char[] NYM_ID, char[] CONTRACT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_load_or_retrieve_contract(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (CONTRACT_ID ? tango.stdc.stringz.toStringz(CONTRACT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] create_asset_acct(char[] SERVER_ID, char[] NYM_ID, char[] ASSET_TYPE_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_create_asset_acct(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] stat_asset_account(char[] ACCOUNT_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_stat_asset_account(cast(void*)swigCPtr, (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool retrieve_account(char[] SERVER_ID, char[] NYM_ID, char[] ACCOUNT_ID) {
    bool ret = otapi_im.OT_ME_retrieve_account__SWIG_0(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool retrieve_account(char[] SERVER_ID, char[] NYM_ID, char[] ACCOUNT_ID, bool bForceDownload) {
    bool ret = otapi_im.OT_ME_retrieve_account__SWIG_1(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), bForceDownload) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool retrieve_nym(char[] SERVER_ID, char[] NYM_ID) {
    bool ret = otapi_im.OT_ME_retrieve_nym__SWIG_0(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool retrieve_nym(char[] SERVER_ID, char[] NYM_ID, bool bForceDownload) {
    bool ret = otapi_im.OT_ME_retrieve_nym__SWIG_1(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), bForceDownload) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] send_transfer(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_FROM, char[] ACCT_TO, long AMOUNT, char[] NOTE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_send_transfer(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_FROM ? tango.stdc.stringz.toStringz(ACCT_FROM) : null), (ACCT_TO ? tango.stdc.stringz.toStringz(ACCT_TO) : null), AMOUNT, (NOTE ? tango.stdc.stringz.toStringz(NOTE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] process_inbox(char[] SERVER_ID, char[] NYM_ID, char[] ACCOUNT_ID, char[] RESPONSE_LEDGER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_process_inbox(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (RESPONSE_LEDGER ? tango.stdc.stringz.toStringz(RESPONSE_LEDGER) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool accept_inbox_items(char[] ACCOUNT_ID, int nItemType, char[] INDICES) {
    bool ret = otapi_im.OT_ME_accept_inbox_items(cast(void*)swigCPtr, (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), nItemType, (INDICES ? tango.stdc.stringz.toStringz(INDICES) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool discard_incoming_payments(char[] SERVER_ID, char[] NYM_ID, char[] INDICES) {
    bool ret = otapi_im.OT_ME_discard_incoming_payments(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (INDICES ? tango.stdc.stringz.toStringz(INDICES) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool cancel_outgoing_payments(char[] NYM_ID, char[] ACCOUNT_ID, char[] INDICES) {
    bool ret = otapi_im.OT_ME_cancel_outgoing_payments(cast(void*)swigCPtr, (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (INDICES ? tango.stdc.stringz.toStringz(INDICES) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int accept_from_paymentbox(char[] ACCOUNT_ID, char[] INDICES, char[] PAYMENT_TYPE) {
    auto ret = otapi_im.OT_ME_accept_from_paymentbox(cast(void*)swigCPtr, (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (INDICES ? tango.stdc.stringz.toStringz(INDICES) : null), (PAYMENT_TYPE ? tango.stdc.stringz.toStringz(PAYMENT_TYPE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] load_public_encryption_key(char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_load_public_encryption_key(cast(void*)swigCPtr, (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] load_public_signing_key(char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_load_public_signing_key(cast(void*)swigCPtr, (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] load_or_retrieve_encrypt_key(char[] SERVER_ID, char[] NYM_ID, char[] TARGET_NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_load_or_retrieve_encrypt_key(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (TARGET_NYM_ID ? tango.stdc.stringz.toStringz(TARGET_NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] load_or_retrieve_signing_key(char[] SERVER_ID, char[] NYM_ID, char[] TARGET_NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_load_or_retrieve_signing_key(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (TARGET_NYM_ID ? tango.stdc.stringz.toStringz(TARGET_NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] send_user_msg_pubkey(char[] SERVER_ID, char[] NYM_ID, char[] RECIPIENT_NYM_ID, char[] RECIPIENT_PUBKEY, char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_send_user_msg_pubkey(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (RECIPIENT_PUBKEY ? tango.stdc.stringz.toStringz(RECIPIENT_PUBKEY) : null), (THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] send_user_pmnt_pubkey(char[] SERVER_ID, char[] NYM_ID, char[] RECIPIENT_NYM_ID, char[] RECIPIENT_PUBKEY, char[] THE_INSTRUMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_send_user_pmnt_pubkey(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (RECIPIENT_PUBKEY ? tango.stdc.stringz.toStringz(RECIPIENT_PUBKEY) : null), (THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] send_user_cash_pubkey(char[] SERVER_ID, char[] NYM_ID, char[] RECIPIENT_NYM_ID, char[] RECIPIENT_PUBKEY, char[] THE_INSTRUMENT, char[] INSTRUMENT_FOR_SENDER) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_send_user_cash_pubkey(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (RECIPIENT_PUBKEY ? tango.stdc.stringz.toStringz(RECIPIENT_PUBKEY) : null), (THE_INSTRUMENT ? tango.stdc.stringz.toStringz(THE_INSTRUMENT) : null), (INSTRUMENT_FOR_SENDER ? tango.stdc.stringz.toStringz(INSTRUMENT_FOR_SENDER) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] send_user_msg(char[] SERVER_ID, char[] NYM_ID, char[] RECIPIENT_NYM_ID, char[] THE_MESSAGE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_send_user_msg(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (THE_MESSAGE ? tango.stdc.stringz.toStringz(THE_MESSAGE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] send_user_payment(char[] SERVER_ID, char[] NYM_ID, char[] RECIPIENT_NYM_ID, char[] THE_PAYMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_send_user_payment(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (THE_PAYMENT ? tango.stdc.stringz.toStringz(THE_PAYMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] send_user_cash(char[] SERVER_ID, char[] NYM_ID, char[] RECIPIENT_NYM_ID, char[] THE_PAYMENT, char[] SENDERS_COPY) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_send_user_cash(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (THE_PAYMENT ? tango.stdc.stringz.toStringz(THE_PAYMENT) : null), (SENDERS_COPY ? tango.stdc.stringz.toStringz(SENDERS_COPY) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool withdraw_and_send_cash(char[] ACCT_ID, char[] RECIPIENT_NYM_ID, char[] MEMO, long AMOUNT) {
    bool ret = otapi_im.OT_ME_withdraw_and_send_cash(cast(void*)swigCPtr, (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (RECIPIENT_NYM_ID ? tango.stdc.stringz.toStringz(RECIPIENT_NYM_ID) : null), (MEMO ? tango.stdc.stringz.toStringz(MEMO) : null), AMOUNT) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] get_payment_instrument(char[] SERVER_ID, char[] NYM_ID, int nIndex) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_get_payment_instrument__SWIG_0(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] get_payment_instrument(char[] SERVER_ID, char[] NYM_ID, int nIndex, char[] PRELOADED_INBOX) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_get_payment_instrument__SWIG_1(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), nIndex, (PRELOADED_INBOX ? tango.stdc.stringz.toStringz(PRELOADED_INBOX) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] get_box_receipt(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID, int nBoxType, long TRANS_NUM) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_get_box_receipt(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), nBoxType, TRANS_NUM));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] retrieve_mint(char[] SERVER_ID, char[] NYM_ID, char[] ASSET_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_retrieve_mint(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ASSET_ID ? tango.stdc.stringz.toStringz(ASSET_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] load_or_retrieve_mint(char[] SERVER_ID, char[] NYM_ID, char[] ASSET_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_load_or_retrieve_mint(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ASSET_ID ? tango.stdc.stringz.toStringz(ASSET_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] query_asset_types(char[] SERVER_ID, char[] NYM_ID, char[] ENCODED_MAP) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_query_asset_types(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ENCODED_MAP ? tango.stdc.stringz.toStringz(ENCODED_MAP) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] create_market_offer(char[] ASSET_ACCT_ID, char[] CURRENCY_ACCT_ID, long scale, long minIncrement, long quantity, long price, bool bSelling, long lLifespanInSeconds, char[] STOP_SIGN, long ACTIVATION_PRICE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_create_market_offer(cast(void*)swigCPtr, (ASSET_ACCT_ID ? tango.stdc.stringz.toStringz(ASSET_ACCT_ID) : null), (CURRENCY_ACCT_ID ? tango.stdc.stringz.toStringz(CURRENCY_ACCT_ID) : null), scale, minIncrement, quantity, price, bSelling, lLifespanInSeconds, (STOP_SIGN ? tango.stdc.stringz.toStringz(STOP_SIGN) : null), ACTIVATION_PRICE));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] kill_market_offer(char[] SERVER_ID, char[] NYM_ID, char[] ASSET_ACCT_ID, long TRANS_NUM) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_kill_market_offer(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ASSET_ACCT_ID ? tango.stdc.stringz.toStringz(ASSET_ACCT_ID) : null), TRANS_NUM));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] kill_payment_plan(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID, long TRANS_NUM) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_kill_payment_plan(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), TRANS_NUM));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] cancel_payment_plan(char[] SERVER_ID, char[] NYM_ID, char[] THE_PAYMENT_PLAN) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_cancel_payment_plan(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (THE_PAYMENT_PLAN ? tango.stdc.stringz.toStringz(THE_PAYMENT_PLAN) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] activate_smart_contract(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID, char[] AGENT_NAME, char[] THE_SMART_CONTRACT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_activate_smart_contract(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (AGENT_NAME ? tango.stdc.stringz.toStringz(AGENT_NAME) : null), (THE_SMART_CONTRACT ? tango.stdc.stringz.toStringz(THE_SMART_CONTRACT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] trigger_clause(char[] SERVER_ID, char[] NYM_ID, long TRANS_NUM, char[] CLAUSE_NAME, char[] STR_PARAM) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_trigger_clause(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), TRANS_NUM, (CLAUSE_NAME ? tango.stdc.stringz.toStringz(CLAUSE_NAME) : null), (STR_PARAM ? tango.stdc.stringz.toStringz(STR_PARAM) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] withdraw_cash(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID, long AMOUNT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_withdraw_cash(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), AMOUNT));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int easy_withdraw_cash(char[] ACCT_ID, long AMOUNT) {
    auto ret = otapi_im.OT_ME_easy_withdraw_cash(cast(void*)swigCPtr, (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), AMOUNT);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] export_cash(char[] SERVER_ID, char[] FROM_NYM_ID, char[] ASSET_TYPE_ID, char[] TO_NYM_ID, char[] STR_INDICES, bool bPasswordProtected, SWIGTYPE_p_std__string STR_RETAINED_COPY) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_export_cash(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (FROM_NYM_ID ? tango.stdc.stringz.toStringz(FROM_NYM_ID) : null), (ASSET_TYPE_ID ? tango.stdc.stringz.toStringz(ASSET_TYPE_ID) : null), (TO_NYM_ID ? tango.stdc.stringz.toStringz(TO_NYM_ID) : null), (STR_INDICES ? tango.stdc.stringz.toStringz(STR_INDICES) : null), bPasswordProtected, SWIGTYPE_p_std__string.swigGetCPtr(STR_RETAINED_COPY)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] withdraw_voucher(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID, char[] RECIP_NYM_ID, char[] STR_MEMO, long AMOUNT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_withdraw_voucher(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (RECIP_NYM_ID ? tango.stdc.stringz.toStringz(RECIP_NYM_ID) : null), (STR_MEMO ? tango.stdc.stringz.toStringz(STR_MEMO) : null), AMOUNT));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] pay_dividend(char[] SERVER_ID, char[] NYM_ID, char[] SOURCE_ACCT_ID, char[] SHARES_ASSET_ID, char[] STR_MEMO, long AMOUNT_PER_SHARE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_pay_dividend(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (SOURCE_ACCT_ID ? tango.stdc.stringz.toStringz(SOURCE_ACCT_ID) : null), (SHARES_ASSET_ID ? tango.stdc.stringz.toStringz(SHARES_ASSET_ID) : null), (STR_MEMO ? tango.stdc.stringz.toStringz(STR_MEMO) : null), AMOUNT_PER_SHARE));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] deposit_cheque(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID, char[] STR_CHEQUE) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_deposit_cheque(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (STR_CHEQUE ? tango.stdc.stringz.toStringz(STR_CHEQUE) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int deposit_cash(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID, char[] STR_PURSE) {
    auto ret = otapi_im.OT_ME_deposit_cash(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (STR_PURSE ? tango.stdc.stringz.toStringz(STR_PURSE) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int deposit_local_purse(char[] SERVER_ID, char[] NYM_ID, char[] ACCT_ID, char[] STR_INDICES) {
    auto ret = otapi_im.OT_ME_deposit_local_purse(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (ACCT_ID ? tango.stdc.stringz.toStringz(ACCT_ID) : null), (STR_INDICES ? tango.stdc.stringz.toStringz(STR_INDICES) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] get_market_list(char[] SERVER_ID, char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_get_market_list(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] get_market_offers(char[] SERVER_ID, char[] NYM_ID, char[] MARKET_ID, long MAX_DEPTH) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_get_market_offers(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (MARKET_ID ? tango.stdc.stringz.toStringz(MARKET_ID) : null), MAX_DEPTH));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] get_nym_market_offers(char[] SERVER_ID, char[] NYM_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_get_nym_market_offers(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] get_market_recent_trades(char[] SERVER_ID, char[] NYM_ID, char[] MARKET_ID) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_get_market_recent_trades(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (NYM_ID ? tango.stdc.stringz.toStringz(NYM_ID) : null), (MARKET_ID ? tango.stdc.stringz.toStringz(MARKET_ID) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] adjust_usage_credits(char[] SERVER_ID, char[] USER_NYM_ID, char[] TARGET_NYM_ID, char[] ADJUSTMENT) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_adjust_usage_credits(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_NYM_ID ? tango.stdc.stringz.toStringz(USER_NYM_ID) : null), (TARGET_NYM_ID ? tango.stdc.stringz.toStringz(TARGET_NYM_ID) : null), (ADJUSTMENT ? tango.stdc.stringz.toStringz(ADJUSTMENT) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int VerifyMessageSuccess(char[] str_Message) {
    auto ret = otapi_im.OT_ME_VerifyMessageSuccess(cast(void*)swigCPtr, (str_Message ? tango.stdc.stringz.toStringz(str_Message) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int VerifyMsgBalanceAgrmntSuccess(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] str_Message) {
    auto ret = otapi_im.OT_ME_VerifyMsgBalanceAgrmntSuccess(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (str_Message ? tango.stdc.stringz.toStringz(str_Message) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int VerifyMsgTrnxSuccess(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] str_Message) {
    auto ret = otapi_im.OT_ME_VerifyMsgTrnxSuccess(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (str_Message ? tango.stdc.stringz.toStringz(str_Message) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int InterpretTransactionMsgReply(char[] SERVER_ID, char[] USER_ID, char[] ACCOUNT_ID, char[] str_Attempt, char[] str_Response) {
    auto ret = otapi_im.OT_ME_InterpretTransactionMsgReply(cast(void*)swigCPtr, (SERVER_ID ? tango.stdc.stringz.toStringz(SERVER_ID) : null), (USER_ID ? tango.stdc.stringz.toStringz(USER_ID) : null), (ACCOUNT_ID ? tango.stdc.stringz.toStringz(ACCOUNT_ID) : null), (str_Attempt ? tango.stdc.stringz.toStringz(str_Attempt) : null), (str_Response ? tango.stdc.stringz.toStringz(str_Response) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] ExecuteScript_ReturnString(char[] str_Code, char[] str_DisplayName) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_ExecuteScript_ReturnString__SWIG_0(cast(void*)swigCPtr, (str_Code ? tango.stdc.stringz.toStringz(str_Code) : null), (str_DisplayName ? tango.stdc.stringz.toStringz(str_DisplayName) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] ExecuteScript_ReturnString(char[] str_Code) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OT_ME_ExecuteScript_ReturnString__SWIG_1(cast(void*)swigCPtr, (str_Code ? tango.stdc.stringz.toStringz(str_Code) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool ExecuteScript_ReturnBool(char[] str_Code, char[] str_DisplayName) {
    bool ret = otapi_im.OT_ME_ExecuteScript_ReturnBool__SWIG_0(cast(void*)swigCPtr, (str_Code ? tango.stdc.stringz.toStringz(str_Code) : null), (str_DisplayName ? tango.stdc.stringz.toStringz(str_DisplayName) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool ExecuteScript_ReturnBool(char[] str_Code) {
    bool ret = otapi_im.OT_ME_ExecuteScript_ReturnBool__SWIG_1(cast(void*)swigCPtr, (str_Code ? tango.stdc.stringz.toStringz(str_Code) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int ExecuteScript_ReturnInt(char[] str_Code, char[] str_DisplayName) {
    auto ret = otapi_im.OT_ME_ExecuteScript_ReturnInt__SWIG_0(cast(void*)swigCPtr, (str_Code ? tango.stdc.stringz.toStringz(str_Code) : null), (str_DisplayName ? tango.stdc.stringz.toStringz(str_DisplayName) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public int ExecuteScript_ReturnInt(char[] str_Code) {
    auto ret = otapi_im.OT_ME_ExecuteScript_ReturnInt__SWIG_1(cast(void*)swigCPtr, (str_Code ? tango.stdc.stringz.toStringz(str_Code) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void ExecuteScript_ReturnVoid(char[] str_Code, char[] str_DisplayName) {
    otapi_im.OT_ME_ExecuteScript_ReturnVoid__SWIG_0(cast(void*)swigCPtr, (str_Code ? tango.stdc.stringz.toStringz(str_Code) : null), (str_DisplayName ? tango.stdc.stringz.toStringz(str_DisplayName) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public void ExecuteScript_ReturnVoid(char[] str_Code) {
    otapi_im.OT_ME_ExecuteScript_ReturnVoid__SWIG_1(cast(void*)swigCPtr, (str_Code ? tango.stdc.stringz.toStringz(str_Code) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public void AddVariable(char[] str_var_name, SWIGTYPE_p_OTVariable theVar) {
    otapi_im.OT_ME_AddVariable(cast(void*)swigCPtr, (str_var_name ? tango.stdc.stringz.toStringz(str_var_name) : null), SWIGTYPE_p_OTVariable.swigGetCPtr(theVar));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_OTVariable FindVariable(char[] str_var_name) {
    void* cPtr = otapi_im.OT_ME_FindVariable(cast(void*)swigCPtr, (str_var_name ? tango.stdc.stringz.toStringz(str_var_name) : null));
    SWIGTYPE_p_OTVariable ret = (cPtr is null) ? null : new SWIGTYPE_p_OTVariable(cPtr, false);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static SWIGTYPE_p_OTVariable FindVariable2(char[] str_var_name) {
    void* cPtr = otapi_im.OT_ME_FindVariable2((str_var_name ? tango.stdc.stringz.toStringz(str_var_name) : null));
    SWIGTYPE_p_OTVariable ret = (cPtr is null) ? null : new SWIGTYPE_p_OTVariable(cPtr, false);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }
}

enum PackType {
  PACK_MESSAGE_PACK = 0,
  PACK_PROTOCOL_BUFFERS,
  PACK_TYPE_ERROR
}

enum StorageType {
  STORE_FILESYSTEM = 0,
  STORE_TYPE_SUBCLASS
}

enum StoredObjectType {
  STORED_OBJ_STRING = 0,
  STORED_OBJ_BLOB,
  STORED_OBJ_STRING_MAP,
  STORED_OBJ_WALLET_DATA,
  STORED_OBJ_BITCOIN_ACCT,
  STORED_OBJ_BITCOIN_SERVER,
  STORED_OBJ_RIPPLE_SERVER,
  STORED_OBJ_LOOM_SERVER,
  STORED_OBJ_SERVER_INFO,
  STORED_OBJ_CONTACT_NYM,
  STORED_OBJ_CONTACT_ACCT,
  STORED_OBJ_CONTACT,
  STORED_OBJ_ADDRESS_BOOK,
  STORED_OBJ_MARKET_DATA,
  STORED_OBJ_MARKET_LIST,
  STORED_OBJ_BID_DATA,
  STORED_OBJ_ASK_DATA,
  STORED_OBJ_OFFER_LIST_MARKET,
  STORED_OBJ_TRADE_DATA_MARKET,
  STORED_OBJ_TRADE_LIST_MARKET,
  STORED_OBJ_OFFER_DATA_NYM,
  STORED_OBJ_OFFER_LIST_NYM,
  STORED_OBJ_TRADE_DATA_NYM,
  STORED_OBJ_TRADE_LIST_NYM,
  STORED_OBJ_ERROR
}

class Storable {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(Storable obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_Storable(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public static Storable Create(StoredObjectType eType, PackType thePackType) {
    void* cPtr = otapi_im.Storable_Create(cast(int)eType, cast(int)thePackType);
    Storable ret = (cPtr is null) ? null : new Storable(cPtr, false);
    return ret;
  }

  public static Storable ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.Storable_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    Storable ret = (cPtr is null) ? null : new Storable(cPtr, false);
    return ret;
  }
}

class Storage {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(Storage obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_Storage(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public SWIGTYPE_p_OTPacker GetPacker(PackType ePackType) {
    void* cPtr = otapi_im.Storage_GetPacker__SWIG_0(cast(void*)swigCPtr, cast(int)ePackType);
    SWIGTYPE_p_OTPacker ret = (cPtr is null) ? null : new SWIGTYPE_p_OTPacker(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_OTPacker GetPacker() {
    void* cPtr = otapi_im.Storage_GetPacker__SWIG_1(cast(void*)swigCPtr);
    SWIGTYPE_p_OTPacker ret = (cPtr is null) ? null : new SWIGTYPE_p_OTPacker(cPtr, false);
    return ret;
  }

  public bool Exists(char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    bool ret = otapi_im.Storage_Exists__SWIG_0(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool Exists(char[] strFolder, char[] oneStr, char[] twoStr) {
    bool ret = otapi_im.Storage_Exists__SWIG_1(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool Exists(char[] strFolder, char[] oneStr) {
    bool ret = otapi_im.Storage_Exists__SWIG_2(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool Exists(char[] strFolder) {
    bool ret = otapi_im.Storage_Exists__SWIG_3(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public long FormPathString(SWIGTYPE_p_std__string strOutput, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    auto ret = otapi_im.Storage_FormPathString__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_std__string.swigGetCPtr(strOutput), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public long FormPathString(SWIGTYPE_p_std__string strOutput, char[] strFolder, char[] oneStr, char[] twoStr) {
    auto ret = otapi_im.Storage_FormPathString__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_std__string.swigGetCPtr(strOutput), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public long FormPathString(SWIGTYPE_p_std__string strOutput, char[] strFolder, char[] oneStr) {
    auto ret = otapi_im.Storage_FormPathString__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_std__string.swigGetCPtr(strOutput), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public long FormPathString(SWIGTYPE_p_std__string strOutput, char[] strFolder) {
    auto ret = otapi_im.Storage_FormPathString__SWIG_3(cast(void*)swigCPtr, SWIGTYPE_p_std__string.swigGetCPtr(strOutput), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StoreString(char[] strContents, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    bool ret = otapi_im.Storage_StoreString__SWIG_0(cast(void*)swigCPtr, (strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StoreString(char[] strContents, char[] strFolder, char[] oneStr, char[] twoStr) {
    bool ret = otapi_im.Storage_StoreString__SWIG_1(cast(void*)swigCPtr, (strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StoreString(char[] strContents, char[] strFolder, char[] oneStr) {
    bool ret = otapi_im.Storage_StoreString__SWIG_2(cast(void*)swigCPtr, (strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StoreString(char[] strContents, char[] strFolder) {
    bool ret = otapi_im.Storage_StoreString__SWIG_3(cast(void*)swigCPtr, (strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] QueryString(char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_QueryString__SWIG_0(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] QueryString(char[] strFolder, char[] oneStr, char[] twoStr) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_QueryString__SWIG_1(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] QueryString(char[] strFolder, char[] oneStr) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_QueryString__SWIG_2(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] QueryString(char[] strFolder) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_QueryString__SWIG_3(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StorePlainString(char[] strContents, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    bool ret = otapi_im.Storage_StorePlainString__SWIG_0(cast(void*)swigCPtr, (strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StorePlainString(char[] strContents, char[] strFolder, char[] oneStr, char[] twoStr) {
    bool ret = otapi_im.Storage_StorePlainString__SWIG_1(cast(void*)swigCPtr, (strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StorePlainString(char[] strContents, char[] strFolder, char[] oneStr) {
    bool ret = otapi_im.Storage_StorePlainString__SWIG_2(cast(void*)swigCPtr, (strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StorePlainString(char[] strContents, char[] strFolder) {
    bool ret = otapi_im.Storage_StorePlainString__SWIG_3(cast(void*)swigCPtr, (strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] QueryPlainString(char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_QueryPlainString__SWIG_0(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] QueryPlainString(char[] strFolder, char[] oneStr, char[] twoStr) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_QueryPlainString__SWIG_1(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] QueryPlainString(char[] strFolder, char[] oneStr) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_QueryPlainString__SWIG_2(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] QueryPlainString(char[] strFolder) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_QueryPlainString__SWIG_3(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StoreObject(Storable theContents, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    bool ret = otapi_im.Storage_StoreObject__SWIG_0(cast(void*)swigCPtr, Storable.swigGetCPtr(theContents), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StoreObject(Storable theContents, char[] strFolder, char[] oneStr, char[] twoStr) {
    bool ret = otapi_im.Storage_StoreObject__SWIG_1(cast(void*)swigCPtr, Storable.swigGetCPtr(theContents), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StoreObject(Storable theContents, char[] strFolder, char[] oneStr) {
    bool ret = otapi_im.Storage_StoreObject__SWIG_2(cast(void*)swigCPtr, Storable.swigGetCPtr(theContents), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool StoreObject(Storable theContents, char[] strFolder) {
    bool ret = otapi_im.Storage_StoreObject__SWIG_3(cast(void*)swigCPtr, Storable.swigGetCPtr(theContents), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public Storable QueryObject(StoredObjectType theObjectType, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    void* cPtr = otapi_im.Storage_QueryObject__SWIG_0(cast(void*)swigCPtr, cast(int)theObjectType, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null));
    Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public Storable QueryObject(StoredObjectType theObjectType, char[] strFolder, char[] oneStr, char[] twoStr) {
    void* cPtr = otapi_im.Storage_QueryObject__SWIG_1(cast(void*)swigCPtr, cast(int)theObjectType, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null));
    Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public Storable QueryObject(StoredObjectType theObjectType, char[] strFolder, char[] oneStr) {
    void* cPtr = otapi_im.Storage_QueryObject__SWIG_2(cast(void*)swigCPtr, cast(int)theObjectType, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null));
    Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public Storable QueryObject(StoredObjectType theObjectType, char[] strFolder) {
    void* cPtr = otapi_im.Storage_QueryObject__SWIG_3(cast(void*)swigCPtr, cast(int)theObjectType, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null));
    Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public char[] EncodeObject(Storable theContents) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Storage_EncodeObject(cast(void*)swigCPtr, Storable.swigGetCPtr(theContents)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public Storable DecodeObject(StoredObjectType theObjectType, char[] strInput) {
    void* cPtr = otapi_im.Storage_DecodeObject(cast(void*)swigCPtr, cast(int)theObjectType, (strInput ? tango.stdc.stringz.toStringz(strInput) : null));
    Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool EraseValueByKey(char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
    bool ret = otapi_im.Storage_EraseValueByKey__SWIG_0(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool EraseValueByKey(char[] strFolder, char[] oneStr, char[] twoStr) {
    bool ret = otapi_im.Storage_EraseValueByKey__SWIG_1(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool EraseValueByKey(char[] strFolder, char[] oneStr) {
    bool ret = otapi_im.Storage_EraseValueByKey__SWIG_2(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool EraseValueByKey(char[] strFolder) {
    bool ret = otapi_im.Storage_EraseValueByKey__SWIG_3(cast(void*)swigCPtr, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public Storable CreateObject(StoredObjectType eType) {
    void* cPtr = otapi_im.Storage_CreateObject(cast(void*)swigCPtr, cast(int)eType);
    Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
    return ret;
  }

  public static Storage Create(StorageType eStorageType, PackType ePackType) {
    void* cPtr = otapi_im.Storage_Create(cast(int)eStorageType, cast(int)ePackType);
    Storage ret = (cPtr is null) ? null : new Storage(cPtr, false);
    return ret;
  }

  public StorageType GetType() {
    StorageType ret = cast(StorageType)otapi_im.Storage_GetType(cast(void*)swigCPtr);
    return ret;
  }
}

bool InitDefaultStorage(StorageType eStoreType, PackType ePackType) {
  bool ret = otapi_im.InitDefaultStorage(cast(int)eStoreType, cast(int)ePackType) ? true : false;
  return ret;
}

Storage GetDefaultStorage() {
  void* cPtr = otapi_im.GetDefaultStorage();
  Storage ret = (cPtr is null) ? null : new Storage(cPtr, false);
  return ret;
}

Storage CreateStorageContext(StorageType eStoreType, PackType ePackType) {
  void* cPtr = otapi_im.CreateStorageContext__SWIG_0(cast(int)eStoreType, cast(int)ePackType);
  Storage ret = (cPtr is null) ? null : new Storage(cPtr, true);
  return ret;
}

Storage CreateStorageContext(StorageType eStoreType) {
  void* cPtr = otapi_im.CreateStorageContext__SWIG_1(cast(int)eStoreType);
  Storage ret = (cPtr is null) ? null : new Storage(cPtr, true);
  return ret;
}

Storable CreateObject(StoredObjectType eType) {
  void* cPtr = otapi_im.CreateObject(cast(int)eType);
  Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
  return ret;
}

bool CheckStringsExistInOrder(SWIGTYPE_p_std__string strFolder, SWIGTYPE_p_std__string oneStr, SWIGTYPE_p_std__string twoStr, SWIGTYPE_p_std__string threeStr, char[] szFuncName) {
  bool ret = otapi_im.CheckStringsExistInOrder__SWIG_0(SWIGTYPE_p_std__string.swigGetCPtr(strFolder), SWIGTYPE_p_std__string.swigGetCPtr(oneStr), SWIGTYPE_p_std__string.swigGetCPtr(twoStr), SWIGTYPE_p_std__string.swigGetCPtr(threeStr), (szFuncName ? tango.stdc.stringz.toStringz(szFuncName) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool CheckStringsExistInOrder(SWIGTYPE_p_std__string strFolder, SWIGTYPE_p_std__string oneStr, SWIGTYPE_p_std__string twoStr, SWIGTYPE_p_std__string threeStr) {
  bool ret = otapi_im.CheckStringsExistInOrder__SWIG_1(SWIGTYPE_p_std__string.swigGetCPtr(strFolder), SWIGTYPE_p_std__string.swigGetCPtr(oneStr), SWIGTYPE_p_std__string.swigGetCPtr(twoStr), SWIGTYPE_p_std__string.swigGetCPtr(threeStr)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool Exists(char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  bool ret = otapi_im.Exists__SWIG_0((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool Exists(char[] strFolder, char[] oneStr, char[] twoStr) {
  bool ret = otapi_im.Exists__SWIG_1((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool Exists(char[] strFolder, char[] oneStr) {
  bool ret = otapi_im.Exists__SWIG_2((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool Exists(char[] strFolder) {
  bool ret = otapi_im.Exists__SWIG_3((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

long FormPathString(SWIGTYPE_p_std__string strOutput, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  auto ret = otapi_im.FormPathString__SWIG_0(SWIGTYPE_p_std__string.swigGetCPtr(strOutput), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

long FormPathString(SWIGTYPE_p_std__string strOutput, char[] strFolder, char[] oneStr, char[] twoStr) {
  auto ret = otapi_im.FormPathString__SWIG_1(SWIGTYPE_p_std__string.swigGetCPtr(strOutput), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

long FormPathString(SWIGTYPE_p_std__string strOutput, char[] strFolder, char[] oneStr) {
  auto ret = otapi_im.FormPathString__SWIG_2(SWIGTYPE_p_std__string.swigGetCPtr(strOutput), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

long FormPathString(SWIGTYPE_p_std__string strOutput, char[] strFolder) {
  auto ret = otapi_im.FormPathString__SWIG_3(SWIGTYPE_p_std__string.swigGetCPtr(strOutput), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StoreString(char[] strContents, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  bool ret = otapi_im.StoreString__SWIG_0((strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StoreString(char[] strContents, char[] strFolder, char[] oneStr, char[] twoStr) {
  bool ret = otapi_im.StoreString__SWIG_1((strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StoreString(char[] strContents, char[] strFolder, char[] oneStr) {
  bool ret = otapi_im.StoreString__SWIG_2((strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StoreString(char[] strContents, char[] strFolder) {
  bool ret = otapi_im.StoreString__SWIG_3((strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] QueryString(char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.QueryString__SWIG_0((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] QueryString(char[] strFolder, char[] oneStr, char[] twoStr) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.QueryString__SWIG_1((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] QueryString(char[] strFolder, char[] oneStr) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.QueryString__SWIG_2((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] QueryString(char[] strFolder) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.QueryString__SWIG_3((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StorePlainString(char[] strContents, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  bool ret = otapi_im.StorePlainString__SWIG_0((strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StorePlainString(char[] strContents, char[] strFolder, char[] oneStr, char[] twoStr) {
  bool ret = otapi_im.StorePlainString__SWIG_1((strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StorePlainString(char[] strContents, char[] strFolder, char[] oneStr) {
  bool ret = otapi_im.StorePlainString__SWIG_2((strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StorePlainString(char[] strContents, char[] strFolder) {
  bool ret = otapi_im.StorePlainString__SWIG_3((strContents ? tango.stdc.stringz.toStringz(strContents) : null), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] QueryPlainString(char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.QueryPlainString__SWIG_0((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] QueryPlainString(char[] strFolder, char[] oneStr, char[] twoStr) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.QueryPlainString__SWIG_1((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] QueryPlainString(char[] strFolder, char[] oneStr) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.QueryPlainString__SWIG_2((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] QueryPlainString(char[] strFolder) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.QueryPlainString__SWIG_3((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StoreObject(Storable theContents, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  bool ret = otapi_im.StoreObject__SWIG_0(Storable.swigGetCPtr(theContents), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StoreObject(Storable theContents, char[] strFolder, char[] oneStr, char[] twoStr) {
  bool ret = otapi_im.StoreObject__SWIG_1(Storable.swigGetCPtr(theContents), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StoreObject(Storable theContents, char[] strFolder, char[] oneStr) {
  bool ret = otapi_im.StoreObject__SWIG_2(Storable.swigGetCPtr(theContents), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool StoreObject(Storable theContents, char[] strFolder) {
  bool ret = otapi_im.StoreObject__SWIG_3(Storable.swigGetCPtr(theContents), (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

Storable QueryObject(StoredObjectType theObjectType, char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  void* cPtr = otapi_im.QueryObject__SWIG_0(cast(int)theObjectType, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null));
  Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

Storable QueryObject(StoredObjectType theObjectType, char[] strFolder, char[] oneStr, char[] twoStr) {
  void* cPtr = otapi_im.QueryObject__SWIG_1(cast(int)theObjectType, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null));
  Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

Storable QueryObject(StoredObjectType theObjectType, char[] strFolder, char[] oneStr) {
  void* cPtr = otapi_im.QueryObject__SWIG_2(cast(int)theObjectType, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null));
  Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

Storable QueryObject(StoredObjectType theObjectType, char[] strFolder) {
  void* cPtr = otapi_im.QueryObject__SWIG_3(cast(int)theObjectType, (strFolder ? tango.stdc.stringz.toStringz(strFolder) : null));
  Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

char[] EncodeObject(Storable theContents) {
  char[] ret = tango.stdc.stringz.fromStringz(otapi_im.EncodeObject(Storable.swigGetCPtr(theContents)));
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

Storable DecodeObject(StoredObjectType theObjectType, char[] strInput) {
  void* cPtr = otapi_im.DecodeObject(cast(int)theObjectType, (strInput ? tango.stdc.stringz.toStringz(strInput) : null));
  Storable ret = (cPtr is null) ? null : new Storable(cPtr, true);
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool EraseValueByKey(char[] strFolder, char[] oneStr, char[] twoStr, char[] threeStr) {
  bool ret = otapi_im.EraseValueByKey__SWIG_0((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null), (threeStr ? tango.stdc.stringz.toStringz(threeStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool EraseValueByKey(char[] strFolder, char[] oneStr, char[] twoStr) {
  bool ret = otapi_im.EraseValueByKey__SWIG_1((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null), (twoStr ? tango.stdc.stringz.toStringz(twoStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool EraseValueByKey(char[] strFolder, char[] oneStr) {
  bool ret = otapi_im.EraseValueByKey__SWIG_2((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null), (oneStr ? tango.stdc.stringz.toStringz(oneStr) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

bool EraseValueByKey(char[] strFolder) {
  bool ret = otapi_im.EraseValueByKey__SWIG_3((strFolder ? tango.stdc.stringz.toStringz(strFolder) : null)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

class OTDBString : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.OTDBString_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(OTDBString obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OTDBString(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void m_string(char[] value) {
    otapi_im.OTDBString_m_string_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] m_string() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OTDBString_m_string_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static OTDBString ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.OTDBString_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    OTDBString ret = (cPtr is null) ? null : new OTDBString(cPtr, false);
    return ret;
  }
}

class Blob : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.Blob_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(Blob obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_Blob(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void m_memBuffer(VectorUnsignedChar value) {
    otapi_im.Blob_m_memBuffer_set(cast(void*)swigCPtr, VectorUnsignedChar.swigGetCPtr(value));
  }

  public VectorUnsignedChar m_memBuffer() {
    void* cPtr = otapi_im.Blob_m_memBuffer_get(cast(void*)swigCPtr);
    VectorUnsignedChar ret = (cPtr is null) ? null : new VectorUnsignedChar(cPtr, false);
    return ret;
  }

  public static Blob ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.Blob_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    Blob ret = (cPtr is null) ? null : new Blob(cPtr, false);
    return ret;
  }
}

class StringMap : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.StringMap_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(StringMap obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_StringMap(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void the_map(MapStringString value) {
    otapi_im.StringMap_the_map_set(cast(void*)swigCPtr, MapStringString.swigGetCPtr(value));
  }

  public MapStringString the_map() {
    void* cPtr = otapi_im.StringMap_the_map_get(cast(void*)swigCPtr);
    MapStringString ret = (cPtr is null) ? null : new MapStringString(cPtr, false);
    return ret;
  }

  public void SetValue(char[] strKey, char[] strValue) {
    otapi_im.StringMap_SetValue(cast(void*)swigCPtr, (strKey ? tango.stdc.stringz.toStringz(strKey) : null), (strValue ? tango.stdc.stringz.toStringz(strValue) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] GetValue(char[] strKey) {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.StringMap_GetValue(cast(void*)swigCPtr, (strKey ? tango.stdc.stringz.toStringz(strKey) : null)));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static StringMap ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.StringMap_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    StringMap ret = (cPtr is null) ? null : new StringMap(cPtr, false);
    return ret;
  }
}

class Displayable : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.Displayable_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(Displayable obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_Displayable(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.Displayable_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Displayable_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static Displayable ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.Displayable_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    Displayable ret = (cPtr is null) ? null : new Displayable(cPtr, false);
    return ret;
  }
}

class MarketData : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.MarketData_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(MarketData obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_MarketData(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.MarketData_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.MarketData_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void market_id(char[] value) {
    otapi_im.MarketData_market_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] market_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_market_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void asset_type_id(char[] value) {
    otapi_im.MarketData_asset_type_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] asset_type_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_asset_type_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void currency_type_id(char[] value) {
    otapi_im.MarketData_currency_type_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] currency_type_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_currency_type_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void scale(char[] value) {
    otapi_im.MarketData_scale_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] scale() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_scale_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void total_assets(char[] value) {
    otapi_im.MarketData_total_assets_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] total_assets() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_total_assets_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void number_bids(char[] value) {
    otapi_im.MarketData_number_bids_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] number_bids() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_number_bids_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void number_asks(char[] value) {
    otapi_im.MarketData_number_asks_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] number_asks() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_number_asks_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void last_sale_price(char[] value) {
    otapi_im.MarketData_last_sale_price_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] last_sale_price() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_last_sale_price_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void current_bid(char[] value) {
    otapi_im.MarketData_current_bid_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] current_bid() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_current_bid_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void current_ask(char[] value) {
    otapi_im.MarketData_current_ask_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] current_ask() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_current_ask_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void volume_trades(char[] value) {
    otapi_im.MarketData_volume_trades_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] volume_trades() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_volume_trades_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void volume_assets(char[] value) {
    otapi_im.MarketData_volume_assets_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] volume_assets() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_volume_assets_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void volume_currency(char[] value) {
    otapi_im.MarketData_volume_currency_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] volume_currency() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_volume_currency_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void recent_highest_bid(char[] value) {
    otapi_im.MarketData_recent_highest_bid_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] recent_highest_bid() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_recent_highest_bid_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void recent_lowest_ask(char[] value) {
    otapi_im.MarketData_recent_lowest_ask_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] recent_lowest_ask() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_recent_lowest_ask_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void last_sale_date(char[] value) {
    otapi_im.MarketData_last_sale_date_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] last_sale_date() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.MarketData_last_sale_date_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static MarketData ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.MarketData_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    MarketData ret = (cPtr is null) ? null : new MarketData(cPtr, false);
    return ret;
  }
}

class MarketList : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.MarketList_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(MarketList obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_MarketList(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public size_t GetMarketDataCount() {
    auto ret = otapi_im.MarketList_GetMarketDataCount(cast(void*)swigCPtr);
    return ret;
  }

  public MarketData GetMarketData(size_t nIndex) {
    void* cPtr = otapi_im.MarketList_GetMarketData(cast(void*)swigCPtr, nIndex);
    MarketData ret = (cPtr is null) ? null : new MarketData(cPtr, false);
    return ret;
  }

  public bool RemoveMarketData(size_t nIndexMarketData) {
    bool ret = otapi_im.MarketList_RemoveMarketData(cast(void*)swigCPtr, nIndexMarketData) ? true : false;
    return ret;
  }

  public bool AddMarketData(MarketData disownObject) {
    bool ret = otapi_im.MarketList_AddMarketData(cast(void*)swigCPtr, MarketData.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static MarketList ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.MarketList_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    MarketList ret = (cPtr is null) ? null : new MarketList(cPtr, false);
    return ret;
  }
}

class OfferDataMarket : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.OfferDataMarket_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(OfferDataMarket obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OfferDataMarket(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.OfferDataMarket_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataMarket_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void transaction_id(char[] value) {
    otapi_im.OfferDataMarket_transaction_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] transaction_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataMarket_transaction_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void price_per_scale(char[] value) {
    otapi_im.OfferDataMarket_price_per_scale_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] price_per_scale() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataMarket_price_per_scale_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void available_assets(char[] value) {
    otapi_im.OfferDataMarket_available_assets_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] available_assets() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataMarket_available_assets_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void minimum_increment(char[] value) {
    otapi_im.OfferDataMarket_minimum_increment_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] minimum_increment() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataMarket_minimum_increment_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void date(char[] value) {
    otapi_im.OfferDataMarket_date_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] date() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataMarket_date_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static OfferDataMarket ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.OfferDataMarket_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    OfferDataMarket ret = (cPtr is null) ? null : new OfferDataMarket(cPtr, false);
    return ret;
  }
}

class BidData : OfferDataMarket {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.BidData_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(BidData obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_BidData(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.BidData_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BidData_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void transaction_id(char[] value) {
    otapi_im.BidData_transaction_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] transaction_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BidData_transaction_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void price_per_scale(char[] value) {
    otapi_im.BidData_price_per_scale_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] price_per_scale() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BidData_price_per_scale_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void available_assets(char[] value) {
    otapi_im.BidData_available_assets_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] available_assets() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BidData_available_assets_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void minimum_increment(char[] value) {
    otapi_im.BidData_minimum_increment_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] minimum_increment() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BidData_minimum_increment_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void date(char[] value) {
    otapi_im.BidData_date_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] date() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BidData_date_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static BidData ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.BidData_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    BidData ret = (cPtr is null) ? null : new BidData(cPtr, false);
    return ret;
  }
}

class AskData : OfferDataMarket {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.AskData_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(AskData obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_AskData(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.AskData_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.AskData_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void transaction_id(char[] value) {
    otapi_im.AskData_transaction_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] transaction_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.AskData_transaction_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void price_per_scale(char[] value) {
    otapi_im.AskData_price_per_scale_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] price_per_scale() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.AskData_price_per_scale_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void available_assets(char[] value) {
    otapi_im.AskData_available_assets_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] available_assets() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.AskData_available_assets_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void minimum_increment(char[] value) {
    otapi_im.AskData_minimum_increment_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] minimum_increment() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.AskData_minimum_increment_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void date(char[] value) {
    otapi_im.AskData_date_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] date() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.AskData_date_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static AskData ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.AskData_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    AskData ret = (cPtr is null) ? null : new AskData(cPtr, false);
    return ret;
  }
}

class OfferListMarket : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.OfferListMarket_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(OfferListMarket obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OfferListMarket(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public size_t GetBidDataCount() {
    auto ret = otapi_im.OfferListMarket_GetBidDataCount(cast(void*)swigCPtr);
    return ret;
  }

  public BidData GetBidData(size_t nIndex) {
    void* cPtr = otapi_im.OfferListMarket_GetBidData(cast(void*)swigCPtr, nIndex);
    BidData ret = (cPtr is null) ? null : new BidData(cPtr, false);
    return ret;
  }

  public bool RemoveBidData(size_t nIndexBidData) {
    bool ret = otapi_im.OfferListMarket_RemoveBidData(cast(void*)swigCPtr, nIndexBidData) ? true : false;
    return ret;
  }

  public bool AddBidData(BidData disownObject) {
    bool ret = otapi_im.OfferListMarket_AddBidData(cast(void*)swigCPtr, BidData.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public size_t GetAskDataCount() {
    auto ret = otapi_im.OfferListMarket_GetAskDataCount(cast(void*)swigCPtr);
    return ret;
  }

  public AskData GetAskData(size_t nIndex) {
    void* cPtr = otapi_im.OfferListMarket_GetAskData(cast(void*)swigCPtr, nIndex);
    AskData ret = (cPtr is null) ? null : new AskData(cPtr, false);
    return ret;
  }

  public bool RemoveAskData(size_t nIndexAskData) {
    bool ret = otapi_im.OfferListMarket_RemoveAskData(cast(void*)swigCPtr, nIndexAskData) ? true : false;
    return ret;
  }

  public bool AddAskData(AskData disownObject) {
    bool ret = otapi_im.OfferListMarket_AddAskData(cast(void*)swigCPtr, AskData.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static OfferListMarket ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.OfferListMarket_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    OfferListMarket ret = (cPtr is null) ? null : new OfferListMarket(cPtr, false);
    return ret;
  }
}

class TradeDataMarket : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.TradeDataMarket_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(TradeDataMarket obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_TradeDataMarket(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.TradeDataMarket_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataMarket_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void transaction_id(char[] value) {
    otapi_im.TradeDataMarket_transaction_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] transaction_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataMarket_transaction_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void date(char[] value) {
    otapi_im.TradeDataMarket_date_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] date() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataMarket_date_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void price(char[] value) {
    otapi_im.TradeDataMarket_price_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] price() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataMarket_price_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void amount_sold(char[] value) {
    otapi_im.TradeDataMarket_amount_sold_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] amount_sold() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataMarket_amount_sold_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static TradeDataMarket ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.TradeDataMarket_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    TradeDataMarket ret = (cPtr is null) ? null : new TradeDataMarket(cPtr, false);
    return ret;
  }
}

class TradeListMarket : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.TradeListMarket_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(TradeListMarket obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_TradeListMarket(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public size_t GetTradeDataMarketCount() {
    auto ret = otapi_im.TradeListMarket_GetTradeDataMarketCount(cast(void*)swigCPtr);
    return ret;
  }

  public TradeDataMarket GetTradeDataMarket(size_t nIndex) {
    void* cPtr = otapi_im.TradeListMarket_GetTradeDataMarket(cast(void*)swigCPtr, nIndex);
    TradeDataMarket ret = (cPtr is null) ? null : new TradeDataMarket(cPtr, false);
    return ret;
  }

  public bool RemoveTradeDataMarket(size_t nIndexTradeDataMarket) {
    bool ret = otapi_im.TradeListMarket_RemoveTradeDataMarket(cast(void*)swigCPtr, nIndexTradeDataMarket) ? true : false;
    return ret;
  }

  public bool AddTradeDataMarket(TradeDataMarket disownObject) {
    bool ret = otapi_im.TradeListMarket_AddTradeDataMarket(cast(void*)swigCPtr, TradeDataMarket.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static TradeListMarket ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.TradeListMarket_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    TradeListMarket ret = (cPtr is null) ? null : new TradeListMarket(cPtr, false);
    return ret;
  }
}

class OfferDataNym : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.OfferDataNym_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(OfferDataNym obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OfferDataNym(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.OfferDataNym_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void valid_from(char[] value) {
    otapi_im.OfferDataNym_valid_from_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] valid_from() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_valid_from_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void valid_to(char[] value) {
    otapi_im.OfferDataNym_valid_to_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] valid_to() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_valid_to_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.OfferDataNym_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void asset_type_id(char[] value) {
    otapi_im.OfferDataNym_asset_type_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] asset_type_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_asset_type_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void asset_acct_id(char[] value) {
    otapi_im.OfferDataNym_asset_acct_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] asset_acct_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_asset_acct_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void currency_type_id(char[] value) {
    otapi_im.OfferDataNym_currency_type_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] currency_type_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_currency_type_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void currency_acct_id(char[] value) {
    otapi_im.OfferDataNym_currency_acct_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] currency_acct_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_currency_acct_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void selling(bool value) {
    otapi_im.OfferDataNym_selling_set(cast(void*)swigCPtr, value);
  }

  public bool selling() {
    bool ret = otapi_im.OfferDataNym_selling_get(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void scale(char[] value) {
    otapi_im.OfferDataNym_scale_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] scale() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_scale_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void price_per_scale(char[] value) {
    otapi_im.OfferDataNym_price_per_scale_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] price_per_scale() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_price_per_scale_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void transaction_id(char[] value) {
    otapi_im.OfferDataNym_transaction_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] transaction_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_transaction_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void total_assets(char[] value) {
    otapi_im.OfferDataNym_total_assets_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] total_assets() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_total_assets_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void finished_so_far(char[] value) {
    otapi_im.OfferDataNym_finished_so_far_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] finished_so_far() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_finished_so_far_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void minimum_increment(char[] value) {
    otapi_im.OfferDataNym_minimum_increment_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] minimum_increment() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_minimum_increment_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void stop_sign(char[] value) {
    otapi_im.OfferDataNym_stop_sign_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] stop_sign() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_stop_sign_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void stop_price(char[] value) {
    otapi_im.OfferDataNym_stop_price_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] stop_price() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_stop_price_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void date(char[] value) {
    otapi_im.OfferDataNym_date_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] date() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.OfferDataNym_date_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static OfferDataNym ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.OfferDataNym_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    OfferDataNym ret = (cPtr is null) ? null : new OfferDataNym(cPtr, false);
    return ret;
  }
}

class OfferListNym : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.OfferListNym_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(OfferListNym obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_OfferListNym(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public size_t GetOfferDataNymCount() {
    auto ret = otapi_im.OfferListNym_GetOfferDataNymCount(cast(void*)swigCPtr);
    return ret;
  }

  public OfferDataNym GetOfferDataNym(size_t nIndex) {
    void* cPtr = otapi_im.OfferListNym_GetOfferDataNym(cast(void*)swigCPtr, nIndex);
    OfferDataNym ret = (cPtr is null) ? null : new OfferDataNym(cPtr, false);
    return ret;
  }

  public bool RemoveOfferDataNym(size_t nIndexOfferDataNym) {
    bool ret = otapi_im.OfferListNym_RemoveOfferDataNym(cast(void*)swigCPtr, nIndexOfferDataNym) ? true : false;
    return ret;
  }

  public bool AddOfferDataNym(OfferDataNym disownObject) {
    bool ret = otapi_im.OfferListNym_AddOfferDataNym(cast(void*)swigCPtr, OfferDataNym.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static OfferListNym ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.OfferListNym_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    OfferListNym ret = (cPtr is null) ? null : new OfferListNym(cPtr, false);
    return ret;
  }
}

class TradeDataNym : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.TradeDataNym_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(TradeDataNym obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_TradeDataNym(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.TradeDataNym_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void transaction_id(char[] value) {
    otapi_im.TradeDataNym_transaction_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] transaction_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_transaction_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void completed_count(char[] value) {
    otapi_im.TradeDataNym_completed_count_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] completed_count() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_completed_count_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void date(char[] value) {
    otapi_im.TradeDataNym_date_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] date() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_date_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void price(char[] value) {
    otapi_im.TradeDataNym_price_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] price() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_price_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void amount_sold(char[] value) {
    otapi_im.TradeDataNym_amount_sold_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] amount_sold() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_amount_sold_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void updated_id(char[] value) {
    otapi_im.TradeDataNym_updated_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] updated_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_updated_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void offer_price(char[] value) {
    otapi_im.TradeDataNym_offer_price_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] offer_price() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_offer_price_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void finished_so_far(char[] value) {
    otapi_im.TradeDataNym_finished_so_far_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] finished_so_far() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_finished_so_far_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void asset_id(char[] value) {
    otapi_im.TradeDataNym_asset_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] asset_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_asset_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void currency_id(char[] value) {
    otapi_im.TradeDataNym_currency_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] currency_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_currency_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void currency_paid(char[] value) {
    otapi_im.TradeDataNym_currency_paid_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] currency_paid() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.TradeDataNym_currency_paid_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static TradeDataNym ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.TradeDataNym_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    TradeDataNym ret = (cPtr is null) ? null : new TradeDataNym(cPtr, false);
    return ret;
  }
}

class TradeListNym : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.TradeListNym_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(TradeListNym obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_TradeListNym(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public size_t GetTradeDataNymCount() {
    auto ret = otapi_im.TradeListNym_GetTradeDataNymCount(cast(void*)swigCPtr);
    return ret;
  }

  public TradeDataNym GetTradeDataNym(size_t nIndex) {
    void* cPtr = otapi_im.TradeListNym_GetTradeDataNym(cast(void*)swigCPtr, nIndex);
    TradeDataNym ret = (cPtr is null) ? null : new TradeDataNym(cPtr, false);
    return ret;
  }

  public bool RemoveTradeDataNym(size_t nIndexTradeDataNym) {
    bool ret = otapi_im.TradeListNym_RemoveTradeDataNym(cast(void*)swigCPtr, nIndexTradeDataNym) ? true : false;
    return ret;
  }

  public bool AddTradeDataNym(TradeDataNym disownObject) {
    bool ret = otapi_im.TradeListNym_AddTradeDataNym(cast(void*)swigCPtr, TradeDataNym.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static TradeListNym ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.TradeListNym_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    TradeListNym ret = (cPtr is null) ? null : new TradeListNym(cPtr, false);
    return ret;
  }
}

class Acct : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.Acct_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(Acct obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_Acct(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.Acct_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Acct_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void acct_id(char[] value) {
    otapi_im.Acct_acct_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] acct_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Acct_acct_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.Acct_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Acct_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static Acct ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.Acct_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    Acct ret = (cPtr is null) ? null : new Acct(cPtr, false);
    return ret;
  }
}

class BitcoinAcct : Acct {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.BitcoinAcct_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(BitcoinAcct obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_BitcoinAcct(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.BitcoinAcct_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinAcct_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void acct_id(char[] value) {
    otapi_im.BitcoinAcct_acct_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] acct_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinAcct_acct_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.BitcoinAcct_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinAcct_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void bitcoin_acct_name(char[] value) {
    otapi_im.BitcoinAcct_bitcoin_acct_name_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] bitcoin_acct_name() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinAcct_bitcoin_acct_name_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static BitcoinAcct ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.BitcoinAcct_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    BitcoinAcct ret = (cPtr is null) ? null : new BitcoinAcct(cPtr, false);
    return ret;
  }
}

class ServerInfo : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.ServerInfo_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(ServerInfo obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_ServerInfo(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.ServerInfo_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ServerInfo_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.ServerInfo_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ServerInfo_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_type(char[] value) {
    otapi_im.ServerInfo_server_type_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_type() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ServerInfo_server_type_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static ServerInfo ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.ServerInfo_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    ServerInfo ret = (cPtr is null) ? null : new ServerInfo(cPtr, false);
    return ret;
  }
}

class Server : ServerInfo {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.Server_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(Server obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_Server(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.Server_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Server_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.Server_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Server_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_type(char[] value) {
    otapi_im.Server_server_type_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_type() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Server_server_type_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_host(char[] value) {
    otapi_im.Server_server_host_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_host() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Server_server_host_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_port(char[] value) {
    otapi_im.Server_server_port_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_port() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Server_server_port_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static Server ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.Server_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    Server ret = (cPtr is null) ? null : new Server(cPtr, false);
    return ret;
  }
}

class BitcoinServer : Server {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.BitcoinServer_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(BitcoinServer obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_BitcoinServer(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.BitcoinServer_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinServer_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.BitcoinServer_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinServer_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_type(char[] value) {
    otapi_im.BitcoinServer_server_type_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_type() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinServer_server_type_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_host(char[] value) {
    otapi_im.BitcoinServer_server_host_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_host() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinServer_server_host_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_port(char[] value) {
    otapi_im.BitcoinServer_server_port_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_port() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinServer_server_port_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void bitcoin_username(char[] value) {
    otapi_im.BitcoinServer_bitcoin_username_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] bitcoin_username() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinServer_bitcoin_username_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void bitcoin_password(char[] value) {
    otapi_im.BitcoinServer_bitcoin_password_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] bitcoin_password() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.BitcoinServer_bitcoin_password_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static BitcoinServer ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.BitcoinServer_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    BitcoinServer ret = (cPtr is null) ? null : new BitcoinServer(cPtr, false);
    return ret;
  }
}

class RippleServer : Server {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.RippleServer_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(RippleServer obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_RippleServer(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.RippleServer_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.RippleServer_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_type(char[] value) {
    otapi_im.RippleServer_server_type_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_type() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_server_type_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_host(char[] value) {
    otapi_im.RippleServer_server_host_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_host() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_server_host_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_port(char[] value) {
    otapi_im.RippleServer_server_port_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_port() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_server_port_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void ripple_username(char[] value) {
    otapi_im.RippleServer_ripple_username_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] ripple_username() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_ripple_username_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void ripple_password(char[] value) {
    otapi_im.RippleServer_ripple_password_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] ripple_password() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_ripple_password_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void namefield_id(char[] value) {
    otapi_im.RippleServer_namefield_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] namefield_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_namefield_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void passfield_id(char[] value) {
    otapi_im.RippleServer_passfield_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] passfield_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.RippleServer_passfield_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static RippleServer ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.RippleServer_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    RippleServer ret = (cPtr is null) ? null : new RippleServer(cPtr, false);
    return ret;
  }
}

class LoomServer : Server {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.LoomServer_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(LoomServer obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_LoomServer(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.LoomServer_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.LoomServer_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.LoomServer_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.LoomServer_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_type(char[] value) {
    otapi_im.LoomServer_server_type_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_type() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.LoomServer_server_type_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_host(char[] value) {
    otapi_im.LoomServer_server_host_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_host() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.LoomServer_server_host_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_port(char[] value) {
    otapi_im.LoomServer_server_port_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_port() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.LoomServer_server_port_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void loom_username(char[] value) {
    otapi_im.LoomServer_loom_username_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] loom_username() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.LoomServer_loom_username_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void namefield_id(char[] value) {
    otapi_im.LoomServer_namefield_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] namefield_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.LoomServer_namefield_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static LoomServer ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.LoomServer_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    LoomServer ret = (cPtr is null) ? null : new LoomServer(cPtr, false);
    return ret;
  }
}

class ContactNym : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.ContactNym_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(ContactNym obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_ContactNym(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.ContactNym_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactNym_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void nym_type(char[] value) {
    otapi_im.ContactNym_nym_type_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] nym_type() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactNym_nym_type_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void nym_id(char[] value) {
    otapi_im.ContactNym_nym_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] nym_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactNym_nym_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void public_key(char[] value) {
    otapi_im.ContactNym_public_key_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] public_key() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactNym_public_key_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void memo(char[] value) {
    otapi_im.ContactNym_memo_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] memo() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactNym_memo_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public size_t GetServerInfoCount() {
    auto ret = otapi_im.ContactNym_GetServerInfoCount(cast(void*)swigCPtr);
    return ret;
  }

  public ServerInfo GetServerInfo(size_t nIndex) {
    void* cPtr = otapi_im.ContactNym_GetServerInfo(cast(void*)swigCPtr, nIndex);
    ServerInfo ret = (cPtr is null) ? null : new ServerInfo(cPtr, false);
    return ret;
  }

  public bool RemoveServerInfo(size_t nIndexServerInfo) {
    bool ret = otapi_im.ContactNym_RemoveServerInfo(cast(void*)swigCPtr, nIndexServerInfo) ? true : false;
    return ret;
  }

  public bool AddServerInfo(ServerInfo disownObject) {
    bool ret = otapi_im.ContactNym_AddServerInfo(cast(void*)swigCPtr, ServerInfo.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static ContactNym ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.ContactNym_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    ContactNym ret = (cPtr is null) ? null : new ContactNym(cPtr, false);
    return ret;
  }
}

class WalletData : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.WalletData_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(WalletData obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_WalletData(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public size_t GetBitcoinServerCount() {
    auto ret = otapi_im.WalletData_GetBitcoinServerCount(cast(void*)swigCPtr);
    return ret;
  }

  public BitcoinServer GetBitcoinServer(size_t nIndex) {
    void* cPtr = otapi_im.WalletData_GetBitcoinServer(cast(void*)swigCPtr, nIndex);
    BitcoinServer ret = (cPtr is null) ? null : new BitcoinServer(cPtr, false);
    return ret;
  }

  public bool RemoveBitcoinServer(size_t nIndexBitcoinServer) {
    bool ret = otapi_im.WalletData_RemoveBitcoinServer(cast(void*)swigCPtr, nIndexBitcoinServer) ? true : false;
    return ret;
  }

  public bool AddBitcoinServer(BitcoinServer disownObject) {
    bool ret = otapi_im.WalletData_AddBitcoinServer(cast(void*)swigCPtr, BitcoinServer.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public size_t GetBitcoinAcctCount() {
    auto ret = otapi_im.WalletData_GetBitcoinAcctCount(cast(void*)swigCPtr);
    return ret;
  }

  public BitcoinAcct GetBitcoinAcct(size_t nIndex) {
    void* cPtr = otapi_im.WalletData_GetBitcoinAcct(cast(void*)swigCPtr, nIndex);
    BitcoinAcct ret = (cPtr is null) ? null : new BitcoinAcct(cPtr, false);
    return ret;
  }

  public bool RemoveBitcoinAcct(size_t nIndexBitcoinAcct) {
    bool ret = otapi_im.WalletData_RemoveBitcoinAcct(cast(void*)swigCPtr, nIndexBitcoinAcct) ? true : false;
    return ret;
  }

  public bool AddBitcoinAcct(BitcoinAcct disownObject) {
    bool ret = otapi_im.WalletData_AddBitcoinAcct(cast(void*)swigCPtr, BitcoinAcct.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public size_t GetRippleServerCount() {
    auto ret = otapi_im.WalletData_GetRippleServerCount(cast(void*)swigCPtr);
    return ret;
  }

  public RippleServer GetRippleServer(size_t nIndex) {
    void* cPtr = otapi_im.WalletData_GetRippleServer(cast(void*)swigCPtr, nIndex);
    RippleServer ret = (cPtr is null) ? null : new RippleServer(cPtr, false);
    return ret;
  }

  public bool RemoveRippleServer(size_t nIndexRippleServer) {
    bool ret = otapi_im.WalletData_RemoveRippleServer(cast(void*)swigCPtr, nIndexRippleServer) ? true : false;
    return ret;
  }

  public bool AddRippleServer(RippleServer disownObject) {
    bool ret = otapi_im.WalletData_AddRippleServer(cast(void*)swigCPtr, RippleServer.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public size_t GetLoomServerCount() {
    auto ret = otapi_im.WalletData_GetLoomServerCount(cast(void*)swigCPtr);
    return ret;
  }

  public LoomServer GetLoomServer(size_t nIndex) {
    void* cPtr = otapi_im.WalletData_GetLoomServer(cast(void*)swigCPtr, nIndex);
    LoomServer ret = (cPtr is null) ? null : new LoomServer(cPtr, false);
    return ret;
  }

  public bool RemoveLoomServer(size_t nIndexLoomServer) {
    bool ret = otapi_im.WalletData_RemoveLoomServer(cast(void*)swigCPtr, nIndexLoomServer) ? true : false;
    return ret;
  }

  public bool AddLoomServer(LoomServer disownObject) {
    bool ret = otapi_im.WalletData_AddLoomServer(cast(void*)swigCPtr, LoomServer.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static WalletData ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.WalletData_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    WalletData ret = (cPtr is null) ? null : new WalletData(cPtr, false);
    return ret;
  }
}

class ContactAcct : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.ContactAcct_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(ContactAcct obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_ContactAcct(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.ContactAcct_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactAcct_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_type(char[] value) {
    otapi_im.ContactAcct_server_type_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_type() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactAcct_server_type_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void server_id(char[] value) {
    otapi_im.ContactAcct_server_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] server_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactAcct_server_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void asset_type_id(char[] value) {
    otapi_im.ContactAcct_asset_type_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] asset_type_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactAcct_asset_type_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void acct_id(char[] value) {
    otapi_im.ContactAcct_acct_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] acct_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactAcct_acct_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void nym_id(char[] value) {
    otapi_im.ContactAcct_nym_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] nym_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactAcct_nym_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void memo(char[] value) {
    otapi_im.ContactAcct_memo_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] memo() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactAcct_memo_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void public_key(char[] value) {
    otapi_im.ContactAcct_public_key_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] public_key() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.ContactAcct_public_key_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static ContactAcct ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.ContactAcct_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    ContactAcct ret = (cPtr is null) ? null : new ContactAcct(cPtr, false);
    return ret;
  }
}

class Contact : Displayable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.Contact_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(Contact obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_Contact(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void gui_label(char[] value) {
    otapi_im.Contact_gui_label_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] gui_label() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Contact_gui_label_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void contact_id(char[] value) {
    otapi_im.Contact_contact_id_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] contact_id() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Contact_contact_id_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void email(char[] value) {
    otapi_im.Contact_email_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] email() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Contact_email_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void memo(char[] value) {
    otapi_im.Contact_memo_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] memo() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Contact_memo_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public void public_key(char[] value) {
    otapi_im.Contact_public_key_set(cast(void*)swigCPtr, (value ? tango.stdc.stringz.toStringz(value) : null));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  }

  public char[] public_key() {
    char[] ret = tango.stdc.stringz.fromStringz(otapi_im.Contact_public_key_get(cast(void*)swigCPtr));
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public size_t GetContactNymCount() {
    auto ret = otapi_im.Contact_GetContactNymCount(cast(void*)swigCPtr);
    return ret;
  }

  public ContactNym GetContactNym(size_t nIndex) {
    void* cPtr = otapi_im.Contact_GetContactNym(cast(void*)swigCPtr, nIndex);
    ContactNym ret = (cPtr is null) ? null : new ContactNym(cPtr, false);
    return ret;
  }

  public bool RemoveContactNym(size_t nIndexContactNym) {
    bool ret = otapi_im.Contact_RemoveContactNym(cast(void*)swigCPtr, nIndexContactNym) ? true : false;
    return ret;
  }

  public bool AddContactNym(ContactNym disownObject) {
    bool ret = otapi_im.Contact_AddContactNym(cast(void*)swigCPtr, ContactNym.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public size_t GetContactAcctCount() {
    auto ret = otapi_im.Contact_GetContactAcctCount(cast(void*)swigCPtr);
    return ret;
  }

  public ContactAcct GetContactAcct(size_t nIndex) {
    void* cPtr = otapi_im.Contact_GetContactAcct(cast(void*)swigCPtr, nIndex);
    ContactAcct ret = (cPtr is null) ? null : new ContactAcct(cPtr, false);
    return ret;
  }

  public bool RemoveContactAcct(size_t nIndexContactAcct) {
    bool ret = otapi_im.Contact_RemoveContactAcct(cast(void*)swigCPtr, nIndexContactAcct) ? true : false;
    return ret;
  }

  public bool AddContactAcct(ContactAcct disownObject) {
    bool ret = otapi_im.Contact_AddContactAcct(cast(void*)swigCPtr, ContactAcct.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static Contact ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.Contact_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    Contact ret = (cPtr is null) ? null : new Contact(cPtr, false);
    return ret;
  }
}

class AddressBook : Storable {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(otapi_im.AddressBook_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(AddressBook obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapi_im.delete_AddressBook(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public size_t GetContactCount() {
    auto ret = otapi_im.AddressBook_GetContactCount(cast(void*)swigCPtr);
    return ret;
  }

  public Contact GetContact(size_t nIndex) {
    void* cPtr = otapi_im.AddressBook_GetContact(cast(void*)swigCPtr, nIndex);
    Contact ret = (cPtr is null) ? null : new Contact(cPtr, false);
    return ret;
  }

  public bool RemoveContact(size_t nIndexContact) {
    bool ret = otapi_im.AddressBook_RemoveContact(cast(void*)swigCPtr, nIndexContact) ? true : false;
    return ret;
  }

  public bool AddContact(Contact disownObject) {
    bool ret = otapi_im.AddressBook_AddContact(cast(void*)swigCPtr, Contact.swigGetCPtr(disownObject)) ? true : false;
    if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
    return ret;
  }

  public static AddressBook ot_dynamic_cast(Storable pObject) {
    void* cPtr = otapi_im.AddressBook_ot_dynamic_cast(Storable.swigGetCPtr(pObject));
    AddressBook ret = (cPtr is null) ? null : new AddressBook(cPtr, false);
    return ret;
  }
}

bool OT_API_Set_PasswordCallback(OTCaller theCaller) {
  bool ret = otapi_im.OT_API_Set_PasswordCallback(OTCaller.swigGetCPtr(theCaller)) ? true : false;
  if (otapi_im.SwigPendingException.isPending) throw otapi_im.SwigPendingException.retrieve();
  return ret;
}

class SWIGTYPE_p_OTVariable {
  private void* swigCPtr;

  public this(void* cObject, bool futureUse) {
    swigCPtr = cObject;
  }

  protected this() {
    swigCPtr = null;
  }

  public static void* swigGetCPtr(SWIGTYPE_p_OTVariable obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;
}

class SWIGTYPE_p_std__string {
  private void* swigCPtr;

  public this(void* cObject, bool futureUse) {
    swigCPtr = cObject;
  }

  protected this() {
    swigCPtr = null;
  }

  public static void* swigGetCPtr(SWIGTYPE_p_std__string obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;
}

class SWIGTYPE_p_OT_API {
  private void* swigCPtr;

  public this(void* cObject, bool futureUse) {
    swigCPtr = cObject;
  }

  protected this() {
    swigCPtr = null;
  }

  public static void* swigGetCPtr(SWIGTYPE_p_OT_API obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;
}

class SWIGTYPE_p_OTPacker {
  private void* swigCPtr;

  public this(void* cObject, bool futureUse) {
    swigCPtr = cObject;
  }

  protected this() {
    swigCPtr = null;
  }

  public static void* swigGetCPtr(SWIGTYPE_p_OTPacker obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;
}

class SWIGTYPE_p_OTAPI_Exec {
  private void* swigCPtr;

  public this(void* cObject, bool futureUse) {
    swigCPtr = cObject;
  }

  protected this() {
    swigCPtr = null;
  }

  public static void* swigGetCPtr(SWIGTYPE_p_OTAPI_Exec obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin otapi_im.SwigOperatorDefinitions;
}
