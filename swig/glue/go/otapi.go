/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: swig\otapi\OTAPI.i

package otapi

import "unsafe"
import _ "runtime/cgo"


type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrImaxdiv_t uintptr

func (p SwigcptrImaxdiv_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrImaxdiv_t) SwigIsImaxdiv_t() {
}

func _swig_wrap_imaxdiv_t_quot_set(SwigcptrImaxdiv_t, int64)

func (arg1 SwigcptrImaxdiv_t) SetQuot(arg2 int64) {
	_swig_wrap_imaxdiv_t_quot_set(arg1, arg2)
}

func _swig_wrap_imaxdiv_t_quot_get(SwigcptrImaxdiv_t) int64

func (arg1 SwigcptrImaxdiv_t) GetQuot() int64 {
	return _swig_wrap_imaxdiv_t_quot_get(arg1)
}

func _swig_wrap_imaxdiv_t_rem_set(SwigcptrImaxdiv_t, int64)

func (arg1 SwigcptrImaxdiv_t) SetRem(arg2 int64) {
	_swig_wrap_imaxdiv_t_rem_set(arg1, arg2)
}

func _swig_wrap_imaxdiv_t_rem_get(SwigcptrImaxdiv_t) int64

func (arg1 SwigcptrImaxdiv_t) GetRem() int64 {
	return _swig_wrap_imaxdiv_t_rem_get(arg1)
}

func _swig_wrap_new_imaxdiv_t() SwigcptrImaxdiv_t

func NewImaxdiv_t() Imaxdiv_t {
	return _swig_wrap_new_imaxdiv_t()
}

func _swig_wrap_delete_imaxdiv_t(uintptr)

func DeleteImaxdiv_t(arg1 Imaxdiv_t) {
	_swig_wrap_delete_imaxdiv_t(arg1.Swigcptr())
}

type Imaxdiv_t interface {
	Swigcptr() uintptr
	SwigIsImaxdiv_t()
	SetQuot(arg2 int64)
	GetQuot() int64
	SetRem(arg2 int64)
	GetRem() int64
}

func Imaxabs(int64) int64
func _swig_wrap_imaxdiv(int64, int64) SwigcptrImaxdiv_t

func Imaxdiv(arg1 int64, arg2 int64) Imaxdiv_t {
	return _swig_wrap_imaxdiv(arg1, arg2)
}

type SwigcptrVectorUnsignedChar uintptr

func (p SwigcptrVectorUnsignedChar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorUnsignedChar) SwigIsVectorUnsignedChar() {
}

func _swig_wrap_new_VectorUnsignedChar__SWIG_0() SwigcptrVectorUnsignedChar

func NewVectorUnsignedChar__SWIG_0() VectorUnsignedChar {
	return _swig_wrap_new_VectorUnsignedChar__SWIG_0()
}

func _swig_wrap_new_VectorUnsignedChar__SWIG_1(int64) SwigcptrVectorUnsignedChar

func NewVectorUnsignedChar__SWIG_1(arg1 int64) VectorUnsignedChar {
	return _swig_wrap_new_VectorUnsignedChar__SWIG_1(arg1)
}

func NewVectorUnsignedChar(a ...interface{}) VectorUnsignedChar {
	argc := len(a)
	if argc == 0 {
		return NewVectorUnsignedChar__SWIG_0()
	}
	if argc == 1 {
		return NewVectorUnsignedChar__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_VectorUnsignedChar_size(SwigcptrVectorUnsignedChar) int64

func (arg1 SwigcptrVectorUnsignedChar) Size() int64 {
	return _swig_wrap_VectorUnsignedChar_size(arg1)
}

func _swig_wrap_VectorUnsignedChar_capacity(SwigcptrVectorUnsignedChar) int64

func (arg1 SwigcptrVectorUnsignedChar) Capacity() int64 {
	return _swig_wrap_VectorUnsignedChar_capacity(arg1)
}

func _swig_wrap_VectorUnsignedChar_reserve(SwigcptrVectorUnsignedChar, int64)

func (arg1 SwigcptrVectorUnsignedChar) Reserve(arg2 int64) {
	_swig_wrap_VectorUnsignedChar_reserve(arg1, arg2)
}

func _swig_wrap_VectorUnsignedChar_isEmpty(SwigcptrVectorUnsignedChar) bool

func (arg1 SwigcptrVectorUnsignedChar) IsEmpty() bool {
	return _swig_wrap_VectorUnsignedChar_isEmpty(arg1)
}

func _swig_wrap_VectorUnsignedChar_clear(SwigcptrVectorUnsignedChar)

func (arg1 SwigcptrVectorUnsignedChar) Clear() {
	_swig_wrap_VectorUnsignedChar_clear(arg1)
}

func _swig_wrap_VectorUnsignedChar_add(SwigcptrVectorUnsignedChar, byte)

func (arg1 SwigcptrVectorUnsignedChar) Add(arg2 byte) {
	_swig_wrap_VectorUnsignedChar_add(arg1, arg2)
}

func _swig_wrap_VectorUnsignedChar_get(SwigcptrVectorUnsignedChar, int) byte

func (arg1 SwigcptrVectorUnsignedChar) Get(arg2 int) byte {
	return _swig_wrap_VectorUnsignedChar_get(arg1, arg2)
}

func _swig_wrap_VectorUnsignedChar_set(SwigcptrVectorUnsignedChar, int, byte)

func (arg1 SwigcptrVectorUnsignedChar) Set(arg2 int, arg3 byte) {
	_swig_wrap_VectorUnsignedChar_set(arg1, arg2, arg3)
}

func _swig_wrap_delete_VectorUnsignedChar(uintptr)

func DeleteVectorUnsignedChar(arg1 VectorUnsignedChar) {
	_swig_wrap_delete_VectorUnsignedChar(arg1.Swigcptr())
}

type VectorUnsignedChar interface {
	Swigcptr() uintptr
	SwigIsVectorUnsignedChar()
	Size() int64
	Capacity() int64
	Reserve(arg2 int64)
	IsEmpty() bool
	Clear()
	Add(arg2 byte)
	Get(arg2 int) byte
	Set(arg2 int, arg3 byte)
}

type SwigcptrMapStringString uintptr

func (p SwigcptrMapStringString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMapStringString) SwigIsMapStringString() {
}

func _swig_wrap_new_MapStringString__SWIG_0() SwigcptrMapStringString

func NewMapStringString__SWIG_0() MapStringString {
	return _swig_wrap_new_MapStringString__SWIG_0()
}

func _swig_wrap_new_MapStringString__SWIG_1(uintptr) SwigcptrMapStringString

func NewMapStringString__SWIG_1(arg1 MapStringString) MapStringString {
	return _swig_wrap_new_MapStringString__SWIG_1(arg1.Swigcptr())
}

func NewMapStringString(a ...interface{}) MapStringString {
	argc := len(a)
	if argc == 0 {
		return NewMapStringString__SWIG_0()
	}
	if argc == 1 {
		return NewMapStringString__SWIG_1(a[0].(MapStringString))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_MapStringString_size(SwigcptrMapStringString) uint

func (arg1 SwigcptrMapStringString) Size() uint {
	return _swig_wrap_MapStringString_size(arg1)
}

func _swig_wrap_MapStringString_empty(SwigcptrMapStringString) bool

func (arg1 SwigcptrMapStringString) Empty() bool {
	return _swig_wrap_MapStringString_empty(arg1)
}

func _swig_wrap_MapStringString_clear(SwigcptrMapStringString)

func (arg1 SwigcptrMapStringString) Clear() {
	_swig_wrap_MapStringString_clear(arg1)
}

func _swig_wrap_MapStringString_get(SwigcptrMapStringString, string) string

func (arg1 SwigcptrMapStringString) Get(arg2 string) string {
	return _swig_wrap_MapStringString_get(arg1, arg2)
}

func _swig_wrap_MapStringString_set(SwigcptrMapStringString, string, string)

func (arg1 SwigcptrMapStringString) Set(arg2 string, arg3 string) {
	_swig_wrap_MapStringString_set(arg1, arg2, arg3)
}

func _swig_wrap_MapStringString_del(SwigcptrMapStringString, string)

func (arg1 SwigcptrMapStringString) Del(arg2 string) {
	_swig_wrap_MapStringString_del(arg1, arg2)
}

func _swig_wrap_MapStringString_has_key(SwigcptrMapStringString, string) bool

func (arg1 SwigcptrMapStringString) Has_key(arg2 string) bool {
	return _swig_wrap_MapStringString_has_key(arg1, arg2)
}

func _swig_wrap_delete_MapStringString(uintptr)

func DeleteMapStringString(arg1 MapStringString) {
	_swig_wrap_delete_MapStringString(arg1.Swigcptr())
}

type MapStringString interface {
	Swigcptr() uintptr
	SwigIsMapStringString()
	Size() uint
	Empty() bool
	Clear()
	Get(arg2 string) string
	Set(arg2 string, arg3 string)
	Del(arg2 string)
	Has_key(arg2 string) bool
}

const OT_PW_DISPLAY string = "Enter master passphrase for wallet."
const OTPASSWORD_BLOCKSIZE int = 128
const OTPASSWORD_MEMSIZE int = 129
const OT_LARGE_BLOCKSIZE int = 32767
const OT_LARGE_MEMSIZE int = 32768
const OT_DEFAULT_BLOCKSIZE int = 128
const OT_DEFAULT_MEMSIZE int = 129
type SwigcptrOTPassword uintptr

func (p SwigcptrOTPassword) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOTPassword) SwigIsOTPassword() {
}

type OTPasswordBlockSize int
func _swig_getOTPassword_DEFAULT_SIZE_OTPassword() OTPasswordBlockSize
var OTPasswordDEFAULT_SIZE OTPasswordBlockSize = _swig_getOTPassword_DEFAULT_SIZE_OTPassword()
func _swig_getOTPassword_LARGER_SIZE_OTPassword() OTPasswordBlockSize
var OTPasswordLARGER_SIZE OTPasswordBlockSize = _swig_getOTPassword_LARGER_SIZE_OTPassword()
func _swig_wrap_OTPassword_m_theBlockSize_get(SwigcptrOTPassword) OTPasswordBlockSize

func (arg1 SwigcptrOTPassword) GetM_theBlockSize() OTPasswordBlockSize {
	return _swig_wrap_OTPassword_m_theBlockSize_get(arg1)
}

func _swig_wrap_OTPassword_isPassword(SwigcptrOTPassword) bool

func (arg1 SwigcptrOTPassword) IsPassword() bool {
	return _swig_wrap_OTPassword_isPassword(arg1)
}

func _swig_wrap_OTPassword_getPassword_uint8(SwigcptrOTPassword) string

func (arg1 SwigcptrOTPassword) GetPassword_uint8() string {
	return _swig_wrap_OTPassword_getPassword_uint8(arg1)
}

func _swig_wrap_OTPassword_getPassword(SwigcptrOTPassword) string

func (arg1 SwigcptrOTPassword) GetPassword() string {
	return _swig_wrap_OTPassword_getPassword(arg1)
}

func _swig_wrap_OTPassword_getPasswordWritable(SwigcptrOTPassword) string

func (arg1 SwigcptrOTPassword) GetPasswordWritable() string {
	return _swig_wrap_OTPassword_getPasswordWritable(arg1)
}

func _swig_wrap_OTPassword_getPasswordWritable_char(SwigcptrOTPassword) string

func (arg1 SwigcptrOTPassword) GetPasswordWritable_char() string {
	return _swig_wrap_OTPassword_getPasswordWritable_char(arg1)
}

func _swig_wrap_OTPassword_setPassword(SwigcptrOTPassword, string, int) int

func (arg1 SwigcptrOTPassword) SetPassword(arg2 string, arg3 int) int {
	return _swig_wrap_OTPassword_setPassword(arg1, arg2, arg3)
}

func _swig_wrap_OTPassword_setPassword_uint8(SwigcptrOTPassword, string, uint) int

func (arg1 SwigcptrOTPassword) SetPassword_uint8(arg2 string, arg3 uint) int {
	return _swig_wrap_OTPassword_setPassword_uint8(arg1, arg2, arg3)
}

func _swig_wrap_OTPassword_addChar(SwigcptrOTPassword, byte) bool

func (arg1 SwigcptrOTPassword) AddChar(arg2 byte) bool {
	return _swig_wrap_OTPassword_addChar(arg1, arg2)
}

func _swig_wrap_OTPassword_randomizePassword__SWIG_0(SwigcptrOTPassword, uint) int

func (arg1 SwigcptrOTPassword) RandomizePassword__SWIG_0(arg2 uint) int {
	return _swig_wrap_OTPassword_randomizePassword__SWIG_0(arg1, arg2)
}

func _swig_wrap_OTPassword_randomizePassword__SWIG_1(SwigcptrOTPassword) int

func (arg1 SwigcptrOTPassword) RandomizePassword__SWIG_1() int {
	return _swig_wrap_OTPassword_randomizePassword__SWIG_1(arg1)
}

func OTPasswordRandomizePassword_uint8(string, uint) bool
func OTPasswordRandomizePassword__SWIG_2(string, uint) bool
func OTPasswordRandomizePassword(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return a[0].(SwigcptrOTPassword).RandomizePassword__SWIG_1()
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrOTPassword); !ok {
			goto check_2
		}
		return a[0].(SwigcptrOTPassword).RandomizePassword__SWIG_0(a[1].(uint))
	}
check_2:
	if argc == 2 {
		return OTPasswordRandomizePassword__SWIG_2(a[0].(string), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OTPassword_isMemory(SwigcptrOTPassword) bool

func (arg1 SwigcptrOTPassword) IsMemory() bool {
	return _swig_wrap_OTPassword_isMemory(arg1)
}

func _swig_wrap_OTPassword_getMemory(SwigcptrOTPassword) uintptr

func (arg1 SwigcptrOTPassword) GetMemory() uintptr {
	return _swig_wrap_OTPassword_getMemory(arg1)
}

func _swig_wrap_OTPassword_getMemory_uint8(SwigcptrOTPassword) string

func (arg1 SwigcptrOTPassword) GetMemory_uint8() string {
	return _swig_wrap_OTPassword_getMemory_uint8(arg1)
}

func _swig_wrap_OTPassword_getMemoryWritable(SwigcptrOTPassword) uintptr

func (arg1 SwigcptrOTPassword) GetMemoryWritable() uintptr {
	return _swig_wrap_OTPassword_getMemoryWritable(arg1)
}

func _swig_wrap_OTPassword_setMemory(SwigcptrOTPassword, uintptr, uint) int

func (arg1 SwigcptrOTPassword) SetMemory(arg2 uintptr, arg3 uint) int {
	return _swig_wrap_OTPassword_setMemory(arg1, arg2, arg3)
}

func _swig_wrap_OTPassword_addMemory(SwigcptrOTPassword, uintptr, uint) int

func (arg1 SwigcptrOTPassword) AddMemory(arg2 uintptr, arg3 uint) int {
	return _swig_wrap_OTPassword_addMemory(arg1, arg2, arg3)
}

func _swig_wrap_OTPassword_randomizeMemory__SWIG_0(SwigcptrOTPassword, uint) int

func (arg1 SwigcptrOTPassword) RandomizeMemory__SWIG_0(arg2 uint) int {
	return _swig_wrap_OTPassword_randomizeMemory__SWIG_0(arg1, arg2)
}

func _swig_wrap_OTPassword_randomizeMemory__SWIG_1(SwigcptrOTPassword) int

func (arg1 SwigcptrOTPassword) RandomizeMemory__SWIG_1() int {
	return _swig_wrap_OTPassword_randomizeMemory__SWIG_1(arg1)
}

func OTPasswordRandomizeMemory_uint8(string, uint) bool
func OTPasswordRandomizeMemory__SWIG_2(uintptr, uint) bool
func OTPasswordRandomizeMemory(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return a[0].(SwigcptrOTPassword).RandomizeMemory__SWIG_1()
	}
	if argc == 2 {
		if _, ok := a[0].(SwigcptrOTPassword); !ok {
			goto check_2
		}
		return a[0].(SwigcptrOTPassword).RandomizeMemory__SWIG_0(a[1].(uint))
	}
check_2:
	if argc == 2 {
		return OTPasswordRandomizeMemory__SWIG_2(a[0].(uintptr), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OTPassword_getBlockSize(SwigcptrOTPassword) uint

func (arg1 SwigcptrOTPassword) GetBlockSize() uint {
	return _swig_wrap_OTPassword_getBlockSize(arg1)
}

func _swig_wrap_OTPassword_Compare(SwigcptrOTPassword, uintptr) bool

func (arg1 SwigcptrOTPassword) Compare(arg2 OTPassword) bool {
	return _swig_wrap_OTPassword_Compare(arg1, arg2.Swigcptr())
}

func _swig_wrap_OTPassword_getPasswordSize(SwigcptrOTPassword) uint

func (arg1 SwigcptrOTPassword) GetPasswordSize() uint {
	return _swig_wrap_OTPassword_getPasswordSize(arg1)
}

func _swig_wrap_OTPassword_getMemorySize(SwigcptrOTPassword) uint

func (arg1 SwigcptrOTPassword) GetMemorySize() uint {
	return _swig_wrap_OTPassword_getMemorySize(arg1)
}

func _swig_wrap_OTPassword_zeroMemory__SWIG_0(SwigcptrOTPassword)

func (arg1 SwigcptrOTPassword) ZeroMemory__SWIG_0() {
	_swig_wrap_OTPassword_zeroMemory__SWIG_0(arg1)
}

func _swig_wrap_OTPassword_zeroMemory__SWIG_1(string, uint)

func OTPasswordZeroMemory__SWIG_1(arg1 string, arg2 uint) {
	_swig_wrap_OTPassword_zeroMemory__SWIG_1(arg1, arg2)
}

func _swig_wrap_OTPassword_zeroMemory__SWIG_2(uintptr, uint)

func OTPasswordZeroMemory__SWIG_2(arg1 uintptr, arg2 uint) {
	_swig_wrap_OTPassword_zeroMemory__SWIG_2(arg1, arg2)
}

func OTPasswordZeroMemory(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		a[0].(SwigcptrOTPassword).ZeroMemory__SWIG_0()
		return
	}
	if argc == 2 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_2
		}
		OTPasswordZeroMemory__SWIG_2(a[0].(uintptr), a[1].(uint))
		return
	}
check_2:
	if argc == 2 {
		OTPasswordZeroMemory__SWIG_1(a[0].(string), a[1].(uint))
		return
	}
	panic("No match for overloaded function call")
}

func OTPasswordSafe_memcpy__SWIG_0(uintptr, uint, uintptr, uint, bool) uintptr
func OTPasswordSafe_memcpy__SWIG_1(uintptr, uint, uintptr, uint) uintptr
func OTPasswordSafe_memcpy(a ...interface{}) uintptr {
	argc := len(a)
	if argc == 4 {
		return OTPasswordSafe_memcpy__SWIG_1(a[0].(uintptr), a[1].(uint), a[2].(uintptr), a[3].(uint))
	}
	if argc == 5 {
		return OTPasswordSafe_memcpy__SWIG_0(a[0].(uintptr), a[1].(uint), a[2].(uintptr), a[3].(uint), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OTPassword_CreateTextBuffer() SwigcptrOTPassword

func OTPasswordCreateTextBuffer() OTPassword {
	return _swig_wrap_OTPassword_CreateTextBuffer()
}

func _swig_wrap_OTPassword_SetSize(SwigcptrOTPassword, uint) bool

func (arg1 SwigcptrOTPassword) SetSize(arg2 uint) bool {
	return _swig_wrap_OTPassword_SetSize(arg1, arg2)
}

func _swig_wrap_new_OTPassword__SWIG_0(OTPasswordBlockSize) SwigcptrOTPassword

func NewOTPassword__SWIG_0(arg1 OTPasswordBlockSize) OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_0(arg1)
}

func _swig_wrap_new_OTPassword__SWIG_1() SwigcptrOTPassword

func NewOTPassword__SWIG_1() OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_1()
}

func _swig_wrap_new_OTPassword__SWIG_2(uintptr) SwigcptrOTPassword

func NewOTPassword__SWIG_2(arg1 OTPassword) OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_2(arg1.Swigcptr())
}

func _swig_wrap_new_OTPassword__SWIG_3(string, uint, OTPasswordBlockSize) SwigcptrOTPassword

func NewOTPassword__SWIG_3(arg1 string, arg2 uint, arg3 OTPasswordBlockSize) OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_3(arg1, arg2, arg3)
}

func _swig_wrap_new_OTPassword__SWIG_4(string, uint) SwigcptrOTPassword

func NewOTPassword__SWIG_4(arg1 string, arg2 uint) OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_4(arg1, arg2)
}

func _swig_wrap_new_OTPassword__SWIG_5(string, uint, OTPasswordBlockSize) SwigcptrOTPassword

func NewOTPassword__SWIG_5(arg1 string, arg2 uint, arg3 OTPasswordBlockSize) OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_5(arg1, arg2, arg3)
}

func _swig_wrap_new_OTPassword__SWIG_6(string, uint) SwigcptrOTPassword

func NewOTPassword__SWIG_6(arg1 string, arg2 uint) OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_6(arg1, arg2)
}

func _swig_wrap_new_OTPassword__SWIG_7(uintptr, uint, OTPasswordBlockSize) SwigcptrOTPassword

func NewOTPassword__SWIG_7(arg1 uintptr, arg2 uint, arg3 OTPasswordBlockSize) OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_7(arg1, arg2, arg3)
}

func _swig_wrap_new_OTPassword__SWIG_8(uintptr, uint) SwigcptrOTPassword

func NewOTPassword__SWIG_8(arg1 uintptr, arg2 uint) OTPassword {
	return _swig_wrap_new_OTPassword__SWIG_8(arg1, arg2)
}

func NewOTPassword(a ...interface{}) OTPassword {
	argc := len(a)
	if argc == 0 {
		return NewOTPassword__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(OTPasswordBlockSize); !ok {
			goto check_2
		}
		return NewOTPassword__SWIG_0(a[0].(OTPasswordBlockSize))
	}
check_2:
	if argc == 1 {
		return NewOTPassword__SWIG_2(a[0].(OTPassword))
	}
	if argc == 2 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_4
		}
		return NewOTPassword__SWIG_8(a[0].(uintptr), a[1].(uint))
	}
check_4:
	if argc == 2 {
		return NewOTPassword__SWIG_6(a[0].(string), a[1].(uint))
	}
	if argc == 2 {
		return NewOTPassword__SWIG_4(a[0].(string), a[1].(uint))
	}
	if argc == 3 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_7
		}
		return NewOTPassword__SWIG_7(a[0].(uintptr), a[1].(uint), a[2].(OTPasswordBlockSize))
	}
check_7:
	if argc == 3 {
		return NewOTPassword__SWIG_3(a[0].(string), a[1].(uint), a[2].(OTPasswordBlockSize))
	}
	if argc == 3 {
		return NewOTPassword__SWIG_5(a[0].(string), a[1].(uint), a[2].(OTPasswordBlockSize))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_OTPassword(uintptr)

func DeleteOTPassword(arg1 OTPassword) {
	_swig_wrap_delete_OTPassword(arg1.Swigcptr())
}

type OTPassword interface {
	Swigcptr() uintptr
	SwigIsOTPassword()
	GetM_theBlockSize() OTPasswordBlockSize
	IsPassword() bool
	GetPassword_uint8() string
	GetPassword() string
	GetPasswordWritable() string
	GetPasswordWritable_char() string
	SetPassword(arg2 string, arg3 int) int
	SetPassword_uint8(arg2 string, arg3 uint) int
	AddChar(arg2 byte) bool
	IsMemory() bool
	GetMemory() uintptr
	GetMemory_uint8() string
	GetMemoryWritable() uintptr
	SetMemory(arg2 uintptr, arg3 uint) int
	AddMemory(arg2 uintptr, arg3 uint) int
	GetBlockSize() uint
	Compare(arg2 OTPassword) bool
	GetPasswordSize() uint
	GetMemorySize() uint
	SetSize(arg2 uint) bool
}

type _swig_DirectorOTCallback struct {
	SwigcptrOTCallback
	v interface{}
}

func (p *_swig_DirectorOTCallback) Swigcptr() uintptr {
	return p.SwigcptrOTCallback.Swigcptr()
}

func (p *_swig_DirectorOTCallback) SwigIsOTCallback() {
}

func (p *_swig_DirectorOTCallback) DirectorInterface() interface{} {
	return p.v
}

func _swig_NewDirectorOTCallbackOTCallback(*_swig_DirectorOTCallback) SwigcptrOTCallback

func NewDirectorOTCallback(v interface{}) OTCallback {
	p := &_swig_DirectorOTCallback{0, v}
	p.SwigcptrOTCallback = _swig_NewDirectorOTCallbackOTCallback(p)
	return p
}

func _swig_wrap_DeleteDirectorOTCallback(uintptr)

func DeleteDirectorOTCallback(arg1 OTCallback) {
	_swig_wrap_DeleteDirectorOTCallback(arg1.Swigcptr())
}

func Swiggo_DeleteDirector_OTCallback(p *_swig_DirectorOTCallback) {
	p.SwigcptrOTCallback = 0
}

type _swig_DirectorInterfaceOTCallbackRunOne interface {
	RunOne(string, OTPassword)
}

func _swig_wrap__swig_DirectorOTCallback_upcall_RunOne(SwigcptrOTCallback, string, uintptr)
func (swig_p *_swig_DirectorOTCallback) RunOne(szDisplay string, theOutput OTPassword) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOTCallbackRunOne); swig_ok {
		swig_g.RunOne(szDisplay, theOutput)
		return
	}
	_swig_wrap__swig_DirectorOTCallback_upcall_RunOne(swig_p.SwigcptrOTCallback, szDisplay, theOutput.Swigcptr())
}

func DirectorOTCallbackRunOne(p OTCallback, arg2 string, arg3 OTPassword) {
	_swig_wrap__swig_DirectorOTCallback_upcall_RunOne(p.(*_swig_DirectorOTCallback).SwigcptrOTCallback, arg2, arg3.Swigcptr())
}

func Swig_DirectorOTCallback_callback_runOne(p *_swig_DirectorOTCallback, arg2 string, arg3 uintptr) {
	p.RunOne(arg2, SwigcptrOTPassword(arg3))
}

type _swig_DirectorInterfaceOTCallbackRunTwo interface {
	RunTwo(string, OTPassword)
}

func _swig_wrap__swig_DirectorOTCallback_upcall_RunTwo(SwigcptrOTCallback, string, uintptr)
func (swig_p *_swig_DirectorOTCallback) RunTwo(szDisplay string, theOutput OTPassword) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceOTCallbackRunTwo); swig_ok {
		swig_g.RunTwo(szDisplay, theOutput)
		return
	}
	_swig_wrap__swig_DirectorOTCallback_upcall_RunTwo(swig_p.SwigcptrOTCallback, szDisplay, theOutput.Swigcptr())
}

func DirectorOTCallbackRunTwo(p OTCallback, arg2 string, arg3 OTPassword) {
	_swig_wrap__swig_DirectorOTCallback_upcall_RunTwo(p.(*_swig_DirectorOTCallback).SwigcptrOTCallback, arg2, arg3.Swigcptr())
}

func Swig_DirectorOTCallback_callback_runTwo(p *_swig_DirectorOTCallback, arg2 string, arg3 uintptr) {
	p.RunTwo(arg2, SwigcptrOTPassword(arg3))
}

type SwigcptrOTCallback uintptr

func (p SwigcptrOTCallback) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOTCallback) SwigIsOTCallback() {
}

func (p SwigcptrOTCallback) DirectorInterface() interface{} {
	return nil
}

func _swig_wrap_new_OTCallback() SwigcptrOTCallback

func NewOTCallback() OTCallback {
	return _swig_wrap_new_OTCallback()
}

func _swig_wrap_delete_OTCallback(uintptr)

func DeleteOTCallback(arg1 OTCallback) {
	_swig_wrap_delete_OTCallback(arg1.Swigcptr())
}

func _swig_wrap_OTCallback_runOne(SwigcptrOTCallback, string, uintptr)

func (arg1 SwigcptrOTCallback) RunOne(arg2 string, arg3 OTPassword) {
	_swig_wrap_OTCallback_runOne(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_OTCallback_runTwo(SwigcptrOTCallback, string, uintptr)

func (arg1 SwigcptrOTCallback) RunTwo(arg2 string, arg3 OTPassword) {
	_swig_wrap_OTCallback_runTwo(arg1, arg2, arg3.Swigcptr())
}

type OTCallback interface {
	Swigcptr() uintptr
	SwigIsOTCallback()
	DirectorInterface() interface{}
	RunOne(arg2 string, arg3 OTPassword)
	RunTwo(arg2 string, arg3 OTPassword)
}

type SwigcptrOTCaller uintptr

func (p SwigcptrOTCaller) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOTCaller) SwigIsOTCaller() {
}

func _swig_wrap_new_OTCaller() SwigcptrOTCaller

func NewOTCaller() OTCaller {
	return _swig_wrap_new_OTCaller()
}

func _swig_wrap_delete_OTCaller(uintptr)

func DeleteOTCaller(arg1 OTCaller) {
	_swig_wrap_delete_OTCaller(arg1.Swigcptr())
}

func _swig_wrap_OTCaller_GetPassword(SwigcptrOTCaller, uintptr) bool

func (arg1 SwigcptrOTCaller) GetPassword(arg2 OTPassword) bool {
	return _swig_wrap_OTCaller_GetPassword(arg1, arg2.Swigcptr())
}

func _swig_wrap_OTCaller_ZeroOutPassword(SwigcptrOTCaller)

func (arg1 SwigcptrOTCaller) ZeroOutPassword() {
	_swig_wrap_OTCaller_ZeroOutPassword(arg1)
}

func _swig_wrap_OTCaller_GetDisplay(SwigcptrOTCaller) string

func (arg1 SwigcptrOTCaller) GetDisplay() string {
	return _swig_wrap_OTCaller_GetDisplay(arg1)
}

func _swig_wrap_OTCaller_SetDisplay(SwigcptrOTCaller, string, int)

func (arg1 SwigcptrOTCaller) SetDisplay(arg2 string, arg3 int) {
	_swig_wrap_OTCaller_SetDisplay(arg1, arg2, arg3)
}

func _swig_wrap_OTCaller_delCallback(SwigcptrOTCaller)

func (arg1 SwigcptrOTCaller) DelCallback() {
	_swig_wrap_OTCaller_delCallback(arg1)
}

func _swig_wrap_OTCaller_setCallback(SwigcptrOTCaller, uintptr)

func (arg1 SwigcptrOTCaller) SetCallback(arg2 OTCallback) {
	_swig_wrap_OTCaller_setCallback(arg1, arg2.Swigcptr())
}

func _swig_wrap_OTCaller_isCallbackSet(SwigcptrOTCaller) bool

func (arg1 SwigcptrOTCaller) IsCallbackSet() bool {
	return _swig_wrap_OTCaller_isCallbackSet(arg1)
}

func _swig_wrap_OTCaller_callOne(SwigcptrOTCaller)

func (arg1 SwigcptrOTCaller) CallOne() {
	_swig_wrap_OTCaller_callOne(arg1)
}

func _swig_wrap_OTCaller_callTwo(SwigcptrOTCaller)

func (arg1 SwigcptrOTCaller) CallTwo() {
	_swig_wrap_OTCaller_callTwo(arg1)
}

type OTCaller interface {
	Swigcptr() uintptr
	SwigIsOTCaller()
	GetPassword(arg2 OTPassword) bool
	ZeroOutPassword()
	GetDisplay() string
	SetDisplay(arg2 string, arg3 int)
	DelCallback()
	SetCallback(arg2 OTCallback)
	IsCallbackSet() bool
	CallOne()
	CallTwo()
}

type SwigcptrWrapTimeT uintptr

func (p SwigcptrWrapTimeT) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrWrapTimeT) SwigIsWrapTimeT() {
}

func _swig_wrap_new_WrapTimeT() SwigcptrWrapTimeT

func NewWrapTimeT() WrapTimeT {
	return _swig_wrap_new_WrapTimeT()
}

func _swig_wrap_WrapTimeT_getTime(SwigcptrWrapTimeT) int64

func (arg1 SwigcptrWrapTimeT) GetTime() int64 {
	return _swig_wrap_WrapTimeT_getTime(arg1)
}

func _swig_wrap_WrapTimeT_setTime(SwigcptrWrapTimeT, int64)

func (arg1 SwigcptrWrapTimeT) SetTime(arg2 int64) {
	_swig_wrap_WrapTimeT_setTime(arg1, arg2)
}

func _swig_wrap_delete_WrapTimeT(uintptr)

func DeleteWrapTimeT(arg1 WrapTimeT) {
	_swig_wrap_delete_WrapTimeT(arg1.Swigcptr())
}

type WrapTimeT interface {
	Swigcptr() uintptr
	SwigIsWrapTimeT()
	GetTime() int64
	SetTime(arg2 int64)
}

type SwigcptrOTAPI_Wrap uintptr

func (p SwigcptrOTAPI_Wrap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOTAPI_Wrap) SwigIsOTAPI_Wrap() {
}

func _swig_wrap_OTAPI_Wrap_SetExecutor(uintptr) SwigcptrOTAPI_Exec

func OTAPI_WrapSetExecutor(arg1 OTAPI_Exec) OTAPI_Exec {
	return _swig_wrap_OTAPI_Wrap_SetExecutor(arg1.Swigcptr())
}

func _swig_wrap_OTAPI_Wrap_Exec() SwigcptrOTAPI_Exec

func OTAPI_WrapExec() OTAPI_Exec {
	return _swig_wrap_OTAPI_Wrap_Exec()
}

func _swig_wrap_OTAPI_Wrap_It() SwigcptrOTAPI_Exec

func OTAPI_WrapIt() OTAPI_Exec {
	return _swig_wrap_OTAPI_Wrap_It()
}

func _swig_wrap_OTAPI_Wrap_OTAPI() SwigcptrOT_API

func OTAPI_WrapOTAPI() OT_API {
	return _swig_wrap_OTAPI_Wrap_OTAPI()
}

func OTAPI_WrapStringToLong(string) int64
func OTAPI_WrapLongToString(int64) string
func OTAPI_WrapStringToUlong(string) uint64
func OTAPI_WrapUlongToString(uint64) string
func OTAPI_WrapAppInit() bool
func OTAPI_WrapAppCleanup() bool
func _swig_wrap_OTAPI_Wrap_SetAppBinaryFolder(string)

func OTAPI_WrapSetAppBinaryFolder(arg1 string) {
	_swig_wrap_OTAPI_Wrap_SetAppBinaryFolder(arg1)
}

func _swig_wrap_OTAPI_Wrap_SetHomeFolder(string)

func OTAPI_WrapSetHomeFolder(arg1 string) {
	_swig_wrap_OTAPI_Wrap_SetHomeFolder(arg1)
}

func OTAPI_WrapSetWallet(string) bool
func OTAPI_WrapWalletExists() bool
func OTAPI_WrapLoadWallet() bool
func OTAPI_WrapSwitchWallet() bool
func _swig_wrap_OTAPI_Wrap_Output(int, string)

func OTAPI_WrapOutput(arg1 int, arg2 string) {
	_swig_wrap_OTAPI_Wrap_Output(arg1, arg2)
}

func _swig_wrap_OTAPI_Wrap_GetTime() SwigcptrWrapTimeT

func OTAPI_WrapGetTime() WrapTimeT {
	return _swig_wrap_OTAPI_Wrap_GetTime()
}

func OTAPI_WrapNumList_Add(string, string) string
func OTAPI_WrapNumList_Remove(string, string) string
func OTAPI_WrapNumList_VerifyQuery(string, string) bool
func OTAPI_WrapNumList_VerifyAll(string, string) bool
func OTAPI_WrapNumList_Count(string) int
func OTAPI_WrapEncode(string, bool) string
func OTAPI_WrapDecode(string, bool) string
func OTAPI_WrapEncrypt(string, string) string
func OTAPI_WrapDecrypt(string, string) string
func OTAPI_WrapCreateSymmetricKey() string
func OTAPI_WrapSymmetricEncrypt(string, string) string
func OTAPI_WrapSymmetricDecrypt(string, string) string
func OTAPI_WrapSignContract(string, string) string
func OTAPI_WrapFlatSign(string, string, string) string
func OTAPI_WrapAddSignature(string, string) string
func OTAPI_WrapVerifySignature(string, string) bool
func OTAPI_WrapVerifyAndRetrieveXMLContents(string, string) string
func OTAPI_WrapGetMemlogSize() int
func OTAPI_WrapGetMemlogAtIndex(int) string
func OTAPI_WrapPeekMemlogFront() string
func OTAPI_WrapPeekMemlogBack() string
func OTAPI_WrapPopMemlogFront() bool
func OTAPI_WrapPopMemlogBack() bool
func OTAPI_WrapCreateNym(int, string, string) string
func OTAPI_WrapGetNym_ActiveCronItemIDs(string, string) string
func OTAPI_WrapGetActiveCronItem(string, int64) string
func OTAPI_WrapGetNym_SourceForID(string) string
func OTAPI_WrapGetNym_AltSourceLocation(string) string
func OTAPI_WrapGetNym_CredentialCount(string) int
func OTAPI_WrapGetNym_CredentialID(string, int) string
func OTAPI_WrapGetNym_CredentialContents(string, string) string
func OTAPI_WrapGetNym_RevokedCredCount(string) int
func OTAPI_WrapGetNym_RevokedCredID(string, int) string
func OTAPI_WrapGetNym_RevokedCredContents(string, string) string
func OTAPI_WrapGetNym_SubcredentialCount(string, string) int
func OTAPI_WrapGetNym_SubCredentialID(string, string, int) string
func OTAPI_WrapGetNym_SubCredentialContents(string, string, string) string
func OTAPI_WrapAddSubcredential(string, string, int) string
func OTAPI_WrapRevokeSubcredential(string, string, string) bool
func OTAPI_WrapCreateServerContract(string, string) string
func OTAPI_WrapCreateAssetContract(string, string) string
func OTAPI_WrapCalculateAssetContractID(string) string
func OTAPI_WrapCalculateServerContractID(string) string
func OTAPI_WrapAddServerContract(string) int
func OTAPI_WrapAddAssetContract(string) int
func OTAPI_WrapGetServerCount() int
func OTAPI_WrapGetAssetTypeCount() int
func OTAPI_WrapGetAccountCount() int
func OTAPI_WrapGetNymCount() int
func OTAPI_WrapGetServer_ID(int) string
func OTAPI_WrapGetServer_Name(string) string
func OTAPI_WrapGetServer_Contract(string) string
func OTAPI_WrapFormatAmount(string, int64) string
func OTAPI_WrapStringToAmount(string, string) int64
func OTAPI_WrapGetAssetType_ID(int) string
func OTAPI_WrapGetAssetType_Name(string) string
func OTAPI_WrapGetAssetType_TLA(string) string
func OTAPI_WrapGetAssetType_Contract(string) string
func OTAPI_WrapGetAccountWallet_ID(int) string
func OTAPI_WrapGetAccountWallet_Name(string) string
func OTAPI_WrapGetAccountWallet_Balance(string) int64
func OTAPI_WrapGetAccountWallet_Type(string) string
func OTAPI_WrapGetAccountWallet_AssetTypeID(string) string
func OTAPI_WrapGetAccountWallet_ServerID(string) string
func OTAPI_WrapGetAccountWallet_NymID(string) string
func OTAPI_WrapGetAccountWallet_InboxHash(string) string
func OTAPI_WrapGetAccountWallet_OutboxHash(string) string
func OTAPI_WrapVerifyAccountReceipt(string, string, string) bool
func OTAPI_WrapGetNym_TransactionNumCount(string, string) int
func OTAPI_WrapGetNym_ID(int) string
func OTAPI_WrapGetNym_Name(string) string
func OTAPI_WrapGetNym_Stats(string) string
func OTAPI_WrapGetNym_NymboxHash(string, string) string
func OTAPI_WrapGetNym_RecentHash(string, string) string
func OTAPI_WrapGetNym_InboxHash(string, string) string
func OTAPI_WrapGetNym_OutboxHash(string, string) string
func OTAPI_WrapIsNym_RegisteredAtServer(string, string) bool
func OTAPI_WrapGetNym_MailCount(string) int
func OTAPI_WrapGetNym_MailContentsByIndex(string, int) string
func OTAPI_WrapGetNym_MailSenderIDByIndex(string, int) string
func OTAPI_WrapGetNym_MailServerIDByIndex(string, int) string
func OTAPI_WrapNym_RemoveMailByIndex(string, int) bool
func OTAPI_WrapNym_VerifyMailByIndex(string, int) bool
func OTAPI_WrapGetNym_OutmailCount(string) int
func OTAPI_WrapGetNym_OutmailContentsByIndex(string, int) string
func OTAPI_WrapGetNym_OutmailRecipientIDByIndex(string, int) string
func OTAPI_WrapGetNym_OutmailServerIDByIndex(string, int) string
func OTAPI_WrapNym_RemoveOutmailByIndex(string, int) bool
func OTAPI_WrapNym_VerifyOutmailByIndex(string, int) bool
func OTAPI_WrapGetNym_OutpaymentsCount(string) int
func OTAPI_WrapGetNym_OutpaymentsContentsByIndex(string, int) string
func OTAPI_WrapGetNym_OutpaymentsRecipientIDByIndex(string, int) string
func OTAPI_WrapGetNym_OutpaymentsServerIDByIndex(string, int) string
func OTAPI_WrapNym_RemoveOutpaymentsByIndex(string, int) bool
func OTAPI_WrapNym_VerifyOutpaymentsByIndex(string, int) bool
func OTAPI_WrapWallet_CanRemoveServer(string) bool
func OTAPI_WrapWallet_RemoveServer(string) bool
func OTAPI_WrapWallet_CanRemoveAssetType(string) bool
func OTAPI_WrapWallet_RemoveAssetType(string) bool
func OTAPI_WrapWallet_CanRemoveNym(string) bool
func OTAPI_WrapWallet_RemoveNym(string) bool
func OTAPI_WrapWallet_CanRemoveAccount(string) bool
func OTAPI_WrapWallet_ChangePassphrase() bool
func OTAPI_WrapWallet_ExportNym(string) string
func OTAPI_WrapWallet_ImportNym(string) string
func OTAPI_WrapWallet_ImportCert(string, string) string
func OTAPI_WrapWallet_ExportCert(string) string
func OTAPI_WrapWallet_GetNymIDFromPartial(string) string
func OTAPI_WrapWallet_GetServerIDFromPartial(string) string
func OTAPI_WrapWallet_GetAssetIDFromPartial(string) string
func OTAPI_WrapWallet_GetAccountIDFromPartial(string) string
func OTAPI_WrapSetNym_Name(string, string, string) bool
func OTAPI_WrapSetAccountWallet_Name(string, string, string) bool
func OTAPI_WrapSetAssetType_Name(string, string) bool
func OTAPI_WrapSetServer_Name(string, string) bool
func _swig_wrap_OTAPI_Wrap_WriteCheque(string, int64, uintptr, uintptr, string, string, string, string) string

func OTAPI_WrapWriteCheque(arg1 string, arg2 int64, arg3 WrapTimeT, arg4 WrapTimeT, arg5 string, arg6 string, arg7 string, arg8 string) string {
	return _swig_wrap_OTAPI_Wrap_WriteCheque(arg1, arg2, arg3.Swigcptr(), arg4.Swigcptr(), arg5, arg6, arg7, arg8)
}

func OTAPI_WrapDiscardCheque(string, string, string, string) bool
func _swig_wrap_OTAPI_Wrap_ProposePaymentPlan(string, uintptr, uintptr, string, string, string, string, string, int64, uintptr, int64, uintptr, uintptr, uintptr, int) string

func OTAPI_WrapProposePaymentPlan(arg1 string, arg2 WrapTimeT, arg3 WrapTimeT, arg4 string, arg5 string, arg6 string, arg7 string, arg8 string, arg9 int64, arg10 WrapTimeT, arg11 int64, arg12 WrapTimeT, arg13 WrapTimeT, arg14 WrapTimeT, arg15 int) string {
	return _swig_wrap_OTAPI_Wrap_ProposePaymentPlan(arg1, arg2.Swigcptr(), arg3.Swigcptr(), arg4, arg5, arg6, arg7, arg8, arg9, arg10.Swigcptr(), arg11, arg12.Swigcptr(), arg13.Swigcptr(), arg14.Swigcptr(), arg15)
}

func OTAPI_WrapEasyProposePlan(string, string, string, string, string, string, string, string, string, string) string
func OTAPI_WrapConfirmPaymentPlan(string, string, string, string, string) string
func _swig_wrap_OTAPI_Wrap_Create_SmartContract(string, uintptr, uintptr) string

func OTAPI_WrapCreate_SmartContract(arg1 string, arg2 WrapTimeT, arg3 WrapTimeT) string {
	return _swig_wrap_OTAPI_Wrap_Create_SmartContract(arg1, arg2.Swigcptr(), arg3.Swigcptr())
}

func OTAPI_WrapSmartContract_AddBylaw(string, string, string) string
func OTAPI_WrapSmartContract_AddClause(string, string, string, string, string) string
func OTAPI_WrapSmartContract_AddVariable(string, string, string, string, string, string, string) string
func OTAPI_WrapSmartContract_AddCallback(string, string, string, string, string) string
func OTAPI_WrapSmartContract_AddHook(string, string, string, string, string) string
func OTAPI_WrapSmartContract_AddParty(string, string, string, string) string
func OTAPI_WrapSmartContract_AddAccount(string, string, string, string, string) string
func OTAPI_WrapSmartContract_CountNumsNeeded(string, string) int
func OTAPI_WrapSmartContract_ConfirmAccount(string, string, string, string, string, string) string
func OTAPI_WrapSmartContract_ConfirmParty(string, string, string) string
func OTAPI_WrapSmart_AreAllPartiesConfirmed(string) bool
func OTAPI_WrapSmart_GetBylawCount(string) int
func OTAPI_WrapSmart_GetBylawByIndex(string, int) string
func OTAPI_WrapBylaw_GetLanguage(string, string) string
func OTAPI_WrapBylaw_GetClauseCount(string, string) int
func OTAPI_WrapClause_GetNameByIndex(string, string, int) string
func OTAPI_WrapClause_GetContents(string, string, string) string
func OTAPI_WrapBylaw_GetVariableCount(string, string) int
func OTAPI_WrapVariable_GetNameByIndex(string, string, int) string
func OTAPI_WrapVariable_GetType(string, string, string) string
func OTAPI_WrapVariable_GetAccess(string, string, string) string
func OTAPI_WrapVariable_GetContents(string, string, string) string
func OTAPI_WrapBylaw_GetHookCount(string, string) int
func OTAPI_WrapHook_GetNameByIndex(string, string, int) string
func OTAPI_WrapHook_GetClauseCount(string, string, string) int
func OTAPI_WrapHook_GetClauseAtIndex(string, string, string, int) string
func OTAPI_WrapBylaw_GetCallbackCount(string, string) int
func OTAPI_WrapCallback_GetNameByIndex(string, string, int) string
func OTAPI_WrapCallback_GetClause(string, string, string) string
func OTAPI_WrapSmart_GetPartyCount(string) int
func OTAPI_WrapSmart_GetPartyByIndex(string, int) string
func OTAPI_WrapSmart_IsPartyConfirmed(string, string) bool
func OTAPI_WrapParty_GetID(string, string) string
func OTAPI_WrapParty_GetAcctCount(string, string) int
func OTAPI_WrapParty_GetAcctNameByIndex(string, string, int) string
func OTAPI_WrapParty_GetAcctID(string, string, string) string
func OTAPI_WrapParty_GetAcctAssetID(string, string, string) string
func OTAPI_WrapParty_GetAcctAgentName(string, string, string) string
func OTAPI_WrapParty_GetAgentCount(string, string) int
func OTAPI_WrapParty_GetAgentNameByIndex(string, string, int) string
func OTAPI_WrapParty_GetAgentID(string, string, string) string
func OTAPI_WrapActivateSmartContract(string, string, string) int
func OTAPI_WrapTriggerClause(string, string, int64, string, string) int
func OTAPI_WrapMsg_HarvestTransactionNumbers(string, string, bool, bool, bool, bool, bool) bool
func OTAPI_WrapLoadUserPubkey_Encryption(string) string
func OTAPI_WrapLoadUserPubkey_Signing(string) string
func OTAPI_WrapLoadPubkey_Encryption(string) string
func OTAPI_WrapLoadPubkey_Signing(string) string
func OTAPI_WrapVerifyUserPrivateKey(string) bool
func OTAPI_WrapLoadPurse(string, string, string) string
func OTAPI_WrapLoadMint(string, string) string
func OTAPI_WrapLoadAssetContract(string) string
func OTAPI_WrapLoadServerContract(string) string
func OTAPI_WrapMint_IsStillGood(string, string) bool
func OTAPI_WrapIsBasketCurrency(string) bool
func OTAPI_WrapBasket_GetMemberCount(string) int
func OTAPI_WrapBasket_GetMemberType(string, int) string
func OTAPI_WrapBasket_GetMinimumTransferAmount(string) int64
func OTAPI_WrapBasket_GetMemberMinimumTransferAmount(string, int) int64
func OTAPI_WrapLoadAssetAccount(string, string, string) string
func OTAPI_WrapLoadInbox(string, string, string) string
func OTAPI_WrapLoadOutbox(string, string, string) string
func OTAPI_WrapLoadInboxNoVerify(string, string, string) string
func OTAPI_WrapLoadOutboxNoVerify(string, string, string) string
func OTAPI_WrapLoadPaymentInbox(string, string) string
func OTAPI_WrapLoadPaymentInboxNoVerify(string, string) string
func OTAPI_WrapLoadRecordBox(string, string, string) string
func OTAPI_WrapLoadRecordBoxNoVerify(string, string, string) string
func OTAPI_WrapClearRecord(string, string, string, int, bool) bool
func OTAPI_WrapLoadExpiredBox(string, string) string
func OTAPI_WrapLoadExpiredBoxNoVerify(string, string) string
func OTAPI_WrapClearExpired(string, string, int, bool) bool
func OTAPI_WrapLedger_GetCount(string, string, string, string) int
func OTAPI_WrapLedger_CreateResponse(string, string, string, string) string
func OTAPI_WrapLedger_GetTransactionByIndex(string, string, string, string, int) string
func OTAPI_WrapLedger_GetTransactionByID(string, string, string, string, int64) string
func OTAPI_WrapLedger_GetTransactionIDByIndex(string, string, string, string, int) int64
func OTAPI_WrapLedger_AddTransaction(string, string, string, string, string) string
func OTAPI_WrapTransaction_CreateResponse(string, string, string, string, string, bool) string
func OTAPI_WrapLedger_FinalizeResponse(string, string, string, string) string
func OTAPI_WrapLedger_GetInstrument(string, string, string, string, int) string
func OTAPI_WrapRecordPayment(string, string, bool, int, bool) bool
func OTAPI_WrapTransaction_GetType(string, string, string, string) string
func OTAPI_WrapReplyNotice_GetRequestNum(string, string, string) int64
func OTAPI_WrapTransaction_GetVoucher(string, string, string, string) string
func OTAPI_WrapTransaction_GetSuccess(string, string, string, string) int
func OTAPI_WrapTransaction_IsCanceled(string, string, string, string) int
func OTAPI_WrapTransaction_GetBalanceAgreementSuccess(string, string, string, string) int
func _swig_wrap_OTAPI_Wrap_Transaction_GetDateSigned(string, string, string, string) SwigcptrWrapTimeT

func OTAPI_WrapTransaction_GetDateSigned(arg1 string, arg2 string, arg3 string, arg4 string) WrapTimeT {
	return _swig_wrap_OTAPI_Wrap_Transaction_GetDateSigned(arg1, arg2, arg3, arg4)
}

func OTAPI_WrapTransaction_GetAmount(string, string, string, string) int64
func OTAPI_WrapPending_GetNote(string, string, string, string) string
func OTAPI_WrapTransaction_GetSenderUserID(string, string, string, string) string
func OTAPI_WrapTransaction_GetSenderAcctID(string, string, string, string) string
func OTAPI_WrapTransaction_GetRecipientUserID(string, string, string, string) string
func OTAPI_WrapTransaction_GetRecipientAcctID(string, string, string, string) string
func OTAPI_WrapTransaction_GetDisplayReferenceToNum(string, string, string, string) int64
func OTAPI_WrapSavePurse(string, string, string, string) bool
func OTAPI_WrapCreatePurse(string, string, string, string) string
func OTAPI_WrapCreatePurse_Passphrase(string, string, string) string
func OTAPI_WrapPurse_GetTotalValue(string, string, string) int64
func OTAPI_WrapPurse_Count(string, string, string) int
func OTAPI_WrapPurse_HasPassword(string, string) bool
func OTAPI_WrapPurse_Peek(string, string, string, string) string
func OTAPI_WrapPurse_Pop(string, string, string, string) string
func OTAPI_WrapPurse_Push(string, string, string, string, string, string) string
func OTAPI_WrapPurse_Empty(string, string, string, string) string
func OTAPI_WrapWallet_ImportPurse(string, string, string, string) bool
func OTAPI_WrapExchangePurse(string, string, string, string) int
func OTAPI_WrapToken_ChangeOwner(string, string, string, string, string, string) string
func OTAPI_WrapToken_GetID(string, string, string) string
func OTAPI_WrapToken_GetDenomination(string, string, string) int64
func OTAPI_WrapToken_GetSeries(string, string, string) int
func _swig_wrap_OTAPI_Wrap_Token_GetValidFrom(string, string, string) SwigcptrWrapTimeT

func OTAPI_WrapToken_GetValidFrom(arg1 string, arg2 string, arg3 string) WrapTimeT {
	return _swig_wrap_OTAPI_Wrap_Token_GetValidFrom(arg1, arg2, arg3)
}

func _swig_wrap_OTAPI_Wrap_Token_GetValidTo(string, string, string) SwigcptrWrapTimeT

func OTAPI_WrapToken_GetValidTo(arg1 string, arg2 string, arg3 string) WrapTimeT {
	return _swig_wrap_OTAPI_Wrap_Token_GetValidTo(arg1, arg2, arg3)
}

func OTAPI_WrapToken_GetAssetID(string) string
func OTAPI_WrapToken_GetServerID(string) string
func OTAPI_WrapInstrmnt_GetAmount(string) int64
func OTAPI_WrapInstrmnt_GetTransNum(string) int64
func _swig_wrap_OTAPI_Wrap_Instrmnt_GetValidFrom(string) SwigcptrWrapTimeT

func OTAPI_WrapInstrmnt_GetValidFrom(arg1 string) WrapTimeT {
	return _swig_wrap_OTAPI_Wrap_Instrmnt_GetValidFrom(arg1)
}

func _swig_wrap_OTAPI_Wrap_Instrmnt_GetValidTo(string) SwigcptrWrapTimeT

func OTAPI_WrapInstrmnt_GetValidTo(arg1 string) WrapTimeT {
	return _swig_wrap_OTAPI_Wrap_Instrmnt_GetValidTo(arg1)
}

func OTAPI_WrapInstrmnt_GetMemo(string) string
func OTAPI_WrapInstrmnt_GetType(string) string
func OTAPI_WrapInstrmnt_GetServerID(string) string
func OTAPI_WrapInstrmnt_GetAssetID(string) string
func OTAPI_WrapInstrmnt_GetSenderUserID(string) string
func OTAPI_WrapInstrmnt_GetSenderAcctID(string) string
func OTAPI_WrapInstrmnt_GetRemitterUserID(string) string
func OTAPI_WrapInstrmnt_GetRemitterAcctID(string) string
func OTAPI_WrapInstrmnt_GetRecipientUserID(string) string
func OTAPI_WrapInstrmnt_GetRecipientAcctID(string) string
func OTAPI_WrapCheckServerID(string, string) int
func OTAPI_WrapCreateUserAccount(string, string) int
func OTAPI_WrapDeleteUserAccount(string, string) int
func OTAPI_WrapDeleteAssetAccount(string, string, string) int
func OTAPI_WrapUsageCredits(string, string, string, int64) int
func OTAPI_WrapMessage_GetUsageCredits(string) int64
func OTAPI_WrapCheckUser(string, string, string) int
func OTAPI_WrapSendUserMessage(string, string, string, string, string) int
func OTAPI_WrapSendUserInstrument(string, string, string, string, string, string) int
func OTAPI_WrapGetRequest(string, string) int
func OTAPI_WrapGetTransactionNumber(string, string) int
func OTAPI_WrapIssueAssetType(string, string, string) int
func OTAPI_WrapGetContract(string, string, string) int
func OTAPI_WrapGetMint(string, string, string) int
func OTAPI_WrapCreateAssetAccount(string, string, string) int
func OTAPI_WrapGetAccount(string, string, string) int
func OTAPI_WrapGetAccountFiles(string, string, string) int
func OTAPI_WrapGenerateBasketCreation(string, int64) string
func OTAPI_WrapAddBasketCreationItem(string, string, string, int64) string
func OTAPI_WrapIssueBasket(string, string, string) int
func OTAPI_WrapGenerateBasketExchange(string, string, string, string, int) string
func OTAPI_WrapAddBasketExchangeItem(string, string, string, string, string) string
func OTAPI_WrapExchangeBasket(string, string, string, string, bool) int
func OTAPI_WrapNotarizeWithdrawal(string, string, string, int64) int
func OTAPI_WrapNotarizeDeposit(string, string, string, string) int
func OTAPI_WrapNotarizeTransfer(string, string, string, string, int64, string) int
func OTAPI_WrapGetInbox(string, string, string) int
func OTAPI_WrapGetOutbox(string, string, string) int
func OTAPI_WrapGetNymbox(string, string) int
func OTAPI_WrapLoadNymbox(string, string) string
func OTAPI_WrapLoadNymboxNoVerify(string, string) string
func OTAPI_WrapNymbox_GetReplyNotice(string, string, int64) string
func OTAPI_WrapHaveAlreadySeenReply(string, string, int64) bool
func OTAPI_WrapGetBoxReceipt(string, string, string, int, int64) int
func OTAPI_WrapDoesBoxReceiptExist(string, string, string, int, int64) bool
func OTAPI_WrapProcessInbox(string, string, string, string) int
func OTAPI_WrapProcessNymbox(string, string) int
func OTAPI_WrapWithdrawVoucher(string, string, string, string, string, int64) int
func OTAPI_WrapPayDividend(string, string, string, string, string, int64) int
func OTAPI_WrapDepositCheque(string, string, string, string) int
func OTAPI_WrapDepositPaymentPlan(string, string, string) int
func _swig_wrap_OTAPI_Wrap_issueMarketOffer(string, string, int64, int64, int64, int64, bool, uintptr, string, int64) int

func OTAPI_WrapIssueMarketOffer(arg1 string, arg2 string, arg3 int64, arg4 int64, arg5 int64, arg6 int64, arg7 bool, arg8 WrapTimeT, arg9 string, arg10 int64) int {
	return _swig_wrap_OTAPI_Wrap_issueMarketOffer(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8.Swigcptr(), arg9, arg10)
}

func OTAPI_WrapGetMarketList(string, string) int
func OTAPI_WrapGetMarketOffers(string, string, string, int64) int
func OTAPI_WrapGetMarketRecentTrades(string, string, string) int
func OTAPI_WrapGetNym_MarketOffers(string, string) int
func OTAPI_WrapKillMarketOffer(string, string, string, int64) int
func OTAPI_WrapKillPaymentPlan(string, string, string, int64) int
func OTAPI_WrapPopMessageBuffer(int64, string, string) string
func _swig_wrap_OTAPI_Wrap_FlushMessageBuffer()

func OTAPI_WrapFlushMessageBuffer() {
	_swig_wrap_OTAPI_Wrap_FlushMessageBuffer()
}

func OTAPI_WrapGetSentMessage(int64, string, string) string
func OTAPI_WrapRemoveSentMessage(int64, string, string) bool
func _swig_wrap_OTAPI_Wrap_FlushSentMessages(bool, string, string, string)

func OTAPI_WrapFlushSentMessages(arg1 bool, arg2 string, arg3 string, arg4 string) {
	_swig_wrap_OTAPI_Wrap_FlushSentMessages(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OTAPI_Wrap_Sleep(int64)

func OTAPI_WrapSleep(arg1 int64) {
	_swig_wrap_OTAPI_Wrap_Sleep(arg1)
}

func OTAPI_WrapResyncNymWithServer(string, string, string) bool
func OTAPI_WrapMessage_GetCommand(string) string
func OTAPI_WrapMessage_GetSuccess(string) int
func OTAPI_WrapQueryAssetTypes(string, string, string) int
func OTAPI_WrapMessage_GetPayload(string) string
func OTAPI_WrapMessage_GetDepth(string) int
func OTAPI_WrapMessage_GetTransactionSuccess(string, string, string, string) int
func OTAPI_WrapMessage_IsTransactionCanceled(string, string, string, string) int
func OTAPI_WrapMessage_GetBalanceAgreementSuccess(string, string, string, string) int
func OTAPI_WrapMessage_GetLedger(string) string
func OTAPI_WrapMessage_GetNewAssetTypeID(string) string
func OTAPI_WrapMessage_GetNewIssuerAcctID(string) string
func OTAPI_WrapMessage_GetNewAcctID(string) string
func OTAPI_WrapMessage_GetNymboxHash(string) string
func OTAPI_WrapConnectServer(string, string, string, string, string) bool
func OTAPI_WrapProcessSockets() bool
type OTAPI_Wrap interface {
	Swigcptr() uintptr
	SwigIsOTAPI_Wrap()
}

func OT_CLI_GetArgsCount(string) int
func OT_CLI_GetValueByKey(string, string) string
func OT_CLI_GetValueByIndex(string, int) string
func OT_CLI_GetKeyByIndex(string, int) string
func OT_CLI_ReadLine() string
func OT_CLI_ReadUntilEOF() string
type SwigcptrOT_ME uintptr

func (p SwigcptrOT_ME) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOT_ME) SwigIsOT_ME() {
}

func _swig_wrap_new_OT_ME() SwigcptrOT_ME

func NewOT_ME() OT_ME {
	return _swig_wrap_new_OT_ME()
}

func _swig_wrap_delete_OT_ME(uintptr)

func DeleteOT_ME(arg1 OT_ME) {
	_swig_wrap_delete_OT_ME(arg1.Swigcptr())
}

func _swig_wrap_OT_ME_opentxs_main_loop(SwigcptrOT_ME) int

func (arg1 SwigcptrOT_ME) Opentxs_main_loop() int {
	return _swig_wrap_OT_ME_opentxs_main_loop(arg1)
}

func _swig_wrap_OT_ME_make_sure_enough_trans_nums(SwigcptrOT_ME, int, string, string) bool

func (arg1 SwigcptrOT_ME) Make_sure_enough_trans_nums(arg2 int, arg3 string, arg4 string) bool {
	return _swig_wrap_OT_ME_make_sure_enough_trans_nums(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_register_nym(SwigcptrOT_ME, string, string) string

func (arg1 SwigcptrOT_ME) Register_nym(arg2 string, arg3 string) string {
	return _swig_wrap_OT_ME_register_nym(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_check_user(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Check_user(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_check_user(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_create_pseudonym(SwigcptrOT_ME, int, string, string) string

func (arg1 SwigcptrOT_ME) Create_pseudonym(arg2 int, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_create_pseudonym(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_issue_asset_type(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Issue_asset_type(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_issue_asset_type(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_issue_basket_currency(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Issue_basket_currency(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_issue_basket_currency(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_exchange_basket_currency(SwigcptrOT_ME, string, string, string, string, string, bool) string

func (arg1 SwigcptrOT_ME) Exchange_basket_currency(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 bool) string {
	return _swig_wrap_OT_ME_exchange_basket_currency(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

func _swig_wrap_OT_ME_retrieve_contract(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Retrieve_contract(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_retrieve_contract(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_load_or_retrieve_contract(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Load_or_retrieve_contract(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_load_or_retrieve_contract(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_create_asset_acct(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Create_asset_acct(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_create_asset_acct(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_stat_asset_account(SwigcptrOT_ME, string) string

func (arg1 SwigcptrOT_ME) Stat_asset_account(arg2 string) string {
	return _swig_wrap_OT_ME_stat_asset_account(arg1, arg2)
}

func _swig_wrap_OT_ME_retrieve_account__SWIG_0(SwigcptrOT_ME, string, string, string) bool

func (arg1 SwigcptrOT_ME) Retrieve_account__SWIG_0(arg2 string, arg3 string, arg4 string) bool {
	return _swig_wrap_OT_ME_retrieve_account__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_retrieve_account__SWIG_1(SwigcptrOT_ME, string, string, string, bool) bool

func (arg1 SwigcptrOT_ME) Retrieve_account__SWIG_1(arg2 string, arg3 string, arg4 string, arg5 bool) bool {
	return _swig_wrap_OT_ME_retrieve_account__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func (p SwigcptrOT_ME) Retrieve_account(a ...interface{}) bool {
	argc := len(a)
	if argc == 3 {
		return p.Retrieve_account__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.Retrieve_account__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OT_ME_retrieve_nym__SWIG_0(SwigcptrOT_ME, string, string) bool

func (arg1 SwigcptrOT_ME) Retrieve_nym__SWIG_0(arg2 string, arg3 string) bool {
	return _swig_wrap_OT_ME_retrieve_nym__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_retrieve_nym__SWIG_1(SwigcptrOT_ME, string, string, bool) bool

func (arg1 SwigcptrOT_ME) Retrieve_nym__SWIG_1(arg2 string, arg3 string, arg4 bool) bool {
	return _swig_wrap_OT_ME_retrieve_nym__SWIG_1(arg1, arg2, arg3, arg4)
}

func (p SwigcptrOT_ME) Retrieve_nym(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return p.Retrieve_nym__SWIG_0(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Retrieve_nym__SWIG_1(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OT_ME_send_transfer(SwigcptrOT_ME, string, string, string, string, int64, string) string

func (arg1 SwigcptrOT_ME) Send_transfer(arg2 string, arg3 string, arg4 string, arg5 string, arg6 int64, arg7 string) string {
	return _swig_wrap_OT_ME_send_transfer(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

func _swig_wrap_OT_ME_process_inbox(SwigcptrOT_ME, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Process_inbox(arg2 string, arg3 string, arg4 string, arg5 string) string {
	return _swig_wrap_OT_ME_process_inbox(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_accept_inbox_items(SwigcptrOT_ME, string, int, string) bool

func (arg1 SwigcptrOT_ME) Accept_inbox_items(arg2 string, arg3 int, arg4 string) bool {
	return _swig_wrap_OT_ME_accept_inbox_items(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_discard_incoming_payments(SwigcptrOT_ME, string, string, string) bool

func (arg1 SwigcptrOT_ME) Discard_incoming_payments(arg2 string, arg3 string, arg4 string) bool {
	return _swig_wrap_OT_ME_discard_incoming_payments(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_cancel_outgoing_payments(SwigcptrOT_ME, string, string, string) bool

func (arg1 SwigcptrOT_ME) Cancel_outgoing_payments(arg2 string, arg3 string, arg4 string) bool {
	return _swig_wrap_OT_ME_cancel_outgoing_payments(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_accept_from_paymentbox(SwigcptrOT_ME, string, string, string) int

func (arg1 SwigcptrOT_ME) Accept_from_paymentbox(arg2 string, arg3 string, arg4 string) int {
	return _swig_wrap_OT_ME_accept_from_paymentbox(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_load_public_encryption_key(SwigcptrOT_ME, string) string

func (arg1 SwigcptrOT_ME) Load_public_encryption_key(arg2 string) string {
	return _swig_wrap_OT_ME_load_public_encryption_key(arg1, arg2)
}

func _swig_wrap_OT_ME_load_public_signing_key(SwigcptrOT_ME, string) string

func (arg1 SwigcptrOT_ME) Load_public_signing_key(arg2 string) string {
	return _swig_wrap_OT_ME_load_public_signing_key(arg1, arg2)
}

func _swig_wrap_OT_ME_load_or_retrieve_encrypt_key(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Load_or_retrieve_encrypt_key(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_load_or_retrieve_encrypt_key(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_load_or_retrieve_signing_key(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Load_or_retrieve_signing_key(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_load_or_retrieve_signing_key(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_send_user_msg_pubkey(SwigcptrOT_ME, string, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Send_user_msg_pubkey(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) string {
	return _swig_wrap_OT_ME_send_user_msg_pubkey(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_OT_ME_send_user_pmnt_pubkey(SwigcptrOT_ME, string, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Send_user_pmnt_pubkey(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) string {
	return _swig_wrap_OT_ME_send_user_pmnt_pubkey(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_OT_ME_send_user_cash_pubkey(SwigcptrOT_ME, string, string, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Send_user_cash_pubkey(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 string) string {
	return _swig_wrap_OT_ME_send_user_cash_pubkey(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

func _swig_wrap_OT_ME_send_user_msg(SwigcptrOT_ME, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Send_user_msg(arg2 string, arg3 string, arg4 string, arg5 string) string {
	return _swig_wrap_OT_ME_send_user_msg(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_send_user_payment(SwigcptrOT_ME, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Send_user_payment(arg2 string, arg3 string, arg4 string, arg5 string) string {
	return _swig_wrap_OT_ME_send_user_payment(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_send_user_cash(SwigcptrOT_ME, string, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Send_user_cash(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) string {
	return _swig_wrap_OT_ME_send_user_cash(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_OT_ME_withdraw_and_send_cash(SwigcptrOT_ME, string, string, string, int64) bool

func (arg1 SwigcptrOT_ME) Withdraw_and_send_cash(arg2 string, arg3 string, arg4 string, arg5 int64) bool {
	return _swig_wrap_OT_ME_withdraw_and_send_cash(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_get_payment_instrument__SWIG_0(SwigcptrOT_ME, string, string, int) string

func (arg1 SwigcptrOT_ME) Get_payment_instrument__SWIG_0(arg2 string, arg3 string, arg4 int) string {
	return _swig_wrap_OT_ME_get_payment_instrument__SWIG_0(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_get_payment_instrument__SWIG_1(SwigcptrOT_ME, string, string, int, string) string

func (arg1 SwigcptrOT_ME) Get_payment_instrument__SWIG_1(arg2 string, arg3 string, arg4 int, arg5 string) string {
	return _swig_wrap_OT_ME_get_payment_instrument__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func (p SwigcptrOT_ME) Get_payment_instrument(a ...interface{}) string {
	argc := len(a)
	if argc == 3 {
		return p.Get_payment_instrument__SWIG_0(a[0].(string), a[1].(string), a[2].(int))
	}
	if argc == 4 {
		return p.Get_payment_instrument__SWIG_1(a[0].(string), a[1].(string), a[2].(int), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OT_ME_get_box_receipt(SwigcptrOT_ME, string, string, string, int, int64) string

func (arg1 SwigcptrOT_ME) Get_box_receipt(arg2 string, arg3 string, arg4 string, arg5 int, arg6 int64) string {
	return _swig_wrap_OT_ME_get_box_receipt(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_OT_ME_retrieve_mint(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Retrieve_mint(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_retrieve_mint(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_load_or_retrieve_mint(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Load_or_retrieve_mint(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_load_or_retrieve_mint(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_query_asset_types(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Query_asset_types(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_query_asset_types(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_create_market_offer(SwigcptrOT_ME, string, string, int64, int64, int64, int64, bool, int64, string, int64) string

func (arg1 SwigcptrOT_ME) Create_market_offer(arg2 string, arg3 string, arg4 int64, arg5 int64, arg6 int64, arg7 int64, arg8 bool, arg9 int64, arg10 string, arg11 int64) string {
	return _swig_wrap_OT_ME_create_market_offer(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
}

func _swig_wrap_OT_ME_kill_market_offer(SwigcptrOT_ME, string, string, string, int64) string

func (arg1 SwigcptrOT_ME) Kill_market_offer(arg2 string, arg3 string, arg4 string, arg5 int64) string {
	return _swig_wrap_OT_ME_kill_market_offer(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_kill_payment_plan(SwigcptrOT_ME, string, string, string, int64) string

func (arg1 SwigcptrOT_ME) Kill_payment_plan(arg2 string, arg3 string, arg4 string, arg5 int64) string {
	return _swig_wrap_OT_ME_kill_payment_plan(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_cancel_payment_plan(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Cancel_payment_plan(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_cancel_payment_plan(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_activate_smart_contract(SwigcptrOT_ME, string, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Activate_smart_contract(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) string {
	return _swig_wrap_OT_ME_activate_smart_contract(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_OT_ME_trigger_clause(SwigcptrOT_ME, string, string, int64, string, string) string

func (arg1 SwigcptrOT_ME) Trigger_clause(arg2 string, arg3 string, arg4 int64, arg5 string, arg6 string) string {
	return _swig_wrap_OT_ME_trigger_clause(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_OT_ME_withdraw_cash(SwigcptrOT_ME, string, string, string, int64) string

func (arg1 SwigcptrOT_ME) Withdraw_cash(arg2 string, arg3 string, arg4 string, arg5 int64) string {
	return _swig_wrap_OT_ME_withdraw_cash(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_easy_withdraw_cash(SwigcptrOT_ME, string, int64) int

func (arg1 SwigcptrOT_ME) Easy_withdraw_cash(arg2 string, arg3 int64) int {
	return _swig_wrap_OT_ME_easy_withdraw_cash(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_export_cash(SwigcptrOT_ME, string, string, string, string, string, bool, *string) string

func (arg1 SwigcptrOT_ME) Export_cash(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 bool, arg8 *string) string {
	return _swig_wrap_OT_ME_export_cash(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
}

func _swig_wrap_OT_ME_withdraw_voucher(SwigcptrOT_ME, string, string, string, string, string, int64) string

func (arg1 SwigcptrOT_ME) Withdraw_voucher(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 int64) string {
	return _swig_wrap_OT_ME_withdraw_voucher(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

func _swig_wrap_OT_ME_pay_dividend(SwigcptrOT_ME, string, string, string, string, string, int64) string

func (arg1 SwigcptrOT_ME) Pay_dividend(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 int64) string {
	return _swig_wrap_OT_ME_pay_dividend(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

func _swig_wrap_OT_ME_deposit_cheque(SwigcptrOT_ME, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Deposit_cheque(arg2 string, arg3 string, arg4 string, arg5 string) string {
	return _swig_wrap_OT_ME_deposit_cheque(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_deposit_cash(SwigcptrOT_ME, string, string, string, string) int

func (arg1 SwigcptrOT_ME) Deposit_cash(arg2 string, arg3 string, arg4 string, arg5 string) int {
	return _swig_wrap_OT_ME_deposit_cash(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_deposit_local_purse(SwigcptrOT_ME, string, string, string, string) int

func (arg1 SwigcptrOT_ME) Deposit_local_purse(arg2 string, arg3 string, arg4 string, arg5 string) int {
	return _swig_wrap_OT_ME_deposit_local_purse(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_get_market_list(SwigcptrOT_ME, string, string) string

func (arg1 SwigcptrOT_ME) Get_market_list(arg2 string, arg3 string) string {
	return _swig_wrap_OT_ME_get_market_list(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_get_market_offers(SwigcptrOT_ME, string, string, string, int64) string

func (arg1 SwigcptrOT_ME) Get_market_offers(arg2 string, arg3 string, arg4 string, arg5 int64) string {
	return _swig_wrap_OT_ME_get_market_offers(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_get_nym_market_offers(SwigcptrOT_ME, string, string) string

func (arg1 SwigcptrOT_ME) Get_nym_market_offers(arg2 string, arg3 string) string {
	return _swig_wrap_OT_ME_get_nym_market_offers(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_get_market_recent_trades(SwigcptrOT_ME, string, string, string) string

func (arg1 SwigcptrOT_ME) Get_market_recent_trades(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_OT_ME_get_market_recent_trades(arg1, arg2, arg3, arg4)
}

func _swig_wrap_OT_ME_adjust_usage_credits(SwigcptrOT_ME, string, string, string, string) string

func (arg1 SwigcptrOT_ME) Adjust_usage_credits(arg2 string, arg3 string, arg4 string, arg5 string) string {
	return _swig_wrap_OT_ME_adjust_usage_credits(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_VerifyMessageSuccess(SwigcptrOT_ME, string) int

func (arg1 SwigcptrOT_ME) VerifyMessageSuccess(arg2 string) int {
	return _swig_wrap_OT_ME_VerifyMessageSuccess(arg1, arg2)
}

func _swig_wrap_OT_ME_VerifyMsgBalanceAgrmntSuccess(SwigcptrOT_ME, string, string, string, string) int

func (arg1 SwigcptrOT_ME) VerifyMsgBalanceAgrmntSuccess(arg2 string, arg3 string, arg4 string, arg5 string) int {
	return _swig_wrap_OT_ME_VerifyMsgBalanceAgrmntSuccess(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_VerifyMsgTrnxSuccess(SwigcptrOT_ME, string, string, string, string) int

func (arg1 SwigcptrOT_ME) VerifyMsgTrnxSuccess(arg2 string, arg3 string, arg4 string, arg5 string) int {
	return _swig_wrap_OT_ME_VerifyMsgTrnxSuccess(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_OT_ME_InterpretTransactionMsgReply(SwigcptrOT_ME, string, string, string, string, string) int

func (arg1 SwigcptrOT_ME) InterpretTransactionMsgReply(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) int {
	return _swig_wrap_OT_ME_InterpretTransactionMsgReply(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_OT_ME_ExecuteScript_ReturnString__SWIG_0(SwigcptrOT_ME, string, string) string

func (arg1 SwigcptrOT_ME) ExecuteScript_ReturnString__SWIG_0(arg2 string, arg3 string) string {
	return _swig_wrap_OT_ME_ExecuteScript_ReturnString__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_ExecuteScript_ReturnString__SWIG_1(SwigcptrOT_ME, string) string

func (arg1 SwigcptrOT_ME) ExecuteScript_ReturnString__SWIG_1(arg2 string) string {
	return _swig_wrap_OT_ME_ExecuteScript_ReturnString__SWIG_1(arg1, arg2)
}

func (p SwigcptrOT_ME) ExecuteScript_ReturnString(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return p.ExecuteScript_ReturnString__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return p.ExecuteScript_ReturnString__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OT_ME_ExecuteScript_ReturnBool__SWIG_0(SwigcptrOT_ME, string, string) bool

func (arg1 SwigcptrOT_ME) ExecuteScript_ReturnBool__SWIG_0(arg2 string, arg3 string) bool {
	return _swig_wrap_OT_ME_ExecuteScript_ReturnBool__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_ExecuteScript_ReturnBool__SWIG_1(SwigcptrOT_ME, string) bool

func (arg1 SwigcptrOT_ME) ExecuteScript_ReturnBool__SWIG_1(arg2 string) bool {
	return _swig_wrap_OT_ME_ExecuteScript_ReturnBool__SWIG_1(arg1, arg2)
}

func (p SwigcptrOT_ME) ExecuteScript_ReturnBool(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.ExecuteScript_ReturnBool__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return p.ExecuteScript_ReturnBool__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OT_ME_ExecuteScript_ReturnInt__SWIG_0(SwigcptrOT_ME, string, string) int

func (arg1 SwigcptrOT_ME) ExecuteScript_ReturnInt__SWIG_0(arg2 string, arg3 string) int {
	return _swig_wrap_OT_ME_ExecuteScript_ReturnInt__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_ExecuteScript_ReturnInt__SWIG_1(SwigcptrOT_ME, string) int

func (arg1 SwigcptrOT_ME) ExecuteScript_ReturnInt__SWIG_1(arg2 string) int {
	return _swig_wrap_OT_ME_ExecuteScript_ReturnInt__SWIG_1(arg1, arg2)
}

func (p SwigcptrOT_ME) ExecuteScript_ReturnInt(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.ExecuteScript_ReturnInt__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return p.ExecuteScript_ReturnInt__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OT_ME_ExecuteScript_ReturnVoid__SWIG_0(SwigcptrOT_ME, string, string)

func (arg1 SwigcptrOT_ME) ExecuteScript_ReturnVoid__SWIG_0(arg2 string, arg3 string) {
	_swig_wrap_OT_ME_ExecuteScript_ReturnVoid__SWIG_0(arg1, arg2, arg3)
}

func _swig_wrap_OT_ME_ExecuteScript_ReturnVoid__SWIG_1(SwigcptrOT_ME, string)

func (arg1 SwigcptrOT_ME) ExecuteScript_ReturnVoid__SWIG_1(arg2 string) {
	_swig_wrap_OT_ME_ExecuteScript_ReturnVoid__SWIG_1(arg1, arg2)
}

func (p SwigcptrOT_ME) ExecuteScript_ReturnVoid(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.ExecuteScript_ReturnVoid__SWIG_1(a[0].(string))
		return
	}
	if argc == 2 {
		p.ExecuteScript_ReturnVoid__SWIG_0(a[0].(string), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_OT_ME_AddVariable(SwigcptrOT_ME, string, uintptr)

func (arg1 SwigcptrOT_ME) AddVariable(arg2 string, arg3 OTVariable) {
	_swig_wrap_OT_ME_AddVariable(arg1, arg2, arg3.Swigcptr())
}

func _swig_wrap_OT_ME_FindVariable(SwigcptrOT_ME, string) SwigcptrOTVariable

func (arg1 SwigcptrOT_ME) FindVariable(arg2 string) OTVariable {
	return _swig_wrap_OT_ME_FindVariable(arg1, arg2)
}

func _swig_wrap_OT_ME_FindVariable2(string) SwigcptrOTVariable

func OT_MEFindVariable2(arg1 string) OTVariable {
	return _swig_wrap_OT_ME_FindVariable2(arg1)
}

type OT_ME interface {
	Swigcptr() uintptr
	SwigIsOT_ME()
	Opentxs_main_loop() int
	Make_sure_enough_trans_nums(arg2 int, arg3 string, arg4 string) bool
	Register_nym(arg2 string, arg3 string) string
	Check_user(arg2 string, arg3 string, arg4 string) string
	Create_pseudonym(arg2 int, arg3 string, arg4 string) string
	Issue_asset_type(arg2 string, arg3 string, arg4 string) string
	Issue_basket_currency(arg2 string, arg3 string, arg4 string) string
	Exchange_basket_currency(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 bool) string
	Retrieve_contract(arg2 string, arg3 string, arg4 string) string
	Load_or_retrieve_contract(arg2 string, arg3 string, arg4 string) string
	Create_asset_acct(arg2 string, arg3 string, arg4 string) string
	Stat_asset_account(arg2 string) string
	Retrieve_account(a ...interface{}) bool
	Retrieve_nym(a ...interface{}) bool
	Send_transfer(arg2 string, arg3 string, arg4 string, arg5 string, arg6 int64, arg7 string) string
	Process_inbox(arg2 string, arg3 string, arg4 string, arg5 string) string
	Accept_inbox_items(arg2 string, arg3 int, arg4 string) bool
	Discard_incoming_payments(arg2 string, arg3 string, arg4 string) bool
	Cancel_outgoing_payments(arg2 string, arg3 string, arg4 string) bool
	Accept_from_paymentbox(arg2 string, arg3 string, arg4 string) int
	Load_public_encryption_key(arg2 string) string
	Load_public_signing_key(arg2 string) string
	Load_or_retrieve_encrypt_key(arg2 string, arg3 string, arg4 string) string
	Load_or_retrieve_signing_key(arg2 string, arg3 string, arg4 string) string
	Send_user_msg_pubkey(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) string
	Send_user_pmnt_pubkey(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) string
	Send_user_cash_pubkey(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 string) string
	Send_user_msg(arg2 string, arg3 string, arg4 string, arg5 string) string
	Send_user_payment(arg2 string, arg3 string, arg4 string, arg5 string) string
	Send_user_cash(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) string
	Withdraw_and_send_cash(arg2 string, arg3 string, arg4 string, arg5 int64) bool
	Get_payment_instrument(a ...interface{}) string
	Get_box_receipt(arg2 string, arg3 string, arg4 string, arg5 int, arg6 int64) string
	Retrieve_mint(arg2 string, arg3 string, arg4 string) string
	Load_or_retrieve_mint(arg2 string, arg3 string, arg4 string) string
	Query_asset_types(arg2 string, arg3 string, arg4 string) string
	Create_market_offer(arg2 string, arg3 string, arg4 int64, arg5 int64, arg6 int64, arg7 int64, arg8 bool, arg9 int64, arg10 string, arg11 int64) string
	Kill_market_offer(arg2 string, arg3 string, arg4 string, arg5 int64) string
	Kill_payment_plan(arg2 string, arg3 string, arg4 string, arg5 int64) string
	Cancel_payment_plan(arg2 string, arg3 string, arg4 string) string
	Activate_smart_contract(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) string
	Trigger_clause(arg2 string, arg3 string, arg4 int64, arg5 string, arg6 string) string
	Withdraw_cash(arg2 string, arg3 string, arg4 string, arg5 int64) string
	Easy_withdraw_cash(arg2 string, arg3 int64) int
	Export_cash(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 bool, arg8 *string) string
	Withdraw_voucher(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 int64) string
	Pay_dividend(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 int64) string
	Deposit_cheque(arg2 string, arg3 string, arg4 string, arg5 string) string
	Deposit_cash(arg2 string, arg3 string, arg4 string, arg5 string) int
	Deposit_local_purse(arg2 string, arg3 string, arg4 string, arg5 string) int
	Get_market_list(arg2 string, arg3 string) string
	Get_market_offers(arg2 string, arg3 string, arg4 string, arg5 int64) string
	Get_nym_market_offers(arg2 string, arg3 string) string
	Get_market_recent_trades(arg2 string, arg3 string, arg4 string) string
	Adjust_usage_credits(arg2 string, arg3 string, arg4 string, arg5 string) string
	VerifyMessageSuccess(arg2 string) int
	VerifyMsgBalanceAgrmntSuccess(arg2 string, arg3 string, arg4 string, arg5 string) int
	VerifyMsgTrnxSuccess(arg2 string, arg3 string, arg4 string, arg5 string) int
	InterpretTransactionMsgReply(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) int
	ExecuteScript_ReturnString(a ...interface{}) string
	ExecuteScript_ReturnBool(a ...interface{}) bool
	ExecuteScript_ReturnInt(a ...interface{}) int
	ExecuteScript_ReturnVoid(a ...interface{})
	AddVariable(arg2 string, arg3 OTVariable)
	FindVariable(arg2 string) OTVariable
}

type OTDBPackType int
func _swig_getPACK_MESSAGE_PACK() OTDBPackType
var PACK_MESSAGE_PACK OTDBPackType = _swig_getPACK_MESSAGE_PACK()
func _swig_getPACK_PROTOCOL_BUFFERS() OTDBPackType
var PACK_PROTOCOL_BUFFERS OTDBPackType = _swig_getPACK_PROTOCOL_BUFFERS()
func _swig_getPACK_TYPE_ERROR() OTDBPackType
var PACK_TYPE_ERROR OTDBPackType = _swig_getPACK_TYPE_ERROR()
type OTDBStorageType int
func _swig_getSTORE_FILESYSTEM() OTDBStorageType
var STORE_FILESYSTEM OTDBStorageType = _swig_getSTORE_FILESYSTEM()
func _swig_getSTORE_TYPE_SUBCLASS() OTDBStorageType
var STORE_TYPE_SUBCLASS OTDBStorageType = _swig_getSTORE_TYPE_SUBCLASS()
type OTDBStoredObjectType int
func _swig_getSTORED_OBJ_STRING() OTDBStoredObjectType
var STORED_OBJ_STRING OTDBStoredObjectType = _swig_getSTORED_OBJ_STRING()
func _swig_getSTORED_OBJ_BLOB() OTDBStoredObjectType
var STORED_OBJ_BLOB OTDBStoredObjectType = _swig_getSTORED_OBJ_BLOB()
func _swig_getSTORED_OBJ_STRING_MAP() OTDBStoredObjectType
var STORED_OBJ_STRING_MAP OTDBStoredObjectType = _swig_getSTORED_OBJ_STRING_MAP()
func _swig_getSTORED_OBJ_WALLET_DATA() OTDBStoredObjectType
var STORED_OBJ_WALLET_DATA OTDBStoredObjectType = _swig_getSTORED_OBJ_WALLET_DATA()
func _swig_getSTORED_OBJ_BITCOIN_ACCT() OTDBStoredObjectType
var STORED_OBJ_BITCOIN_ACCT OTDBStoredObjectType = _swig_getSTORED_OBJ_BITCOIN_ACCT()
func _swig_getSTORED_OBJ_BITCOIN_SERVER() OTDBStoredObjectType
var STORED_OBJ_BITCOIN_SERVER OTDBStoredObjectType = _swig_getSTORED_OBJ_BITCOIN_SERVER()
func _swig_getSTORED_OBJ_RIPPLE_SERVER() OTDBStoredObjectType
var STORED_OBJ_RIPPLE_SERVER OTDBStoredObjectType = _swig_getSTORED_OBJ_RIPPLE_SERVER()
func _swig_getSTORED_OBJ_LOOM_SERVER() OTDBStoredObjectType
var STORED_OBJ_LOOM_SERVER OTDBStoredObjectType = _swig_getSTORED_OBJ_LOOM_SERVER()
func _swig_getSTORED_OBJ_SERVER_INFO() OTDBStoredObjectType
var STORED_OBJ_SERVER_INFO OTDBStoredObjectType = _swig_getSTORED_OBJ_SERVER_INFO()
func _swig_getSTORED_OBJ_CONTACT_NYM() OTDBStoredObjectType
var STORED_OBJ_CONTACT_NYM OTDBStoredObjectType = _swig_getSTORED_OBJ_CONTACT_NYM()
func _swig_getSTORED_OBJ_CONTACT_ACCT() OTDBStoredObjectType
var STORED_OBJ_CONTACT_ACCT OTDBStoredObjectType = _swig_getSTORED_OBJ_CONTACT_ACCT()
func _swig_getSTORED_OBJ_CONTACT() OTDBStoredObjectType
var STORED_OBJ_CONTACT OTDBStoredObjectType = _swig_getSTORED_OBJ_CONTACT()
func _swig_getSTORED_OBJ_ADDRESS_BOOK() OTDBStoredObjectType
var STORED_OBJ_ADDRESS_BOOK OTDBStoredObjectType = _swig_getSTORED_OBJ_ADDRESS_BOOK()
func _swig_getSTORED_OBJ_MARKET_DATA() OTDBStoredObjectType
var STORED_OBJ_MARKET_DATA OTDBStoredObjectType = _swig_getSTORED_OBJ_MARKET_DATA()
func _swig_getSTORED_OBJ_MARKET_LIST() OTDBStoredObjectType
var STORED_OBJ_MARKET_LIST OTDBStoredObjectType = _swig_getSTORED_OBJ_MARKET_LIST()
func _swig_getSTORED_OBJ_BID_DATA() OTDBStoredObjectType
var STORED_OBJ_BID_DATA OTDBStoredObjectType = _swig_getSTORED_OBJ_BID_DATA()
func _swig_getSTORED_OBJ_ASK_DATA() OTDBStoredObjectType
var STORED_OBJ_ASK_DATA OTDBStoredObjectType = _swig_getSTORED_OBJ_ASK_DATA()
func _swig_getSTORED_OBJ_OFFER_LIST_MARKET() OTDBStoredObjectType
var STORED_OBJ_OFFER_LIST_MARKET OTDBStoredObjectType = _swig_getSTORED_OBJ_OFFER_LIST_MARKET()
func _swig_getSTORED_OBJ_TRADE_DATA_MARKET() OTDBStoredObjectType
var STORED_OBJ_TRADE_DATA_MARKET OTDBStoredObjectType = _swig_getSTORED_OBJ_TRADE_DATA_MARKET()
func _swig_getSTORED_OBJ_TRADE_LIST_MARKET() OTDBStoredObjectType
var STORED_OBJ_TRADE_LIST_MARKET OTDBStoredObjectType = _swig_getSTORED_OBJ_TRADE_LIST_MARKET()
func _swig_getSTORED_OBJ_OFFER_DATA_NYM() OTDBStoredObjectType
var STORED_OBJ_OFFER_DATA_NYM OTDBStoredObjectType = _swig_getSTORED_OBJ_OFFER_DATA_NYM()
func _swig_getSTORED_OBJ_OFFER_LIST_NYM() OTDBStoredObjectType
var STORED_OBJ_OFFER_LIST_NYM OTDBStoredObjectType = _swig_getSTORED_OBJ_OFFER_LIST_NYM()
func _swig_getSTORED_OBJ_TRADE_DATA_NYM() OTDBStoredObjectType
var STORED_OBJ_TRADE_DATA_NYM OTDBStoredObjectType = _swig_getSTORED_OBJ_TRADE_DATA_NYM()
func _swig_getSTORED_OBJ_TRADE_LIST_NYM() OTDBStoredObjectType
var STORED_OBJ_TRADE_LIST_NYM OTDBStoredObjectType = _swig_getSTORED_OBJ_TRADE_LIST_NYM()
func _swig_getSTORED_OBJ_ERROR() OTDBStoredObjectType
var STORED_OBJ_ERROR OTDBStoredObjectType = _swig_getSTORED_OBJ_ERROR()
type SwigcptrStorable uintptr

func (p SwigcptrStorable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStorable) SwigIsStorable() {
}

func _swig_wrap_delete_Storable(uintptr)

func DeleteStorable(arg1 Storable) {
	_swig_wrap_delete_Storable(arg1.Swigcptr())
}

func _swig_wrap_Storable_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func StorableCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_Storable_Create(arg1, arg2)
}

func _swig_wrap_Storable_ot_dynamic_cast(uintptr) SwigcptrStorable

func StorableOt_dynamic_cast(arg1 Storable) Storable {
	return _swig_wrap_Storable_ot_dynamic_cast(arg1.Swigcptr())
}

type Storable interface {
	Swigcptr() uintptr
	SwigIsStorable()
}

type SwigcptrStorage uintptr

func (p SwigcptrStorage) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStorage) SwigIsStorage() {
}

func _swig_wrap_Storage_GetPacker__SWIG_0(SwigcptrStorage, OTDBPackType) SwigcptrOTPacker

func (arg1 SwigcptrStorage) GetPacker__SWIG_0(arg2 OTDBPackType) OTPacker {
	return _swig_wrap_Storage_GetPacker__SWIG_0(arg1, arg2)
}

func _swig_wrap_Storage_GetPacker__SWIG_1(SwigcptrStorage) SwigcptrOTPacker

func (arg1 SwigcptrStorage) GetPacker__SWIG_1() OTPacker {
	return _swig_wrap_Storage_GetPacker__SWIG_1(arg1)
}

func (p SwigcptrStorage) GetPacker(a ...interface{}) OTPacker {
	argc := len(a)
	if argc == 0 {
		return p.GetPacker__SWIG_1()
	}
	if argc == 1 {
		return p.GetPacker__SWIG_0(a[0].(OTDBPackType))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_Exists__SWIG_0(SwigcptrStorage, string, string, string, string) bool

func (arg1 SwigcptrStorage) Exists__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string) bool {
	return _swig_wrap_Storage_Exists__SWIG_0(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_Storage_Exists__SWIG_1(SwigcptrStorage, string, string, string) bool

func (arg1 SwigcptrStorage) Exists__SWIG_1(arg2 string, arg3 string, arg4 string) bool {
	return _swig_wrap_Storage_Exists__SWIG_1(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Storage_Exists__SWIG_2(SwigcptrStorage, string, string) bool

func (arg1 SwigcptrStorage) Exists__SWIG_2(arg2 string, arg3 string) bool {
	return _swig_wrap_Storage_Exists__SWIG_2(arg1, arg2, arg3)
}

func _swig_wrap_Storage_Exists__SWIG_3(SwigcptrStorage, string) bool

func (arg1 SwigcptrStorage) Exists__SWIG_3(arg2 string) bool {
	return _swig_wrap_Storage_Exists__SWIG_3(arg1, arg2)
}

func (p SwigcptrStorage) Exists(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.Exists__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.Exists__SWIG_2(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Exists__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.Exists__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_FormPathString__SWIG_0(SwigcptrStorage, *string, string, string, string, string) int64

func (arg1 SwigcptrStorage) FormPathString__SWIG_0(arg2 *string, arg3 string, arg4 string, arg5 string, arg6 string) int64 {
	return _swig_wrap_Storage_FormPathString__SWIG_0(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_Storage_FormPathString__SWIG_1(SwigcptrStorage, *string, string, string, string) int64

func (arg1 SwigcptrStorage) FormPathString__SWIG_1(arg2 *string, arg3 string, arg4 string, arg5 string) int64 {
	return _swig_wrap_Storage_FormPathString__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_Storage_FormPathString__SWIG_2(SwigcptrStorage, *string, string, string) int64

func (arg1 SwigcptrStorage) FormPathString__SWIG_2(arg2 *string, arg3 string, arg4 string) int64 {
	return _swig_wrap_Storage_FormPathString__SWIG_2(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Storage_FormPathString__SWIG_3(SwigcptrStorage, *string, string) int64

func (arg1 SwigcptrStorage) FormPathString__SWIG_3(arg2 *string, arg3 string) int64 {
	return _swig_wrap_Storage_FormPathString__SWIG_3(arg1, arg2, arg3)
}

func (p SwigcptrStorage) FormPathString(a ...interface{}) int64 {
	argc := len(a)
	if argc == 2 {
		return p.FormPathString__SWIG_3(a[0].(*string), a[1].(string))
	}
	if argc == 3 {
		return p.FormPathString__SWIG_2(a[0].(*string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.FormPathString__SWIG_1(a[0].(*string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.FormPathString__SWIG_0(a[0].(*string), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_delete_Storage(uintptr)

func DeleteStorage(arg1 Storage) {
	_swig_wrap_delete_Storage(arg1.Swigcptr())
}

func _swig_wrap_Storage_StoreString__SWIG_0(SwigcptrStorage, string, string, string, string, string) bool

func (arg1 SwigcptrStorage) StoreString__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) bool {
	return _swig_wrap_Storage_StoreString__SWIG_0(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_Storage_StoreString__SWIG_1(SwigcptrStorage, string, string, string, string) bool

func (arg1 SwigcptrStorage) StoreString__SWIG_1(arg2 string, arg3 string, arg4 string, arg5 string) bool {
	return _swig_wrap_Storage_StoreString__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_Storage_StoreString__SWIG_2(SwigcptrStorage, string, string, string) bool

func (arg1 SwigcptrStorage) StoreString__SWIG_2(arg2 string, arg3 string, arg4 string) bool {
	return _swig_wrap_Storage_StoreString__SWIG_2(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Storage_StoreString__SWIG_3(SwigcptrStorage, string, string) bool

func (arg1 SwigcptrStorage) StoreString__SWIG_3(arg2 string, arg3 string) bool {
	return _swig_wrap_Storage_StoreString__SWIG_3(arg1, arg2, arg3)
}

func (p SwigcptrStorage) StoreString(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return p.StoreString__SWIG_3(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.StoreString__SWIG_2(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.StoreString__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.StoreString__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_QueryString__SWIG_0(SwigcptrStorage, string, string, string, string) string

func (arg1 SwigcptrStorage) QueryString__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string) string {
	return _swig_wrap_Storage_QueryString__SWIG_0(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_Storage_QueryString__SWIG_1(SwigcptrStorage, string, string, string) string

func (arg1 SwigcptrStorage) QueryString__SWIG_1(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_Storage_QueryString__SWIG_1(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Storage_QueryString__SWIG_2(SwigcptrStorage, string, string) string

func (arg1 SwigcptrStorage) QueryString__SWIG_2(arg2 string, arg3 string) string {
	return _swig_wrap_Storage_QueryString__SWIG_2(arg1, arg2, arg3)
}

func _swig_wrap_Storage_QueryString__SWIG_3(SwigcptrStorage, string) string

func (arg1 SwigcptrStorage) QueryString__SWIG_3(arg2 string) string {
	return _swig_wrap_Storage_QueryString__SWIG_3(arg1, arg2)
}

func (p SwigcptrStorage) QueryString(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return p.QueryString__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.QueryString__SWIG_2(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.QueryString__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.QueryString__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_StorePlainString__SWIG_0(SwigcptrStorage, string, string, string, string, string) bool

func (arg1 SwigcptrStorage) StorePlainString__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) bool {
	return _swig_wrap_Storage_StorePlainString__SWIG_0(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_Storage_StorePlainString__SWIG_1(SwigcptrStorage, string, string, string, string) bool

func (arg1 SwigcptrStorage) StorePlainString__SWIG_1(arg2 string, arg3 string, arg4 string, arg5 string) bool {
	return _swig_wrap_Storage_StorePlainString__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_Storage_StorePlainString__SWIG_2(SwigcptrStorage, string, string, string) bool

func (arg1 SwigcptrStorage) StorePlainString__SWIG_2(arg2 string, arg3 string, arg4 string) bool {
	return _swig_wrap_Storage_StorePlainString__SWIG_2(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Storage_StorePlainString__SWIG_3(SwigcptrStorage, string, string) bool

func (arg1 SwigcptrStorage) StorePlainString__SWIG_3(arg2 string, arg3 string) bool {
	return _swig_wrap_Storage_StorePlainString__SWIG_3(arg1, arg2, arg3)
}

func (p SwigcptrStorage) StorePlainString(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return p.StorePlainString__SWIG_3(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.StorePlainString__SWIG_2(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.StorePlainString__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.StorePlainString__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_QueryPlainString__SWIG_0(SwigcptrStorage, string, string, string, string) string

func (arg1 SwigcptrStorage) QueryPlainString__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string) string {
	return _swig_wrap_Storage_QueryPlainString__SWIG_0(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_Storage_QueryPlainString__SWIG_1(SwigcptrStorage, string, string, string) string

func (arg1 SwigcptrStorage) QueryPlainString__SWIG_1(arg2 string, arg3 string, arg4 string) string {
	return _swig_wrap_Storage_QueryPlainString__SWIG_1(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Storage_QueryPlainString__SWIG_2(SwigcptrStorage, string, string) string

func (arg1 SwigcptrStorage) QueryPlainString__SWIG_2(arg2 string, arg3 string) string {
	return _swig_wrap_Storage_QueryPlainString__SWIG_2(arg1, arg2, arg3)
}

func _swig_wrap_Storage_QueryPlainString__SWIG_3(SwigcptrStorage, string) string

func (arg1 SwigcptrStorage) QueryPlainString__SWIG_3(arg2 string) string {
	return _swig_wrap_Storage_QueryPlainString__SWIG_3(arg1, arg2)
}

func (p SwigcptrStorage) QueryPlainString(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return p.QueryPlainString__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.QueryPlainString__SWIG_2(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.QueryPlainString__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.QueryPlainString__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_StoreObject__SWIG_0(SwigcptrStorage, uintptr, string, string, string, string) bool

func (arg1 SwigcptrStorage) StoreObject__SWIG_0(arg2 Storable, arg3 string, arg4 string, arg5 string, arg6 string) bool {
	return _swig_wrap_Storage_StoreObject__SWIG_0(arg1, arg2.Swigcptr(), arg3, arg4, arg5, arg6)
}

func _swig_wrap_Storage_StoreObject__SWIG_1(SwigcptrStorage, uintptr, string, string, string) bool

func (arg1 SwigcptrStorage) StoreObject__SWIG_1(arg2 Storable, arg3 string, arg4 string, arg5 string) bool {
	return _swig_wrap_Storage_StoreObject__SWIG_1(arg1, arg2.Swigcptr(), arg3, arg4, arg5)
}

func _swig_wrap_Storage_StoreObject__SWIG_2(SwigcptrStorage, uintptr, string, string) bool

func (arg1 SwigcptrStorage) StoreObject__SWIG_2(arg2 Storable, arg3 string, arg4 string) bool {
	return _swig_wrap_Storage_StoreObject__SWIG_2(arg1, arg2.Swigcptr(), arg3, arg4)
}

func _swig_wrap_Storage_StoreObject__SWIG_3(SwigcptrStorage, uintptr, string) bool

func (arg1 SwigcptrStorage) StoreObject__SWIG_3(arg2 Storable, arg3 string) bool {
	return _swig_wrap_Storage_StoreObject__SWIG_3(arg1, arg2.Swigcptr(), arg3)
}

func (p SwigcptrStorage) StoreObject(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return p.StoreObject__SWIG_3(a[0].(Storable), a[1].(string))
	}
	if argc == 3 {
		return p.StoreObject__SWIG_2(a[0].(Storable), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.StoreObject__SWIG_1(a[0].(Storable), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.StoreObject__SWIG_0(a[0].(Storable), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_QueryObject__SWIG_0(SwigcptrStorage, OTDBStoredObjectType, string, string, string, string) SwigcptrStorable

func (arg1 SwigcptrStorage) QueryObject__SWIG_0(arg2 OTDBStoredObjectType, arg3 string, arg4 string, arg5 string, arg6 string) Storable {
	return _swig_wrap_Storage_QueryObject__SWIG_0(arg1, arg2, arg3, arg4, arg5, arg6)
}

func _swig_wrap_Storage_QueryObject__SWIG_1(SwigcptrStorage, OTDBStoredObjectType, string, string, string) SwigcptrStorable

func (arg1 SwigcptrStorage) QueryObject__SWIG_1(arg2 OTDBStoredObjectType, arg3 string, arg4 string, arg5 string) Storable {
	return _swig_wrap_Storage_QueryObject__SWIG_1(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_Storage_QueryObject__SWIG_2(SwigcptrStorage, OTDBStoredObjectType, string, string) SwigcptrStorable

func (arg1 SwigcptrStorage) QueryObject__SWIG_2(arg2 OTDBStoredObjectType, arg3 string, arg4 string) Storable {
	return _swig_wrap_Storage_QueryObject__SWIG_2(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Storage_QueryObject__SWIG_3(SwigcptrStorage, OTDBStoredObjectType, string) SwigcptrStorable

func (arg1 SwigcptrStorage) QueryObject__SWIG_3(arg2 OTDBStoredObjectType, arg3 string) Storable {
	return _swig_wrap_Storage_QueryObject__SWIG_3(arg1, arg2, arg3)
}

func (p SwigcptrStorage) QueryObject(a ...interface{}) Storable {
	argc := len(a)
	if argc == 2 {
		return p.QueryObject__SWIG_3(a[0].(OTDBStoredObjectType), a[1].(string))
	}
	if argc == 3 {
		return p.QueryObject__SWIG_2(a[0].(OTDBStoredObjectType), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.QueryObject__SWIG_1(a[0].(OTDBStoredObjectType), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.QueryObject__SWIG_0(a[0].(OTDBStoredObjectType), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_EncodeObject(SwigcptrStorage, uintptr) string

func (arg1 SwigcptrStorage) EncodeObject(arg2 Storable) string {
	return _swig_wrap_Storage_EncodeObject(arg1, arg2.Swigcptr())
}

func _swig_wrap_Storage_DecodeObject(SwigcptrStorage, OTDBStoredObjectType, string) SwigcptrStorable

func (arg1 SwigcptrStorage) DecodeObject(arg2 OTDBStoredObjectType, arg3 string) Storable {
	return _swig_wrap_Storage_DecodeObject(arg1, arg2, arg3)
}

func _swig_wrap_Storage_EraseValueByKey__SWIG_0(SwigcptrStorage, string, string, string, string) bool

func (arg1 SwigcptrStorage) EraseValueByKey__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string) bool {
	return _swig_wrap_Storage_EraseValueByKey__SWIG_0(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_Storage_EraseValueByKey__SWIG_1(SwigcptrStorage, string, string, string) bool

func (arg1 SwigcptrStorage) EraseValueByKey__SWIG_1(arg2 string, arg3 string, arg4 string) bool {
	return _swig_wrap_Storage_EraseValueByKey__SWIG_1(arg1, arg2, arg3, arg4)
}

func _swig_wrap_Storage_EraseValueByKey__SWIG_2(SwigcptrStorage, string, string) bool

func (arg1 SwigcptrStorage) EraseValueByKey__SWIG_2(arg2 string, arg3 string) bool {
	return _swig_wrap_Storage_EraseValueByKey__SWIG_2(arg1, arg2, arg3)
}

func _swig_wrap_Storage_EraseValueByKey__SWIG_3(SwigcptrStorage, string) bool

func (arg1 SwigcptrStorage) EraseValueByKey__SWIG_3(arg2 string) bool {
	return _swig_wrap_Storage_EraseValueByKey__SWIG_3(arg1, arg2)
}

func (p SwigcptrStorage) EraseValueByKey(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return p.EraseValueByKey__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.EraseValueByKey__SWIG_2(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.EraseValueByKey__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.EraseValueByKey__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_Storage_CreateObject(SwigcptrStorage, OTDBStoredObjectType) SwigcptrStorable

func (arg1 SwigcptrStorage) CreateObject(arg2 OTDBStoredObjectType) Storable {
	return _swig_wrap_Storage_CreateObject(arg1, arg2)
}

func _swig_wrap_Storage_Create(OTDBStorageType, OTDBPackType) SwigcptrStorage

func StorageCreate(arg1 OTDBStorageType, arg2 OTDBPackType) Storage {
	return _swig_wrap_Storage_Create(arg1, arg2)
}

func _swig_wrap_Storage_GetType(SwigcptrStorage) OTDBStorageType

func (arg1 SwigcptrStorage) GetType() OTDBStorageType {
	return _swig_wrap_Storage_GetType(arg1)
}

type Storage interface {
	Swigcptr() uintptr
	SwigIsStorage()
	GetPacker(a ...interface{}) OTPacker
	Exists(a ...interface{}) bool
	FormPathString(a ...interface{}) int64
	StoreString(a ...interface{}) bool
	QueryString(a ...interface{}) string
	StorePlainString(a ...interface{}) bool
	QueryPlainString(a ...interface{}) string
	StoreObject(a ...interface{}) bool
	QueryObject(a ...interface{}) Storable
	EncodeObject(arg2 Storable) string
	DecodeObject(arg2 OTDBStoredObjectType, arg3 string) Storable
	EraseValueByKey(a ...interface{}) bool
	CreateObject(arg2 OTDBStoredObjectType) Storable
	GetType() OTDBStorageType
}

func InitDefaultStorage(OTDBStorageType, OTDBPackType) bool
func _swig_wrap_GetDefaultStorage() SwigcptrStorage

func GetDefaultStorage() Storage {
	return _swig_wrap_GetDefaultStorage()
}

func _swig_wrap_CreateStorageContext__SWIG_0(OTDBStorageType, OTDBPackType) SwigcptrStorage

func CreateStorageContext__SWIG_0(arg1 OTDBStorageType, arg2 OTDBPackType) Storage {
	return _swig_wrap_CreateStorageContext__SWIG_0(arg1, arg2)
}

func _swig_wrap_CreateStorageContext__SWIG_1(OTDBStorageType) SwigcptrStorage

func CreateStorageContext__SWIG_1(arg1 OTDBStorageType) Storage {
	return _swig_wrap_CreateStorageContext__SWIG_1(arg1)
}

func CreateStorageContext(a ...interface{}) Storage {
	argc := len(a)
	if argc == 1 {
		return CreateStorageContext__SWIG_1(a[0].(OTDBStorageType))
	}
	if argc == 2 {
		return CreateStorageContext__SWIG_0(a[0].(OTDBStorageType), a[1].(OTDBPackType))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_CreateObject(OTDBStoredObjectType) SwigcptrStorable

func CreateObject(arg1 OTDBStoredObjectType) Storable {
	return _swig_wrap_CreateObject(arg1)
}

func CheckStringsExistInOrder__SWIG_0(*string, *string, *string, *string, string) bool
func CheckStringsExistInOrder__SWIG_1(*string, *string, *string, *string) bool
func CheckStringsExistInOrder(a ...interface{}) bool {
	argc := len(a)
	if argc == 4 {
		return CheckStringsExistInOrder__SWIG_1(a[0].(*string), a[1].(*string), a[2].(*string), a[3].(*string))
	}
	if argc == 5 {
		return CheckStringsExistInOrder__SWIG_0(a[0].(*string), a[1].(*string), a[2].(*string), a[3].(*string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func Exists__SWIG_0(string, string, string, string) bool
func Exists__SWIG_1(string, string, string) bool
func Exists__SWIG_2(string, string) bool
func Exists__SWIG_3(string) bool
func Exists(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return Exists__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return Exists__SWIG_2(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return Exists__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return Exists__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func FormPathString__SWIG_0(*string, string, string, string, string) int64
func FormPathString__SWIG_1(*string, string, string, string) int64
func FormPathString__SWIG_2(*string, string, string) int64
func FormPathString__SWIG_3(*string, string) int64
func FormPathString(a ...interface{}) int64 {
	argc := len(a)
	if argc == 2 {
		return FormPathString__SWIG_3(a[0].(*string), a[1].(string))
	}
	if argc == 3 {
		return FormPathString__SWIG_2(a[0].(*string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return FormPathString__SWIG_1(a[0].(*string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return FormPathString__SWIG_0(a[0].(*string), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func StoreString__SWIG_0(string, string, string, string, string) bool
func StoreString__SWIG_1(string, string, string, string) bool
func StoreString__SWIG_2(string, string, string) bool
func StoreString__SWIG_3(string, string) bool
func StoreString(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return StoreString__SWIG_3(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return StoreString__SWIG_2(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return StoreString__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return StoreString__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func QueryString__SWIG_0(string, string, string, string) string
func QueryString__SWIG_1(string, string, string) string
func QueryString__SWIG_2(string, string) string
func QueryString__SWIG_3(string) string
func QueryString(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return QueryString__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return QueryString__SWIG_2(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return QueryString__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return QueryString__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func StorePlainString__SWIG_0(string, string, string, string, string) bool
func StorePlainString__SWIG_1(string, string, string, string) bool
func StorePlainString__SWIG_2(string, string, string) bool
func StorePlainString__SWIG_3(string, string) bool
func StorePlainString(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return StorePlainString__SWIG_3(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return StorePlainString__SWIG_2(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return StorePlainString__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return StorePlainString__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func QueryPlainString__SWIG_0(string, string, string, string) string
func QueryPlainString__SWIG_1(string, string, string) string
func QueryPlainString__SWIG_2(string, string) string
func QueryPlainString__SWIG_3(string) string
func QueryPlainString(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return QueryPlainString__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return QueryPlainString__SWIG_2(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return QueryPlainString__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return QueryPlainString__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_StoreObject__SWIG_0(uintptr, string, string, string, string) bool

func StoreObject__SWIG_0(arg1 Storable, arg2 string, arg3 string, arg4 string, arg5 string) bool {
	return _swig_wrap_StoreObject__SWIG_0(arg1.Swigcptr(), arg2, arg3, arg4, arg5)
}

func _swig_wrap_StoreObject__SWIG_1(uintptr, string, string, string) bool

func StoreObject__SWIG_1(arg1 Storable, arg2 string, arg3 string, arg4 string) bool {
	return _swig_wrap_StoreObject__SWIG_1(arg1.Swigcptr(), arg2, arg3, arg4)
}

func _swig_wrap_StoreObject__SWIG_2(uintptr, string, string) bool

func StoreObject__SWIG_2(arg1 Storable, arg2 string, arg3 string) bool {
	return _swig_wrap_StoreObject__SWIG_2(arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_StoreObject__SWIG_3(uintptr, string) bool

func StoreObject__SWIG_3(arg1 Storable, arg2 string) bool {
	return _swig_wrap_StoreObject__SWIG_3(arg1.Swigcptr(), arg2)
}

func StoreObject(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return StoreObject__SWIG_3(a[0].(Storable), a[1].(string))
	}
	if argc == 3 {
		return StoreObject__SWIG_2(a[0].(Storable), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return StoreObject__SWIG_1(a[0].(Storable), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return StoreObject__SWIG_0(a[0].(Storable), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_QueryObject__SWIG_0(OTDBStoredObjectType, string, string, string, string) SwigcptrStorable

func QueryObject__SWIG_0(arg1 OTDBStoredObjectType, arg2 string, arg3 string, arg4 string, arg5 string) Storable {
	return _swig_wrap_QueryObject__SWIG_0(arg1, arg2, arg3, arg4, arg5)
}

func _swig_wrap_QueryObject__SWIG_1(OTDBStoredObjectType, string, string, string) SwigcptrStorable

func QueryObject__SWIG_1(arg1 OTDBStoredObjectType, arg2 string, arg3 string, arg4 string) Storable {
	return _swig_wrap_QueryObject__SWIG_1(arg1, arg2, arg3, arg4)
}

func _swig_wrap_QueryObject__SWIG_2(OTDBStoredObjectType, string, string) SwigcptrStorable

func QueryObject__SWIG_2(arg1 OTDBStoredObjectType, arg2 string, arg3 string) Storable {
	return _swig_wrap_QueryObject__SWIG_2(arg1, arg2, arg3)
}

func _swig_wrap_QueryObject__SWIG_3(OTDBStoredObjectType, string) SwigcptrStorable

func QueryObject__SWIG_3(arg1 OTDBStoredObjectType, arg2 string) Storable {
	return _swig_wrap_QueryObject__SWIG_3(arg1, arg2)
}

func QueryObject(a ...interface{}) Storable {
	argc := len(a)
	if argc == 2 {
		return QueryObject__SWIG_3(a[0].(OTDBStoredObjectType), a[1].(string))
	}
	if argc == 3 {
		return QueryObject__SWIG_2(a[0].(OTDBStoredObjectType), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return QueryObject__SWIG_1(a[0].(OTDBStoredObjectType), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return QueryObject__SWIG_0(a[0].(OTDBStoredObjectType), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	panic("No match for overloaded function call")
}

func _swig_wrap_EncodeObject(uintptr) string

func EncodeObject(arg1 Storable) string {
	return _swig_wrap_EncodeObject(arg1.Swigcptr())
}

func _swig_wrap_DecodeObject(OTDBStoredObjectType, string) SwigcptrStorable

func DecodeObject(arg1 OTDBStoredObjectType, arg2 string) Storable {
	return _swig_wrap_DecodeObject(arg1, arg2)
}

func EraseValueByKey__SWIG_0(string, string, string, string) bool
func EraseValueByKey__SWIG_1(string, string, string) bool
func EraseValueByKey__SWIG_2(string, string) bool
func EraseValueByKey__SWIG_3(string) bool
func EraseValueByKey(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return EraseValueByKey__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return EraseValueByKey__SWIG_2(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return EraseValueByKey__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return EraseValueByKey__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	panic("No match for overloaded function call")
}

type SwigcptrOTDBString uintptr

func (p SwigcptrOTDBString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOTDBString) SwigIsOTDBString() {
}

func _swig_wrap_delete_OTDBString(uintptr)

func DeleteOTDBString(arg1 OTDBString) {
	_swig_wrap_delete_OTDBString(arg1.Swigcptr())
}

func _swig_wrap_OTDBString_m_string_set(SwigcptrOTDBString, string)

func (arg1 SwigcptrOTDBString) SetM_string(arg2 string) {
	_swig_wrap_OTDBString_m_string_set(arg1, arg2)
}

func _swig_wrap_OTDBString_m_string_get(SwigcptrOTDBString) string

func (arg1 SwigcptrOTDBString) GetM_string() string {
	return _swig_wrap_OTDBString_m_string_get(arg1)
}

func _swig_wrap_OTDBString_ot_dynamic_cast(uintptr) SwigcptrOTDBString

func OTDBStringOt_dynamic_cast(arg1 Storable) OTDBString {
	return _swig_wrap_OTDBString_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_OTDBString_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func OTDBStringCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_OTDBString_Create(arg1, arg2)
}

func (p SwigcptrOTDBString) SwigIsStorable() {
}

func (p SwigcptrOTDBString) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type OTDBString interface {
	Swigcptr() uintptr
	SwigIsOTDBString()
	SetM_string(arg2 string)
	GetM_string() string
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrBlob uintptr

func (p SwigcptrBlob) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBlob) SwigIsBlob() {
}

func _swig_wrap_delete_Blob(uintptr)

func DeleteBlob(arg1 Blob) {
	_swig_wrap_delete_Blob(arg1.Swigcptr())
}

func _swig_wrap_Blob_m_memBuffer_set(SwigcptrBlob, uintptr)

func (arg1 SwigcptrBlob) SetM_memBuffer(arg2 VectorUnsignedChar) {
	_swig_wrap_Blob_m_memBuffer_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_Blob_m_memBuffer_get(SwigcptrBlob) SwigcptrVectorUnsignedChar

func (arg1 SwigcptrBlob) GetM_memBuffer() VectorUnsignedChar {
	return _swig_wrap_Blob_m_memBuffer_get(arg1)
}

func _swig_wrap_Blob_ot_dynamic_cast(uintptr) SwigcptrBlob

func BlobOt_dynamic_cast(arg1 Storable) Blob {
	return _swig_wrap_Blob_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_Blob_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func BlobCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_Blob_Create(arg1, arg2)
}

func (p SwigcptrBlob) SwigIsStorable() {
}

func (p SwigcptrBlob) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type Blob interface {
	Swigcptr() uintptr
	SwigIsBlob()
	SetM_memBuffer(arg2 VectorUnsignedChar)
	GetM_memBuffer() VectorUnsignedChar
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrStringMap uintptr

func (p SwigcptrStringMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringMap) SwigIsStringMap() {
}

func _swig_wrap_delete_StringMap(uintptr)

func DeleteStringMap(arg1 StringMap) {
	_swig_wrap_delete_StringMap(arg1.Swigcptr())
}

func _swig_wrap_StringMap_the_map_set(SwigcptrStringMap, uintptr)

func (arg1 SwigcptrStringMap) SetThe_map(arg2 MapStringString) {
	_swig_wrap_StringMap_the_map_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_StringMap_the_map_get(SwigcptrStringMap) SwigcptrMapStringString

func (arg1 SwigcptrStringMap) GetThe_map() MapStringString {
	return _swig_wrap_StringMap_the_map_get(arg1)
}

func _swig_wrap_StringMap_SetValue(SwigcptrStringMap, string, string)

func (arg1 SwigcptrStringMap) SetValue(arg2 string, arg3 string) {
	_swig_wrap_StringMap_SetValue(arg1, arg2, arg3)
}

func _swig_wrap_StringMap_GetValue(SwigcptrStringMap, string) string

func (arg1 SwigcptrStringMap) GetValue(arg2 string) string {
	return _swig_wrap_StringMap_GetValue(arg1, arg2)
}

func _swig_wrap_StringMap_ot_dynamic_cast(uintptr) SwigcptrStringMap

func StringMapOt_dynamic_cast(arg1 Storable) StringMap {
	return _swig_wrap_StringMap_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_StringMap_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func StringMapCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_StringMap_Create(arg1, arg2)
}

func (p SwigcptrStringMap) SwigIsStorable() {
}

func (p SwigcptrStringMap) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type StringMap interface {
	Swigcptr() uintptr
	SwigIsStringMap()
	SetThe_map(arg2 MapStringString)
	GetThe_map() MapStringString
	SetValue(arg2 string, arg3 string)
	GetValue(arg2 string) string
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrDisplayable uintptr

func (p SwigcptrDisplayable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDisplayable) SwigIsDisplayable() {
}

func _swig_wrap_delete_Displayable(uintptr)

func DeleteDisplayable(arg1 Displayable) {
	_swig_wrap_delete_Displayable(arg1.Swigcptr())
}

func _swig_wrap_Displayable_gui_label_set(SwigcptrDisplayable, string)

func (arg1 SwigcptrDisplayable) SetGui_label(arg2 string) {
	_swig_wrap_Displayable_gui_label_set(arg1, arg2)
}

func _swig_wrap_Displayable_gui_label_get(SwigcptrDisplayable) string

func (arg1 SwigcptrDisplayable) GetGui_label() string {
	return _swig_wrap_Displayable_gui_label_get(arg1)
}

func _swig_wrap_Displayable_ot_dynamic_cast(uintptr) SwigcptrDisplayable

func DisplayableOt_dynamic_cast(arg1 Storable) Displayable {
	return _swig_wrap_Displayable_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_Displayable_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func DisplayableCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_Displayable_Create(arg1, arg2)
}

func (p SwigcptrDisplayable) SwigIsStorable() {
}

func (p SwigcptrDisplayable) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type Displayable interface {
	Swigcptr() uintptr
	SwigIsDisplayable()
	SetGui_label(arg2 string)
	GetGui_label() string
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrMarketData uintptr

func (p SwigcptrMarketData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMarketData) SwigIsMarketData() {
}

func _swig_wrap_delete_MarketData(uintptr)

func DeleteMarketData(arg1 MarketData) {
	_swig_wrap_delete_MarketData(arg1.Swigcptr())
}

func _swig_wrap_MarketData_gui_label_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetGui_label(arg2 string) {
	_swig_wrap_MarketData_gui_label_set(arg1, arg2)
}

func _swig_wrap_MarketData_gui_label_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetGui_label() string {
	return _swig_wrap_MarketData_gui_label_get(arg1)
}

func _swig_wrap_MarketData_server_id_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetServer_id(arg2 string) {
	_swig_wrap_MarketData_server_id_set(arg1, arg2)
}

func _swig_wrap_MarketData_server_id_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetServer_id() string {
	return _swig_wrap_MarketData_server_id_get(arg1)
}

func _swig_wrap_MarketData_market_id_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetMarket_id(arg2 string) {
	_swig_wrap_MarketData_market_id_set(arg1, arg2)
}

func _swig_wrap_MarketData_market_id_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetMarket_id() string {
	return _swig_wrap_MarketData_market_id_get(arg1)
}

func _swig_wrap_MarketData_asset_type_id_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetAsset_type_id(arg2 string) {
	_swig_wrap_MarketData_asset_type_id_set(arg1, arg2)
}

func _swig_wrap_MarketData_asset_type_id_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetAsset_type_id() string {
	return _swig_wrap_MarketData_asset_type_id_get(arg1)
}

func _swig_wrap_MarketData_currency_type_id_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetCurrency_type_id(arg2 string) {
	_swig_wrap_MarketData_currency_type_id_set(arg1, arg2)
}

func _swig_wrap_MarketData_currency_type_id_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetCurrency_type_id() string {
	return _swig_wrap_MarketData_currency_type_id_get(arg1)
}

func _swig_wrap_MarketData_scale_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetScale(arg2 string) {
	_swig_wrap_MarketData_scale_set(arg1, arg2)
}

func _swig_wrap_MarketData_scale_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetScale() string {
	return _swig_wrap_MarketData_scale_get(arg1)
}

func _swig_wrap_MarketData_total_assets_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetTotal_assets(arg2 string) {
	_swig_wrap_MarketData_total_assets_set(arg1, arg2)
}

func _swig_wrap_MarketData_total_assets_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetTotal_assets() string {
	return _swig_wrap_MarketData_total_assets_get(arg1)
}

func _swig_wrap_MarketData_number_bids_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetNumber_bids(arg2 string) {
	_swig_wrap_MarketData_number_bids_set(arg1, arg2)
}

func _swig_wrap_MarketData_number_bids_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetNumber_bids() string {
	return _swig_wrap_MarketData_number_bids_get(arg1)
}

func _swig_wrap_MarketData_number_asks_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetNumber_asks(arg2 string) {
	_swig_wrap_MarketData_number_asks_set(arg1, arg2)
}

func _swig_wrap_MarketData_number_asks_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetNumber_asks() string {
	return _swig_wrap_MarketData_number_asks_get(arg1)
}

func _swig_wrap_MarketData_last_sale_price_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetLast_sale_price(arg2 string) {
	_swig_wrap_MarketData_last_sale_price_set(arg1, arg2)
}

func _swig_wrap_MarketData_last_sale_price_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetLast_sale_price() string {
	return _swig_wrap_MarketData_last_sale_price_get(arg1)
}

func _swig_wrap_MarketData_current_bid_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetCurrent_bid(arg2 string) {
	_swig_wrap_MarketData_current_bid_set(arg1, arg2)
}

func _swig_wrap_MarketData_current_bid_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetCurrent_bid() string {
	return _swig_wrap_MarketData_current_bid_get(arg1)
}

func _swig_wrap_MarketData_current_ask_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetCurrent_ask(arg2 string) {
	_swig_wrap_MarketData_current_ask_set(arg1, arg2)
}

func _swig_wrap_MarketData_current_ask_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetCurrent_ask() string {
	return _swig_wrap_MarketData_current_ask_get(arg1)
}

func _swig_wrap_MarketData_volume_trades_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetVolume_trades(arg2 string) {
	_swig_wrap_MarketData_volume_trades_set(arg1, arg2)
}

func _swig_wrap_MarketData_volume_trades_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetVolume_trades() string {
	return _swig_wrap_MarketData_volume_trades_get(arg1)
}

func _swig_wrap_MarketData_volume_assets_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetVolume_assets(arg2 string) {
	_swig_wrap_MarketData_volume_assets_set(arg1, arg2)
}

func _swig_wrap_MarketData_volume_assets_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetVolume_assets() string {
	return _swig_wrap_MarketData_volume_assets_get(arg1)
}

func _swig_wrap_MarketData_volume_currency_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetVolume_currency(arg2 string) {
	_swig_wrap_MarketData_volume_currency_set(arg1, arg2)
}

func _swig_wrap_MarketData_volume_currency_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetVolume_currency() string {
	return _swig_wrap_MarketData_volume_currency_get(arg1)
}

func _swig_wrap_MarketData_recent_highest_bid_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetRecent_highest_bid(arg2 string) {
	_swig_wrap_MarketData_recent_highest_bid_set(arg1, arg2)
}

func _swig_wrap_MarketData_recent_highest_bid_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetRecent_highest_bid() string {
	return _swig_wrap_MarketData_recent_highest_bid_get(arg1)
}

func _swig_wrap_MarketData_recent_lowest_ask_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetRecent_lowest_ask(arg2 string) {
	_swig_wrap_MarketData_recent_lowest_ask_set(arg1, arg2)
}

func _swig_wrap_MarketData_recent_lowest_ask_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetRecent_lowest_ask() string {
	return _swig_wrap_MarketData_recent_lowest_ask_get(arg1)
}

func _swig_wrap_MarketData_last_sale_date_set(SwigcptrMarketData, string)

func (arg1 SwigcptrMarketData) SetLast_sale_date(arg2 string) {
	_swig_wrap_MarketData_last_sale_date_set(arg1, arg2)
}

func _swig_wrap_MarketData_last_sale_date_get(SwigcptrMarketData) string

func (arg1 SwigcptrMarketData) GetLast_sale_date() string {
	return _swig_wrap_MarketData_last_sale_date_get(arg1)
}

func _swig_wrap_MarketData_ot_dynamic_cast(uintptr) SwigcptrMarketData

func MarketDataOt_dynamic_cast(arg1 Storable) MarketData {
	return _swig_wrap_MarketData_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_MarketData_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func MarketDataCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_MarketData_Create(arg1, arg2)
}

func (p SwigcptrMarketData) SwigIsDisplayable() {
}

func (p SwigcptrMarketData) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrMarketData) SwigIsStorable() {
}

func (p SwigcptrMarketData) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type MarketData interface {
	Swigcptr() uintptr
	SwigIsMarketData()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetMarket_id(arg2 string)
	GetMarket_id() string
	SetAsset_type_id(arg2 string)
	GetAsset_type_id() string
	SetCurrency_type_id(arg2 string)
	GetCurrency_type_id() string
	SetScale(arg2 string)
	GetScale() string
	SetTotal_assets(arg2 string)
	GetTotal_assets() string
	SetNumber_bids(arg2 string)
	GetNumber_bids() string
	SetNumber_asks(arg2 string)
	GetNumber_asks() string
	SetLast_sale_price(arg2 string)
	GetLast_sale_price() string
	SetCurrent_bid(arg2 string)
	GetCurrent_bid() string
	SetCurrent_ask(arg2 string)
	GetCurrent_ask() string
	SetVolume_trades(arg2 string)
	GetVolume_trades() string
	SetVolume_assets(arg2 string)
	GetVolume_assets() string
	SetVolume_currency(arg2 string)
	GetVolume_currency() string
	SetRecent_highest_bid(arg2 string)
	GetRecent_highest_bid() string
	SetRecent_lowest_ask(arg2 string)
	GetRecent_lowest_ask() string
	SetLast_sale_date(arg2 string)
	GetLast_sale_date() string
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrMarketList uintptr

func (p SwigcptrMarketList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMarketList) SwigIsMarketList() {
}

func _swig_wrap_delete_MarketList(uintptr)

func DeleteMarketList(arg1 MarketList) {
	_swig_wrap_delete_MarketList(arg1.Swigcptr())
}

func _swig_wrap_MarketList_GetMarketDataCount(SwigcptrMarketList) int64

func (arg1 SwigcptrMarketList) GetMarketDataCount() int64 {
	return _swig_wrap_MarketList_GetMarketDataCount(arg1)
}

func _swig_wrap_MarketList_GetMarketData(SwigcptrMarketList, int64) SwigcptrMarketData

func (arg1 SwigcptrMarketList) GetMarketData(arg2 int64) MarketData {
	return _swig_wrap_MarketList_GetMarketData(arg1, arg2)
}

func _swig_wrap_MarketList_RemoveMarketData(SwigcptrMarketList, int64) bool

func (arg1 SwigcptrMarketList) RemoveMarketData(arg2 int64) bool {
	return _swig_wrap_MarketList_RemoveMarketData(arg1, arg2)
}

func _swig_wrap_MarketList_AddMarketData(SwigcptrMarketList, uintptr) bool

func (arg1 SwigcptrMarketList) AddMarketData(arg2 MarketData) bool {
	return _swig_wrap_MarketList_AddMarketData(arg1, arg2.Swigcptr())
}

func _swig_wrap_MarketList_ot_dynamic_cast(uintptr) SwigcptrMarketList

func MarketListOt_dynamic_cast(arg1 Storable) MarketList {
	return _swig_wrap_MarketList_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_MarketList_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func MarketListCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_MarketList_Create(arg1, arg2)
}

func (p SwigcptrMarketList) SwigIsStorable() {
}

func (p SwigcptrMarketList) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type MarketList interface {
	Swigcptr() uintptr
	SwigIsMarketList()
	GetMarketDataCount() int64
	GetMarketData(arg2 int64) MarketData
	RemoveMarketData(arg2 int64) bool
	AddMarketData(arg2 MarketData) bool
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrOfferDataMarket uintptr

func (p SwigcptrOfferDataMarket) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOfferDataMarket) SwigIsOfferDataMarket() {
}

func _swig_wrap_delete_OfferDataMarket(uintptr)

func DeleteOfferDataMarket(arg1 OfferDataMarket) {
	_swig_wrap_delete_OfferDataMarket(arg1.Swigcptr())
}

func _swig_wrap_OfferDataMarket_gui_label_set(SwigcptrOfferDataMarket, string)

func (arg1 SwigcptrOfferDataMarket) SetGui_label(arg2 string) {
	_swig_wrap_OfferDataMarket_gui_label_set(arg1, arg2)
}

func _swig_wrap_OfferDataMarket_gui_label_get(SwigcptrOfferDataMarket) string

func (arg1 SwigcptrOfferDataMarket) GetGui_label() string {
	return _swig_wrap_OfferDataMarket_gui_label_get(arg1)
}

func _swig_wrap_OfferDataMarket_transaction_id_set(SwigcptrOfferDataMarket, string)

func (arg1 SwigcptrOfferDataMarket) SetTransaction_id(arg2 string) {
	_swig_wrap_OfferDataMarket_transaction_id_set(arg1, arg2)
}

func _swig_wrap_OfferDataMarket_transaction_id_get(SwigcptrOfferDataMarket) string

func (arg1 SwigcptrOfferDataMarket) GetTransaction_id() string {
	return _swig_wrap_OfferDataMarket_transaction_id_get(arg1)
}

func _swig_wrap_OfferDataMarket_price_per_scale_set(SwigcptrOfferDataMarket, string)

func (arg1 SwigcptrOfferDataMarket) SetPrice_per_scale(arg2 string) {
	_swig_wrap_OfferDataMarket_price_per_scale_set(arg1, arg2)
}

func _swig_wrap_OfferDataMarket_price_per_scale_get(SwigcptrOfferDataMarket) string

func (arg1 SwigcptrOfferDataMarket) GetPrice_per_scale() string {
	return _swig_wrap_OfferDataMarket_price_per_scale_get(arg1)
}

func _swig_wrap_OfferDataMarket_available_assets_set(SwigcptrOfferDataMarket, string)

func (arg1 SwigcptrOfferDataMarket) SetAvailable_assets(arg2 string) {
	_swig_wrap_OfferDataMarket_available_assets_set(arg1, arg2)
}

func _swig_wrap_OfferDataMarket_available_assets_get(SwigcptrOfferDataMarket) string

func (arg1 SwigcptrOfferDataMarket) GetAvailable_assets() string {
	return _swig_wrap_OfferDataMarket_available_assets_get(arg1)
}

func _swig_wrap_OfferDataMarket_minimum_increment_set(SwigcptrOfferDataMarket, string)

func (arg1 SwigcptrOfferDataMarket) SetMinimum_increment(arg2 string) {
	_swig_wrap_OfferDataMarket_minimum_increment_set(arg1, arg2)
}

func _swig_wrap_OfferDataMarket_minimum_increment_get(SwigcptrOfferDataMarket) string

func (arg1 SwigcptrOfferDataMarket) GetMinimum_increment() string {
	return _swig_wrap_OfferDataMarket_minimum_increment_get(arg1)
}

func _swig_wrap_OfferDataMarket_date_set(SwigcptrOfferDataMarket, string)

func (arg1 SwigcptrOfferDataMarket) SetDate(arg2 string) {
	_swig_wrap_OfferDataMarket_date_set(arg1, arg2)
}

func _swig_wrap_OfferDataMarket_date_get(SwigcptrOfferDataMarket) string

func (arg1 SwigcptrOfferDataMarket) GetDate() string {
	return _swig_wrap_OfferDataMarket_date_get(arg1)
}

func _swig_wrap_OfferDataMarket_ot_dynamic_cast(uintptr) SwigcptrOfferDataMarket

func OfferDataMarketOt_dynamic_cast(arg1 Storable) OfferDataMarket {
	return _swig_wrap_OfferDataMarket_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_OfferDataMarket_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func OfferDataMarketCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_OfferDataMarket_Create(arg1, arg2)
}

func (p SwigcptrOfferDataMarket) SwigIsDisplayable() {
}

func (p SwigcptrOfferDataMarket) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrOfferDataMarket) SwigIsStorable() {
}

func (p SwigcptrOfferDataMarket) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type OfferDataMarket interface {
	Swigcptr() uintptr
	SwigIsOfferDataMarket()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetTransaction_id(arg2 string)
	GetTransaction_id() string
	SetPrice_per_scale(arg2 string)
	GetPrice_per_scale() string
	SetAvailable_assets(arg2 string)
	GetAvailable_assets() string
	SetMinimum_increment(arg2 string)
	GetMinimum_increment() string
	SetDate(arg2 string)
	GetDate() string
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrBidData uintptr

func (p SwigcptrBidData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBidData) SwigIsBidData() {
}

func _swig_wrap_delete_BidData(uintptr)

func DeleteBidData(arg1 BidData) {
	_swig_wrap_delete_BidData(arg1.Swigcptr())
}

func _swig_wrap_BidData_gui_label_set(SwigcptrBidData, string)

func (arg1 SwigcptrBidData) SetGui_label(arg2 string) {
	_swig_wrap_BidData_gui_label_set(arg1, arg2)
}

func _swig_wrap_BidData_gui_label_get(SwigcptrBidData) string

func (arg1 SwigcptrBidData) GetGui_label() string {
	return _swig_wrap_BidData_gui_label_get(arg1)
}

func _swig_wrap_BidData_transaction_id_set(SwigcptrBidData, string)

func (arg1 SwigcptrBidData) SetTransaction_id(arg2 string) {
	_swig_wrap_BidData_transaction_id_set(arg1, arg2)
}

func _swig_wrap_BidData_transaction_id_get(SwigcptrBidData) string

func (arg1 SwigcptrBidData) GetTransaction_id() string {
	return _swig_wrap_BidData_transaction_id_get(arg1)
}

func _swig_wrap_BidData_price_per_scale_set(SwigcptrBidData, string)

func (arg1 SwigcptrBidData) SetPrice_per_scale(arg2 string) {
	_swig_wrap_BidData_price_per_scale_set(arg1, arg2)
}

func _swig_wrap_BidData_price_per_scale_get(SwigcptrBidData) string

func (arg1 SwigcptrBidData) GetPrice_per_scale() string {
	return _swig_wrap_BidData_price_per_scale_get(arg1)
}

func _swig_wrap_BidData_available_assets_set(SwigcptrBidData, string)

func (arg1 SwigcptrBidData) SetAvailable_assets(arg2 string) {
	_swig_wrap_BidData_available_assets_set(arg1, arg2)
}

func _swig_wrap_BidData_available_assets_get(SwigcptrBidData) string

func (arg1 SwigcptrBidData) GetAvailable_assets() string {
	return _swig_wrap_BidData_available_assets_get(arg1)
}

func _swig_wrap_BidData_minimum_increment_set(SwigcptrBidData, string)

func (arg1 SwigcptrBidData) SetMinimum_increment(arg2 string) {
	_swig_wrap_BidData_minimum_increment_set(arg1, arg2)
}

func _swig_wrap_BidData_minimum_increment_get(SwigcptrBidData) string

func (arg1 SwigcptrBidData) GetMinimum_increment() string {
	return _swig_wrap_BidData_minimum_increment_get(arg1)
}

func _swig_wrap_BidData_date_set(SwigcptrBidData, string)

func (arg1 SwigcptrBidData) SetDate(arg2 string) {
	_swig_wrap_BidData_date_set(arg1, arg2)
}

func _swig_wrap_BidData_date_get(SwigcptrBidData) string

func (arg1 SwigcptrBidData) GetDate() string {
	return _swig_wrap_BidData_date_get(arg1)
}

func _swig_wrap_BidData_ot_dynamic_cast(uintptr) SwigcptrBidData

func BidDataOt_dynamic_cast(arg1 Storable) BidData {
	return _swig_wrap_BidData_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_BidData_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func BidDataCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_BidData_Create(arg1, arg2)
}

func (p SwigcptrBidData) SwigIsOfferDataMarket() {
}

func (p SwigcptrBidData) SwigGetOfferDataMarket() OfferDataMarket {
	return SwigcptrOfferDataMarket(p.Swigcptr())
}

func (p SwigcptrBidData) SwigIsDisplayable() {
}

func (p SwigcptrBidData) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrBidData) SwigIsStorable() {
}

func (p SwigcptrBidData) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type BidData interface {
	Swigcptr() uintptr
	SwigIsBidData()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetTransaction_id(arg2 string)
	GetTransaction_id() string
	SetPrice_per_scale(arg2 string)
	GetPrice_per_scale() string
	SetAvailable_assets(arg2 string)
	GetAvailable_assets() string
	SetMinimum_increment(arg2 string)
	GetMinimum_increment() string
	SetDate(arg2 string)
	GetDate() string
	SwigIsOfferDataMarket()
	SwigGetOfferDataMarket() OfferDataMarket
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrAskData uintptr

func (p SwigcptrAskData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAskData) SwigIsAskData() {
}

func _swig_wrap_delete_AskData(uintptr)

func DeleteAskData(arg1 AskData) {
	_swig_wrap_delete_AskData(arg1.Swigcptr())
}

func _swig_wrap_AskData_gui_label_set(SwigcptrAskData, string)

func (arg1 SwigcptrAskData) SetGui_label(arg2 string) {
	_swig_wrap_AskData_gui_label_set(arg1, arg2)
}

func _swig_wrap_AskData_gui_label_get(SwigcptrAskData) string

func (arg1 SwigcptrAskData) GetGui_label() string {
	return _swig_wrap_AskData_gui_label_get(arg1)
}

func _swig_wrap_AskData_transaction_id_set(SwigcptrAskData, string)

func (arg1 SwigcptrAskData) SetTransaction_id(arg2 string) {
	_swig_wrap_AskData_transaction_id_set(arg1, arg2)
}

func _swig_wrap_AskData_transaction_id_get(SwigcptrAskData) string

func (arg1 SwigcptrAskData) GetTransaction_id() string {
	return _swig_wrap_AskData_transaction_id_get(arg1)
}

func _swig_wrap_AskData_price_per_scale_set(SwigcptrAskData, string)

func (arg1 SwigcptrAskData) SetPrice_per_scale(arg2 string) {
	_swig_wrap_AskData_price_per_scale_set(arg1, arg2)
}

func _swig_wrap_AskData_price_per_scale_get(SwigcptrAskData) string

func (arg1 SwigcptrAskData) GetPrice_per_scale() string {
	return _swig_wrap_AskData_price_per_scale_get(arg1)
}

func _swig_wrap_AskData_available_assets_set(SwigcptrAskData, string)

func (arg1 SwigcptrAskData) SetAvailable_assets(arg2 string) {
	_swig_wrap_AskData_available_assets_set(arg1, arg2)
}

func _swig_wrap_AskData_available_assets_get(SwigcptrAskData) string

func (arg1 SwigcptrAskData) GetAvailable_assets() string {
	return _swig_wrap_AskData_available_assets_get(arg1)
}

func _swig_wrap_AskData_minimum_increment_set(SwigcptrAskData, string)

func (arg1 SwigcptrAskData) SetMinimum_increment(arg2 string) {
	_swig_wrap_AskData_minimum_increment_set(arg1, arg2)
}

func _swig_wrap_AskData_minimum_increment_get(SwigcptrAskData) string

func (arg1 SwigcptrAskData) GetMinimum_increment() string {
	return _swig_wrap_AskData_minimum_increment_get(arg1)
}

func _swig_wrap_AskData_date_set(SwigcptrAskData, string)

func (arg1 SwigcptrAskData) SetDate(arg2 string) {
	_swig_wrap_AskData_date_set(arg1, arg2)
}

func _swig_wrap_AskData_date_get(SwigcptrAskData) string

func (arg1 SwigcptrAskData) GetDate() string {
	return _swig_wrap_AskData_date_get(arg1)
}

func _swig_wrap_AskData_ot_dynamic_cast(uintptr) SwigcptrAskData

func AskDataOt_dynamic_cast(arg1 Storable) AskData {
	return _swig_wrap_AskData_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_AskData_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func AskDataCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_AskData_Create(arg1, arg2)
}

func (p SwigcptrAskData) SwigIsOfferDataMarket() {
}

func (p SwigcptrAskData) SwigGetOfferDataMarket() OfferDataMarket {
	return SwigcptrOfferDataMarket(p.Swigcptr())
}

func (p SwigcptrAskData) SwigIsDisplayable() {
}

func (p SwigcptrAskData) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrAskData) SwigIsStorable() {
}

func (p SwigcptrAskData) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type AskData interface {
	Swigcptr() uintptr
	SwigIsAskData()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetTransaction_id(arg2 string)
	GetTransaction_id() string
	SetPrice_per_scale(arg2 string)
	GetPrice_per_scale() string
	SetAvailable_assets(arg2 string)
	GetAvailable_assets() string
	SetMinimum_increment(arg2 string)
	GetMinimum_increment() string
	SetDate(arg2 string)
	GetDate() string
	SwigIsOfferDataMarket()
	SwigGetOfferDataMarket() OfferDataMarket
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrOfferListMarket uintptr

func (p SwigcptrOfferListMarket) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOfferListMarket) SwigIsOfferListMarket() {
}

func _swig_wrap_delete_OfferListMarket(uintptr)

func DeleteOfferListMarket(arg1 OfferListMarket) {
	_swig_wrap_delete_OfferListMarket(arg1.Swigcptr())
}

func _swig_wrap_OfferListMarket_GetBidDataCount(SwigcptrOfferListMarket) int64

func (arg1 SwigcptrOfferListMarket) GetBidDataCount() int64 {
	return _swig_wrap_OfferListMarket_GetBidDataCount(arg1)
}

func _swig_wrap_OfferListMarket_GetBidData(SwigcptrOfferListMarket, int64) SwigcptrBidData

func (arg1 SwigcptrOfferListMarket) GetBidData(arg2 int64) BidData {
	return _swig_wrap_OfferListMarket_GetBidData(arg1, arg2)
}

func _swig_wrap_OfferListMarket_RemoveBidData(SwigcptrOfferListMarket, int64) bool

func (arg1 SwigcptrOfferListMarket) RemoveBidData(arg2 int64) bool {
	return _swig_wrap_OfferListMarket_RemoveBidData(arg1, arg2)
}

func _swig_wrap_OfferListMarket_AddBidData(SwigcptrOfferListMarket, uintptr) bool

func (arg1 SwigcptrOfferListMarket) AddBidData(arg2 BidData) bool {
	return _swig_wrap_OfferListMarket_AddBidData(arg1, arg2.Swigcptr())
}

func _swig_wrap_OfferListMarket_GetAskDataCount(SwigcptrOfferListMarket) int64

func (arg1 SwigcptrOfferListMarket) GetAskDataCount() int64 {
	return _swig_wrap_OfferListMarket_GetAskDataCount(arg1)
}

func _swig_wrap_OfferListMarket_GetAskData(SwigcptrOfferListMarket, int64) SwigcptrAskData

func (arg1 SwigcptrOfferListMarket) GetAskData(arg2 int64) AskData {
	return _swig_wrap_OfferListMarket_GetAskData(arg1, arg2)
}

func _swig_wrap_OfferListMarket_RemoveAskData(SwigcptrOfferListMarket, int64) bool

func (arg1 SwigcptrOfferListMarket) RemoveAskData(arg2 int64) bool {
	return _swig_wrap_OfferListMarket_RemoveAskData(arg1, arg2)
}

func _swig_wrap_OfferListMarket_AddAskData(SwigcptrOfferListMarket, uintptr) bool

func (arg1 SwigcptrOfferListMarket) AddAskData(arg2 AskData) bool {
	return _swig_wrap_OfferListMarket_AddAskData(arg1, arg2.Swigcptr())
}

func _swig_wrap_OfferListMarket_ot_dynamic_cast(uintptr) SwigcptrOfferListMarket

func OfferListMarketOt_dynamic_cast(arg1 Storable) OfferListMarket {
	return _swig_wrap_OfferListMarket_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_OfferListMarket_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func OfferListMarketCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_OfferListMarket_Create(arg1, arg2)
}

func (p SwigcptrOfferListMarket) SwigIsStorable() {
}

func (p SwigcptrOfferListMarket) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type OfferListMarket interface {
	Swigcptr() uintptr
	SwigIsOfferListMarket()
	GetBidDataCount() int64
	GetBidData(arg2 int64) BidData
	RemoveBidData(arg2 int64) bool
	AddBidData(arg2 BidData) bool
	GetAskDataCount() int64
	GetAskData(arg2 int64) AskData
	RemoveAskData(arg2 int64) bool
	AddAskData(arg2 AskData) bool
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrTradeDataMarket uintptr

func (p SwigcptrTradeDataMarket) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTradeDataMarket) SwigIsTradeDataMarket() {
}

func _swig_wrap_delete_TradeDataMarket(uintptr)

func DeleteTradeDataMarket(arg1 TradeDataMarket) {
	_swig_wrap_delete_TradeDataMarket(arg1.Swigcptr())
}

func _swig_wrap_TradeDataMarket_gui_label_set(SwigcptrTradeDataMarket, string)

func (arg1 SwigcptrTradeDataMarket) SetGui_label(arg2 string) {
	_swig_wrap_TradeDataMarket_gui_label_set(arg1, arg2)
}

func _swig_wrap_TradeDataMarket_gui_label_get(SwigcptrTradeDataMarket) string

func (arg1 SwigcptrTradeDataMarket) GetGui_label() string {
	return _swig_wrap_TradeDataMarket_gui_label_get(arg1)
}

func _swig_wrap_TradeDataMarket_transaction_id_set(SwigcptrTradeDataMarket, string)

func (arg1 SwigcptrTradeDataMarket) SetTransaction_id(arg2 string) {
	_swig_wrap_TradeDataMarket_transaction_id_set(arg1, arg2)
}

func _swig_wrap_TradeDataMarket_transaction_id_get(SwigcptrTradeDataMarket) string

func (arg1 SwigcptrTradeDataMarket) GetTransaction_id() string {
	return _swig_wrap_TradeDataMarket_transaction_id_get(arg1)
}

func _swig_wrap_TradeDataMarket_date_set(SwigcptrTradeDataMarket, string)

func (arg1 SwigcptrTradeDataMarket) SetDate(arg2 string) {
	_swig_wrap_TradeDataMarket_date_set(arg1, arg2)
}

func _swig_wrap_TradeDataMarket_date_get(SwigcptrTradeDataMarket) string

func (arg1 SwigcptrTradeDataMarket) GetDate() string {
	return _swig_wrap_TradeDataMarket_date_get(arg1)
}

func _swig_wrap_TradeDataMarket_price_set(SwigcptrTradeDataMarket, string)

func (arg1 SwigcptrTradeDataMarket) SetPrice(arg2 string) {
	_swig_wrap_TradeDataMarket_price_set(arg1, arg2)
}

func _swig_wrap_TradeDataMarket_price_get(SwigcptrTradeDataMarket) string

func (arg1 SwigcptrTradeDataMarket) GetPrice() string {
	return _swig_wrap_TradeDataMarket_price_get(arg1)
}

func _swig_wrap_TradeDataMarket_amount_sold_set(SwigcptrTradeDataMarket, string)

func (arg1 SwigcptrTradeDataMarket) SetAmount_sold(arg2 string) {
	_swig_wrap_TradeDataMarket_amount_sold_set(arg1, arg2)
}

func _swig_wrap_TradeDataMarket_amount_sold_get(SwigcptrTradeDataMarket) string

func (arg1 SwigcptrTradeDataMarket) GetAmount_sold() string {
	return _swig_wrap_TradeDataMarket_amount_sold_get(arg1)
}

func _swig_wrap_TradeDataMarket_ot_dynamic_cast(uintptr) SwigcptrTradeDataMarket

func TradeDataMarketOt_dynamic_cast(arg1 Storable) TradeDataMarket {
	return _swig_wrap_TradeDataMarket_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_TradeDataMarket_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func TradeDataMarketCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_TradeDataMarket_Create(arg1, arg2)
}

func (p SwigcptrTradeDataMarket) SwigIsDisplayable() {
}

func (p SwigcptrTradeDataMarket) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrTradeDataMarket) SwigIsStorable() {
}

func (p SwigcptrTradeDataMarket) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type TradeDataMarket interface {
	Swigcptr() uintptr
	SwigIsTradeDataMarket()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetTransaction_id(arg2 string)
	GetTransaction_id() string
	SetDate(arg2 string)
	GetDate() string
	SetPrice(arg2 string)
	GetPrice() string
	SetAmount_sold(arg2 string)
	GetAmount_sold() string
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrTradeListMarket uintptr

func (p SwigcptrTradeListMarket) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTradeListMarket) SwigIsTradeListMarket() {
}

func _swig_wrap_delete_TradeListMarket(uintptr)

func DeleteTradeListMarket(arg1 TradeListMarket) {
	_swig_wrap_delete_TradeListMarket(arg1.Swigcptr())
}

func _swig_wrap_TradeListMarket_GetTradeDataMarketCount(SwigcptrTradeListMarket) int64

func (arg1 SwigcptrTradeListMarket) GetTradeDataMarketCount() int64 {
	return _swig_wrap_TradeListMarket_GetTradeDataMarketCount(arg1)
}

func _swig_wrap_TradeListMarket_GetTradeDataMarket(SwigcptrTradeListMarket, int64) SwigcptrTradeDataMarket

func (arg1 SwigcptrTradeListMarket) GetTradeDataMarket(arg2 int64) TradeDataMarket {
	return _swig_wrap_TradeListMarket_GetTradeDataMarket(arg1, arg2)
}

func _swig_wrap_TradeListMarket_RemoveTradeDataMarket(SwigcptrTradeListMarket, int64) bool

func (arg1 SwigcptrTradeListMarket) RemoveTradeDataMarket(arg2 int64) bool {
	return _swig_wrap_TradeListMarket_RemoveTradeDataMarket(arg1, arg2)
}

func _swig_wrap_TradeListMarket_AddTradeDataMarket(SwigcptrTradeListMarket, uintptr) bool

func (arg1 SwigcptrTradeListMarket) AddTradeDataMarket(arg2 TradeDataMarket) bool {
	return _swig_wrap_TradeListMarket_AddTradeDataMarket(arg1, arg2.Swigcptr())
}

func _swig_wrap_TradeListMarket_ot_dynamic_cast(uintptr) SwigcptrTradeListMarket

func TradeListMarketOt_dynamic_cast(arg1 Storable) TradeListMarket {
	return _swig_wrap_TradeListMarket_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_TradeListMarket_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func TradeListMarketCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_TradeListMarket_Create(arg1, arg2)
}

func (p SwigcptrTradeListMarket) SwigIsStorable() {
}

func (p SwigcptrTradeListMarket) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type TradeListMarket interface {
	Swigcptr() uintptr
	SwigIsTradeListMarket()
	GetTradeDataMarketCount() int64
	GetTradeDataMarket(arg2 int64) TradeDataMarket
	RemoveTradeDataMarket(arg2 int64) bool
	AddTradeDataMarket(arg2 TradeDataMarket) bool
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrOfferDataNym uintptr

func (p SwigcptrOfferDataNym) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOfferDataNym) SwigIsOfferDataNym() {
}

func _swig_wrap_delete_OfferDataNym(uintptr)

func DeleteOfferDataNym(arg1 OfferDataNym) {
	_swig_wrap_delete_OfferDataNym(arg1.Swigcptr())
}

func _swig_wrap_OfferDataNym_gui_label_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetGui_label(arg2 string) {
	_swig_wrap_OfferDataNym_gui_label_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_gui_label_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetGui_label() string {
	return _swig_wrap_OfferDataNym_gui_label_get(arg1)
}

func _swig_wrap_OfferDataNym_valid_from_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetValid_from(arg2 string) {
	_swig_wrap_OfferDataNym_valid_from_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_valid_from_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetValid_from() string {
	return _swig_wrap_OfferDataNym_valid_from_get(arg1)
}

func _swig_wrap_OfferDataNym_valid_to_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetValid_to(arg2 string) {
	_swig_wrap_OfferDataNym_valid_to_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_valid_to_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetValid_to() string {
	return _swig_wrap_OfferDataNym_valid_to_get(arg1)
}

func _swig_wrap_OfferDataNym_server_id_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetServer_id(arg2 string) {
	_swig_wrap_OfferDataNym_server_id_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_server_id_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetServer_id() string {
	return _swig_wrap_OfferDataNym_server_id_get(arg1)
}

func _swig_wrap_OfferDataNym_asset_type_id_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetAsset_type_id(arg2 string) {
	_swig_wrap_OfferDataNym_asset_type_id_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_asset_type_id_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetAsset_type_id() string {
	return _swig_wrap_OfferDataNym_asset_type_id_get(arg1)
}

func _swig_wrap_OfferDataNym_asset_acct_id_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetAsset_acct_id(arg2 string) {
	_swig_wrap_OfferDataNym_asset_acct_id_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_asset_acct_id_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetAsset_acct_id() string {
	return _swig_wrap_OfferDataNym_asset_acct_id_get(arg1)
}

func _swig_wrap_OfferDataNym_currency_type_id_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetCurrency_type_id(arg2 string) {
	_swig_wrap_OfferDataNym_currency_type_id_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_currency_type_id_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetCurrency_type_id() string {
	return _swig_wrap_OfferDataNym_currency_type_id_get(arg1)
}

func _swig_wrap_OfferDataNym_currency_acct_id_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetCurrency_acct_id(arg2 string) {
	_swig_wrap_OfferDataNym_currency_acct_id_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_currency_acct_id_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetCurrency_acct_id() string {
	return _swig_wrap_OfferDataNym_currency_acct_id_get(arg1)
}

func _swig_wrap_OfferDataNym_selling_set(SwigcptrOfferDataNym, bool)

func (arg1 SwigcptrOfferDataNym) SetSelling(arg2 bool) {
	_swig_wrap_OfferDataNym_selling_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_selling_get(SwigcptrOfferDataNym) bool

func (arg1 SwigcptrOfferDataNym) GetSelling() bool {
	return _swig_wrap_OfferDataNym_selling_get(arg1)
}

func _swig_wrap_OfferDataNym_scale_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetScale(arg2 string) {
	_swig_wrap_OfferDataNym_scale_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_scale_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetScale() string {
	return _swig_wrap_OfferDataNym_scale_get(arg1)
}

func _swig_wrap_OfferDataNym_price_per_scale_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetPrice_per_scale(arg2 string) {
	_swig_wrap_OfferDataNym_price_per_scale_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_price_per_scale_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetPrice_per_scale() string {
	return _swig_wrap_OfferDataNym_price_per_scale_get(arg1)
}

func _swig_wrap_OfferDataNym_transaction_id_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetTransaction_id(arg2 string) {
	_swig_wrap_OfferDataNym_transaction_id_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_transaction_id_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetTransaction_id() string {
	return _swig_wrap_OfferDataNym_transaction_id_get(arg1)
}

func _swig_wrap_OfferDataNym_total_assets_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetTotal_assets(arg2 string) {
	_swig_wrap_OfferDataNym_total_assets_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_total_assets_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetTotal_assets() string {
	return _swig_wrap_OfferDataNym_total_assets_get(arg1)
}

func _swig_wrap_OfferDataNym_finished_so_far_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetFinished_so_far(arg2 string) {
	_swig_wrap_OfferDataNym_finished_so_far_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_finished_so_far_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetFinished_so_far() string {
	return _swig_wrap_OfferDataNym_finished_so_far_get(arg1)
}

func _swig_wrap_OfferDataNym_minimum_increment_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetMinimum_increment(arg2 string) {
	_swig_wrap_OfferDataNym_minimum_increment_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_minimum_increment_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetMinimum_increment() string {
	return _swig_wrap_OfferDataNym_minimum_increment_get(arg1)
}

func _swig_wrap_OfferDataNym_stop_sign_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetStop_sign(arg2 string) {
	_swig_wrap_OfferDataNym_stop_sign_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_stop_sign_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetStop_sign() string {
	return _swig_wrap_OfferDataNym_stop_sign_get(arg1)
}

func _swig_wrap_OfferDataNym_stop_price_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetStop_price(arg2 string) {
	_swig_wrap_OfferDataNym_stop_price_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_stop_price_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetStop_price() string {
	return _swig_wrap_OfferDataNym_stop_price_get(arg1)
}

func _swig_wrap_OfferDataNym_date_set(SwigcptrOfferDataNym, string)

func (arg1 SwigcptrOfferDataNym) SetDate(arg2 string) {
	_swig_wrap_OfferDataNym_date_set(arg1, arg2)
}

func _swig_wrap_OfferDataNym_date_get(SwigcptrOfferDataNym) string

func (arg1 SwigcptrOfferDataNym) GetDate() string {
	return _swig_wrap_OfferDataNym_date_get(arg1)
}

func _swig_wrap_OfferDataNym_ot_dynamic_cast(uintptr) SwigcptrOfferDataNym

func OfferDataNymOt_dynamic_cast(arg1 Storable) OfferDataNym {
	return _swig_wrap_OfferDataNym_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_OfferDataNym_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func OfferDataNymCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_OfferDataNym_Create(arg1, arg2)
}

func (p SwigcptrOfferDataNym) SwigIsDisplayable() {
}

func (p SwigcptrOfferDataNym) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrOfferDataNym) SwigIsStorable() {
}

func (p SwigcptrOfferDataNym) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type OfferDataNym interface {
	Swigcptr() uintptr
	SwigIsOfferDataNym()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetValid_from(arg2 string)
	GetValid_from() string
	SetValid_to(arg2 string)
	GetValid_to() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetAsset_type_id(arg2 string)
	GetAsset_type_id() string
	SetAsset_acct_id(arg2 string)
	GetAsset_acct_id() string
	SetCurrency_type_id(arg2 string)
	GetCurrency_type_id() string
	SetCurrency_acct_id(arg2 string)
	GetCurrency_acct_id() string
	SetSelling(arg2 bool)
	GetSelling() bool
	SetScale(arg2 string)
	GetScale() string
	SetPrice_per_scale(arg2 string)
	GetPrice_per_scale() string
	SetTransaction_id(arg2 string)
	GetTransaction_id() string
	SetTotal_assets(arg2 string)
	GetTotal_assets() string
	SetFinished_so_far(arg2 string)
	GetFinished_so_far() string
	SetMinimum_increment(arg2 string)
	GetMinimum_increment() string
	SetStop_sign(arg2 string)
	GetStop_sign() string
	SetStop_price(arg2 string)
	GetStop_price() string
	SetDate(arg2 string)
	GetDate() string
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrOfferListNym uintptr

func (p SwigcptrOfferListNym) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOfferListNym) SwigIsOfferListNym() {
}

func _swig_wrap_delete_OfferListNym(uintptr)

func DeleteOfferListNym(arg1 OfferListNym) {
	_swig_wrap_delete_OfferListNym(arg1.Swigcptr())
}

func _swig_wrap_OfferListNym_GetOfferDataNymCount(SwigcptrOfferListNym) int64

func (arg1 SwigcptrOfferListNym) GetOfferDataNymCount() int64 {
	return _swig_wrap_OfferListNym_GetOfferDataNymCount(arg1)
}

func _swig_wrap_OfferListNym_GetOfferDataNym(SwigcptrOfferListNym, int64) SwigcptrOfferDataNym

func (arg1 SwigcptrOfferListNym) GetOfferDataNym(arg2 int64) OfferDataNym {
	return _swig_wrap_OfferListNym_GetOfferDataNym(arg1, arg2)
}

func _swig_wrap_OfferListNym_RemoveOfferDataNym(SwigcptrOfferListNym, int64) bool

func (arg1 SwigcptrOfferListNym) RemoveOfferDataNym(arg2 int64) bool {
	return _swig_wrap_OfferListNym_RemoveOfferDataNym(arg1, arg2)
}

func _swig_wrap_OfferListNym_AddOfferDataNym(SwigcptrOfferListNym, uintptr) bool

func (arg1 SwigcptrOfferListNym) AddOfferDataNym(arg2 OfferDataNym) bool {
	return _swig_wrap_OfferListNym_AddOfferDataNym(arg1, arg2.Swigcptr())
}

func _swig_wrap_OfferListNym_ot_dynamic_cast(uintptr) SwigcptrOfferListNym

func OfferListNymOt_dynamic_cast(arg1 Storable) OfferListNym {
	return _swig_wrap_OfferListNym_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_OfferListNym_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func OfferListNymCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_OfferListNym_Create(arg1, arg2)
}

func (p SwigcptrOfferListNym) SwigIsStorable() {
}

func (p SwigcptrOfferListNym) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type OfferListNym interface {
	Swigcptr() uintptr
	SwigIsOfferListNym()
	GetOfferDataNymCount() int64
	GetOfferDataNym(arg2 int64) OfferDataNym
	RemoveOfferDataNym(arg2 int64) bool
	AddOfferDataNym(arg2 OfferDataNym) bool
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrTradeDataNym uintptr

func (p SwigcptrTradeDataNym) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTradeDataNym) SwigIsTradeDataNym() {
}

func _swig_wrap_delete_TradeDataNym(uintptr)

func DeleteTradeDataNym(arg1 TradeDataNym) {
	_swig_wrap_delete_TradeDataNym(arg1.Swigcptr())
}

func _swig_wrap_TradeDataNym_gui_label_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetGui_label(arg2 string) {
	_swig_wrap_TradeDataNym_gui_label_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_gui_label_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetGui_label() string {
	return _swig_wrap_TradeDataNym_gui_label_get(arg1)
}

func _swig_wrap_TradeDataNym_transaction_id_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetTransaction_id(arg2 string) {
	_swig_wrap_TradeDataNym_transaction_id_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_transaction_id_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetTransaction_id() string {
	return _swig_wrap_TradeDataNym_transaction_id_get(arg1)
}

func _swig_wrap_TradeDataNym_completed_count_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetCompleted_count(arg2 string) {
	_swig_wrap_TradeDataNym_completed_count_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_completed_count_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetCompleted_count() string {
	return _swig_wrap_TradeDataNym_completed_count_get(arg1)
}

func _swig_wrap_TradeDataNym_date_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetDate(arg2 string) {
	_swig_wrap_TradeDataNym_date_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_date_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetDate() string {
	return _swig_wrap_TradeDataNym_date_get(arg1)
}

func _swig_wrap_TradeDataNym_price_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetPrice(arg2 string) {
	_swig_wrap_TradeDataNym_price_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_price_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetPrice() string {
	return _swig_wrap_TradeDataNym_price_get(arg1)
}

func _swig_wrap_TradeDataNym_amount_sold_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetAmount_sold(arg2 string) {
	_swig_wrap_TradeDataNym_amount_sold_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_amount_sold_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetAmount_sold() string {
	return _swig_wrap_TradeDataNym_amount_sold_get(arg1)
}

func _swig_wrap_TradeDataNym_updated_id_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetUpdated_id(arg2 string) {
	_swig_wrap_TradeDataNym_updated_id_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_updated_id_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetUpdated_id() string {
	return _swig_wrap_TradeDataNym_updated_id_get(arg1)
}

func _swig_wrap_TradeDataNym_offer_price_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetOffer_price(arg2 string) {
	_swig_wrap_TradeDataNym_offer_price_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_offer_price_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetOffer_price() string {
	return _swig_wrap_TradeDataNym_offer_price_get(arg1)
}

func _swig_wrap_TradeDataNym_finished_so_far_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetFinished_so_far(arg2 string) {
	_swig_wrap_TradeDataNym_finished_so_far_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_finished_so_far_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetFinished_so_far() string {
	return _swig_wrap_TradeDataNym_finished_so_far_get(arg1)
}

func _swig_wrap_TradeDataNym_asset_id_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetAsset_id(arg2 string) {
	_swig_wrap_TradeDataNym_asset_id_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_asset_id_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetAsset_id() string {
	return _swig_wrap_TradeDataNym_asset_id_get(arg1)
}

func _swig_wrap_TradeDataNym_currency_id_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetCurrency_id(arg2 string) {
	_swig_wrap_TradeDataNym_currency_id_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_currency_id_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetCurrency_id() string {
	return _swig_wrap_TradeDataNym_currency_id_get(arg1)
}

func _swig_wrap_TradeDataNym_currency_paid_set(SwigcptrTradeDataNym, string)

func (arg1 SwigcptrTradeDataNym) SetCurrency_paid(arg2 string) {
	_swig_wrap_TradeDataNym_currency_paid_set(arg1, arg2)
}

func _swig_wrap_TradeDataNym_currency_paid_get(SwigcptrTradeDataNym) string

func (arg1 SwigcptrTradeDataNym) GetCurrency_paid() string {
	return _swig_wrap_TradeDataNym_currency_paid_get(arg1)
}

func _swig_wrap_TradeDataNym_ot_dynamic_cast(uintptr) SwigcptrTradeDataNym

func TradeDataNymOt_dynamic_cast(arg1 Storable) TradeDataNym {
	return _swig_wrap_TradeDataNym_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_TradeDataNym_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func TradeDataNymCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_TradeDataNym_Create(arg1, arg2)
}

func (p SwigcptrTradeDataNym) SwigIsDisplayable() {
}

func (p SwigcptrTradeDataNym) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrTradeDataNym) SwigIsStorable() {
}

func (p SwigcptrTradeDataNym) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type TradeDataNym interface {
	Swigcptr() uintptr
	SwigIsTradeDataNym()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetTransaction_id(arg2 string)
	GetTransaction_id() string
	SetCompleted_count(arg2 string)
	GetCompleted_count() string
	SetDate(arg2 string)
	GetDate() string
	SetPrice(arg2 string)
	GetPrice() string
	SetAmount_sold(arg2 string)
	GetAmount_sold() string
	SetUpdated_id(arg2 string)
	GetUpdated_id() string
	SetOffer_price(arg2 string)
	GetOffer_price() string
	SetFinished_so_far(arg2 string)
	GetFinished_so_far() string
	SetAsset_id(arg2 string)
	GetAsset_id() string
	SetCurrency_id(arg2 string)
	GetCurrency_id() string
	SetCurrency_paid(arg2 string)
	GetCurrency_paid() string
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrTradeListNym uintptr

func (p SwigcptrTradeListNym) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTradeListNym) SwigIsTradeListNym() {
}

func _swig_wrap_delete_TradeListNym(uintptr)

func DeleteTradeListNym(arg1 TradeListNym) {
	_swig_wrap_delete_TradeListNym(arg1.Swigcptr())
}

func _swig_wrap_TradeListNym_GetTradeDataNymCount(SwigcptrTradeListNym) int64

func (arg1 SwigcptrTradeListNym) GetTradeDataNymCount() int64 {
	return _swig_wrap_TradeListNym_GetTradeDataNymCount(arg1)
}

func _swig_wrap_TradeListNym_GetTradeDataNym(SwigcptrTradeListNym, int64) SwigcptrTradeDataNym

func (arg1 SwigcptrTradeListNym) GetTradeDataNym(arg2 int64) TradeDataNym {
	return _swig_wrap_TradeListNym_GetTradeDataNym(arg1, arg2)
}

func _swig_wrap_TradeListNym_RemoveTradeDataNym(SwigcptrTradeListNym, int64) bool

func (arg1 SwigcptrTradeListNym) RemoveTradeDataNym(arg2 int64) bool {
	return _swig_wrap_TradeListNym_RemoveTradeDataNym(arg1, arg2)
}

func _swig_wrap_TradeListNym_AddTradeDataNym(SwigcptrTradeListNym, uintptr) bool

func (arg1 SwigcptrTradeListNym) AddTradeDataNym(arg2 TradeDataNym) bool {
	return _swig_wrap_TradeListNym_AddTradeDataNym(arg1, arg2.Swigcptr())
}

func _swig_wrap_TradeListNym_ot_dynamic_cast(uintptr) SwigcptrTradeListNym

func TradeListNymOt_dynamic_cast(arg1 Storable) TradeListNym {
	return _swig_wrap_TradeListNym_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_TradeListNym_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func TradeListNymCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_TradeListNym_Create(arg1, arg2)
}

func (p SwigcptrTradeListNym) SwigIsStorable() {
}

func (p SwigcptrTradeListNym) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type TradeListNym interface {
	Swigcptr() uintptr
	SwigIsTradeListNym()
	GetTradeDataNymCount() int64
	GetTradeDataNym(arg2 int64) TradeDataNym
	RemoveTradeDataNym(arg2 int64) bool
	AddTradeDataNym(arg2 TradeDataNym) bool
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrAcct uintptr

func (p SwigcptrAcct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAcct) SwigIsAcct() {
}

func _swig_wrap_delete_Acct(uintptr)

func DeleteAcct(arg1 Acct) {
	_swig_wrap_delete_Acct(arg1.Swigcptr())
}

func _swig_wrap_Acct_gui_label_set(SwigcptrAcct, string)

func (arg1 SwigcptrAcct) SetGui_label(arg2 string) {
	_swig_wrap_Acct_gui_label_set(arg1, arg2)
}

func _swig_wrap_Acct_gui_label_get(SwigcptrAcct) string

func (arg1 SwigcptrAcct) GetGui_label() string {
	return _swig_wrap_Acct_gui_label_get(arg1)
}

func _swig_wrap_Acct_acct_id_set(SwigcptrAcct, string)

func (arg1 SwigcptrAcct) SetAcct_id(arg2 string) {
	_swig_wrap_Acct_acct_id_set(arg1, arg2)
}

func _swig_wrap_Acct_acct_id_get(SwigcptrAcct) string

func (arg1 SwigcptrAcct) GetAcct_id() string {
	return _swig_wrap_Acct_acct_id_get(arg1)
}

func _swig_wrap_Acct_server_id_set(SwigcptrAcct, string)

func (arg1 SwigcptrAcct) SetServer_id(arg2 string) {
	_swig_wrap_Acct_server_id_set(arg1, arg2)
}

func _swig_wrap_Acct_server_id_get(SwigcptrAcct) string

func (arg1 SwigcptrAcct) GetServer_id() string {
	return _swig_wrap_Acct_server_id_get(arg1)
}

func _swig_wrap_Acct_ot_dynamic_cast(uintptr) SwigcptrAcct

func AcctOt_dynamic_cast(arg1 Storable) Acct {
	return _swig_wrap_Acct_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_Acct_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func AcctCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_Acct_Create(arg1, arg2)
}

func (p SwigcptrAcct) SwigIsDisplayable() {
}

func (p SwigcptrAcct) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrAcct) SwigIsStorable() {
}

func (p SwigcptrAcct) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type Acct interface {
	Swigcptr() uintptr
	SwigIsAcct()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetAcct_id(arg2 string)
	GetAcct_id() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrBitcoinAcct uintptr

func (p SwigcptrBitcoinAcct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBitcoinAcct) SwigIsBitcoinAcct() {
}

func _swig_wrap_delete_BitcoinAcct(uintptr)

func DeleteBitcoinAcct(arg1 BitcoinAcct) {
	_swig_wrap_delete_BitcoinAcct(arg1.Swigcptr())
}

func _swig_wrap_BitcoinAcct_gui_label_set(SwigcptrBitcoinAcct, string)

func (arg1 SwigcptrBitcoinAcct) SetGui_label(arg2 string) {
	_swig_wrap_BitcoinAcct_gui_label_set(arg1, arg2)
}

func _swig_wrap_BitcoinAcct_gui_label_get(SwigcptrBitcoinAcct) string

func (arg1 SwigcptrBitcoinAcct) GetGui_label() string {
	return _swig_wrap_BitcoinAcct_gui_label_get(arg1)
}

func _swig_wrap_BitcoinAcct_acct_id_set(SwigcptrBitcoinAcct, string)

func (arg1 SwigcptrBitcoinAcct) SetAcct_id(arg2 string) {
	_swig_wrap_BitcoinAcct_acct_id_set(arg1, arg2)
}

func _swig_wrap_BitcoinAcct_acct_id_get(SwigcptrBitcoinAcct) string

func (arg1 SwigcptrBitcoinAcct) GetAcct_id() string {
	return _swig_wrap_BitcoinAcct_acct_id_get(arg1)
}

func _swig_wrap_BitcoinAcct_server_id_set(SwigcptrBitcoinAcct, string)

func (arg1 SwigcptrBitcoinAcct) SetServer_id(arg2 string) {
	_swig_wrap_BitcoinAcct_server_id_set(arg1, arg2)
}

func _swig_wrap_BitcoinAcct_server_id_get(SwigcptrBitcoinAcct) string

func (arg1 SwigcptrBitcoinAcct) GetServer_id() string {
	return _swig_wrap_BitcoinAcct_server_id_get(arg1)
}

func _swig_wrap_BitcoinAcct_bitcoin_acct_name_set(SwigcptrBitcoinAcct, string)

func (arg1 SwigcptrBitcoinAcct) SetBitcoin_acct_name(arg2 string) {
	_swig_wrap_BitcoinAcct_bitcoin_acct_name_set(arg1, arg2)
}

func _swig_wrap_BitcoinAcct_bitcoin_acct_name_get(SwigcptrBitcoinAcct) string

func (arg1 SwigcptrBitcoinAcct) GetBitcoin_acct_name() string {
	return _swig_wrap_BitcoinAcct_bitcoin_acct_name_get(arg1)
}

func _swig_wrap_BitcoinAcct_ot_dynamic_cast(uintptr) SwigcptrBitcoinAcct

func BitcoinAcctOt_dynamic_cast(arg1 Storable) BitcoinAcct {
	return _swig_wrap_BitcoinAcct_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_BitcoinAcct_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func BitcoinAcctCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_BitcoinAcct_Create(arg1, arg2)
}

func (p SwigcptrBitcoinAcct) SwigIsAcct() {
}

func (p SwigcptrBitcoinAcct) SwigGetAcct() Acct {
	return SwigcptrAcct(p.Swigcptr())
}

func (p SwigcptrBitcoinAcct) SwigIsDisplayable() {
}

func (p SwigcptrBitcoinAcct) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrBitcoinAcct) SwigIsStorable() {
}

func (p SwigcptrBitcoinAcct) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type BitcoinAcct interface {
	Swigcptr() uintptr
	SwigIsBitcoinAcct()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetAcct_id(arg2 string)
	GetAcct_id() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetBitcoin_acct_name(arg2 string)
	GetBitcoin_acct_name() string
	SwigIsAcct()
	SwigGetAcct() Acct
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrServerInfo uintptr

func (p SwigcptrServerInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrServerInfo) SwigIsServerInfo() {
}

func _swig_wrap_delete_ServerInfo(uintptr)

func DeleteServerInfo(arg1 ServerInfo) {
	_swig_wrap_delete_ServerInfo(arg1.Swigcptr())
}

func _swig_wrap_ServerInfo_gui_label_set(SwigcptrServerInfo, string)

func (arg1 SwigcptrServerInfo) SetGui_label(arg2 string) {
	_swig_wrap_ServerInfo_gui_label_set(arg1, arg2)
}

func _swig_wrap_ServerInfo_gui_label_get(SwigcptrServerInfo) string

func (arg1 SwigcptrServerInfo) GetGui_label() string {
	return _swig_wrap_ServerInfo_gui_label_get(arg1)
}

func _swig_wrap_ServerInfo_server_id_set(SwigcptrServerInfo, string)

func (arg1 SwigcptrServerInfo) SetServer_id(arg2 string) {
	_swig_wrap_ServerInfo_server_id_set(arg1, arg2)
}

func _swig_wrap_ServerInfo_server_id_get(SwigcptrServerInfo) string

func (arg1 SwigcptrServerInfo) GetServer_id() string {
	return _swig_wrap_ServerInfo_server_id_get(arg1)
}

func _swig_wrap_ServerInfo_server_type_set(SwigcptrServerInfo, string)

func (arg1 SwigcptrServerInfo) SetServer_type(arg2 string) {
	_swig_wrap_ServerInfo_server_type_set(arg1, arg2)
}

func _swig_wrap_ServerInfo_server_type_get(SwigcptrServerInfo) string

func (arg1 SwigcptrServerInfo) GetServer_type() string {
	return _swig_wrap_ServerInfo_server_type_get(arg1)
}

func _swig_wrap_ServerInfo_ot_dynamic_cast(uintptr) SwigcptrServerInfo

func ServerInfoOt_dynamic_cast(arg1 Storable) ServerInfo {
	return _swig_wrap_ServerInfo_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_ServerInfo_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func ServerInfoCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_ServerInfo_Create(arg1, arg2)
}

func (p SwigcptrServerInfo) SwigIsDisplayable() {
}

func (p SwigcptrServerInfo) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrServerInfo) SwigIsStorable() {
}

func (p SwigcptrServerInfo) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type ServerInfo interface {
	Swigcptr() uintptr
	SwigIsServerInfo()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetServer_type(arg2 string)
	GetServer_type() string
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrServer uintptr

func (p SwigcptrServer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrServer) SwigIsServer() {
}

func _swig_wrap_delete_Server(uintptr)

func DeleteServer(arg1 Server) {
	_swig_wrap_delete_Server(arg1.Swigcptr())
}

func _swig_wrap_Server_gui_label_set(SwigcptrServer, string)

func (arg1 SwigcptrServer) SetGui_label(arg2 string) {
	_swig_wrap_Server_gui_label_set(arg1, arg2)
}

func _swig_wrap_Server_gui_label_get(SwigcptrServer) string

func (arg1 SwigcptrServer) GetGui_label() string {
	return _swig_wrap_Server_gui_label_get(arg1)
}

func _swig_wrap_Server_server_id_set(SwigcptrServer, string)

func (arg1 SwigcptrServer) SetServer_id(arg2 string) {
	_swig_wrap_Server_server_id_set(arg1, arg2)
}

func _swig_wrap_Server_server_id_get(SwigcptrServer) string

func (arg1 SwigcptrServer) GetServer_id() string {
	return _swig_wrap_Server_server_id_get(arg1)
}

func _swig_wrap_Server_server_type_set(SwigcptrServer, string)

func (arg1 SwigcptrServer) SetServer_type(arg2 string) {
	_swig_wrap_Server_server_type_set(arg1, arg2)
}

func _swig_wrap_Server_server_type_get(SwigcptrServer) string

func (arg1 SwigcptrServer) GetServer_type() string {
	return _swig_wrap_Server_server_type_get(arg1)
}

func _swig_wrap_Server_server_host_set(SwigcptrServer, string)

func (arg1 SwigcptrServer) SetServer_host(arg2 string) {
	_swig_wrap_Server_server_host_set(arg1, arg2)
}

func _swig_wrap_Server_server_host_get(SwigcptrServer) string

func (arg1 SwigcptrServer) GetServer_host() string {
	return _swig_wrap_Server_server_host_get(arg1)
}

func _swig_wrap_Server_server_port_set(SwigcptrServer, string)

func (arg1 SwigcptrServer) SetServer_port(arg2 string) {
	_swig_wrap_Server_server_port_set(arg1, arg2)
}

func _swig_wrap_Server_server_port_get(SwigcptrServer) string

func (arg1 SwigcptrServer) GetServer_port() string {
	return _swig_wrap_Server_server_port_get(arg1)
}

func _swig_wrap_Server_ot_dynamic_cast(uintptr) SwigcptrServer

func ServerOt_dynamic_cast(arg1 Storable) Server {
	return _swig_wrap_Server_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_Server_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func ServerCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_Server_Create(arg1, arg2)
}

func (p SwigcptrServer) SwigIsServerInfo() {
}

func (p SwigcptrServer) SwigGetServerInfo() ServerInfo {
	return SwigcptrServerInfo(p.Swigcptr())
}

func (p SwigcptrServer) SwigIsDisplayable() {
}

func (p SwigcptrServer) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrServer) SwigIsStorable() {
}

func (p SwigcptrServer) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type Server interface {
	Swigcptr() uintptr
	SwigIsServer()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetServer_type(arg2 string)
	GetServer_type() string
	SetServer_host(arg2 string)
	GetServer_host() string
	SetServer_port(arg2 string)
	GetServer_port() string
	SwigIsServerInfo()
	SwigGetServerInfo() ServerInfo
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrBitcoinServer uintptr

func (p SwigcptrBitcoinServer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBitcoinServer) SwigIsBitcoinServer() {
}

func _swig_wrap_delete_BitcoinServer(uintptr)

func DeleteBitcoinServer(arg1 BitcoinServer) {
	_swig_wrap_delete_BitcoinServer(arg1.Swigcptr())
}

func _swig_wrap_BitcoinServer_gui_label_set(SwigcptrBitcoinServer, string)

func (arg1 SwigcptrBitcoinServer) SetGui_label(arg2 string) {
	_swig_wrap_BitcoinServer_gui_label_set(arg1, arg2)
}

func _swig_wrap_BitcoinServer_gui_label_get(SwigcptrBitcoinServer) string

func (arg1 SwigcptrBitcoinServer) GetGui_label() string {
	return _swig_wrap_BitcoinServer_gui_label_get(arg1)
}

func _swig_wrap_BitcoinServer_server_id_set(SwigcptrBitcoinServer, string)

func (arg1 SwigcptrBitcoinServer) SetServer_id(arg2 string) {
	_swig_wrap_BitcoinServer_server_id_set(arg1, arg2)
}

func _swig_wrap_BitcoinServer_server_id_get(SwigcptrBitcoinServer) string

func (arg1 SwigcptrBitcoinServer) GetServer_id() string {
	return _swig_wrap_BitcoinServer_server_id_get(arg1)
}

func _swig_wrap_BitcoinServer_server_type_set(SwigcptrBitcoinServer, string)

func (arg1 SwigcptrBitcoinServer) SetServer_type(arg2 string) {
	_swig_wrap_BitcoinServer_server_type_set(arg1, arg2)
}

func _swig_wrap_BitcoinServer_server_type_get(SwigcptrBitcoinServer) string

func (arg1 SwigcptrBitcoinServer) GetServer_type() string {
	return _swig_wrap_BitcoinServer_server_type_get(arg1)
}

func _swig_wrap_BitcoinServer_server_host_set(SwigcptrBitcoinServer, string)

func (arg1 SwigcptrBitcoinServer) SetServer_host(arg2 string) {
	_swig_wrap_BitcoinServer_server_host_set(arg1, arg2)
}

func _swig_wrap_BitcoinServer_server_host_get(SwigcptrBitcoinServer) string

func (arg1 SwigcptrBitcoinServer) GetServer_host() string {
	return _swig_wrap_BitcoinServer_server_host_get(arg1)
}

func _swig_wrap_BitcoinServer_server_port_set(SwigcptrBitcoinServer, string)

func (arg1 SwigcptrBitcoinServer) SetServer_port(arg2 string) {
	_swig_wrap_BitcoinServer_server_port_set(arg1, arg2)
}

func _swig_wrap_BitcoinServer_server_port_get(SwigcptrBitcoinServer) string

func (arg1 SwigcptrBitcoinServer) GetServer_port() string {
	return _swig_wrap_BitcoinServer_server_port_get(arg1)
}

func _swig_wrap_BitcoinServer_bitcoin_username_set(SwigcptrBitcoinServer, string)

func (arg1 SwigcptrBitcoinServer) SetBitcoin_username(arg2 string) {
	_swig_wrap_BitcoinServer_bitcoin_username_set(arg1, arg2)
}

func _swig_wrap_BitcoinServer_bitcoin_username_get(SwigcptrBitcoinServer) string

func (arg1 SwigcptrBitcoinServer) GetBitcoin_username() string {
	return _swig_wrap_BitcoinServer_bitcoin_username_get(arg1)
}

func _swig_wrap_BitcoinServer_bitcoin_password_set(SwigcptrBitcoinServer, string)

func (arg1 SwigcptrBitcoinServer) SetBitcoin_password(arg2 string) {
	_swig_wrap_BitcoinServer_bitcoin_password_set(arg1, arg2)
}

func _swig_wrap_BitcoinServer_bitcoin_password_get(SwigcptrBitcoinServer) string

func (arg1 SwigcptrBitcoinServer) GetBitcoin_password() string {
	return _swig_wrap_BitcoinServer_bitcoin_password_get(arg1)
}

func _swig_wrap_BitcoinServer_ot_dynamic_cast(uintptr) SwigcptrBitcoinServer

func BitcoinServerOt_dynamic_cast(arg1 Storable) BitcoinServer {
	return _swig_wrap_BitcoinServer_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_BitcoinServer_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func BitcoinServerCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_BitcoinServer_Create(arg1, arg2)
}

func (p SwigcptrBitcoinServer) SwigIsServer() {
}

func (p SwigcptrBitcoinServer) SwigGetServer() Server {
	return SwigcptrServer(p.Swigcptr())
}

func (p SwigcptrBitcoinServer) SwigIsServerInfo() {
}

func (p SwigcptrBitcoinServer) SwigGetServerInfo() ServerInfo {
	return SwigcptrServerInfo(p.Swigcptr())
}

func (p SwigcptrBitcoinServer) SwigIsDisplayable() {
}

func (p SwigcptrBitcoinServer) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrBitcoinServer) SwigIsStorable() {
}

func (p SwigcptrBitcoinServer) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type BitcoinServer interface {
	Swigcptr() uintptr
	SwigIsBitcoinServer()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetServer_type(arg2 string)
	GetServer_type() string
	SetServer_host(arg2 string)
	GetServer_host() string
	SetServer_port(arg2 string)
	GetServer_port() string
	SetBitcoin_username(arg2 string)
	GetBitcoin_username() string
	SetBitcoin_password(arg2 string)
	GetBitcoin_password() string
	SwigIsServer()
	SwigGetServer() Server
	SwigIsServerInfo()
	SwigGetServerInfo() ServerInfo
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrRippleServer uintptr

func (p SwigcptrRippleServer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRippleServer) SwigIsRippleServer() {
}

func _swig_wrap_delete_RippleServer(uintptr)

func DeleteRippleServer(arg1 RippleServer) {
	_swig_wrap_delete_RippleServer(arg1.Swigcptr())
}

func _swig_wrap_RippleServer_gui_label_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetGui_label(arg2 string) {
	_swig_wrap_RippleServer_gui_label_set(arg1, arg2)
}

func _swig_wrap_RippleServer_gui_label_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetGui_label() string {
	return _swig_wrap_RippleServer_gui_label_get(arg1)
}

func _swig_wrap_RippleServer_server_id_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetServer_id(arg2 string) {
	_swig_wrap_RippleServer_server_id_set(arg1, arg2)
}

func _swig_wrap_RippleServer_server_id_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetServer_id() string {
	return _swig_wrap_RippleServer_server_id_get(arg1)
}

func _swig_wrap_RippleServer_server_type_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetServer_type(arg2 string) {
	_swig_wrap_RippleServer_server_type_set(arg1, arg2)
}

func _swig_wrap_RippleServer_server_type_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetServer_type() string {
	return _swig_wrap_RippleServer_server_type_get(arg1)
}

func _swig_wrap_RippleServer_server_host_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetServer_host(arg2 string) {
	_swig_wrap_RippleServer_server_host_set(arg1, arg2)
}

func _swig_wrap_RippleServer_server_host_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetServer_host() string {
	return _swig_wrap_RippleServer_server_host_get(arg1)
}

func _swig_wrap_RippleServer_server_port_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetServer_port(arg2 string) {
	_swig_wrap_RippleServer_server_port_set(arg1, arg2)
}

func _swig_wrap_RippleServer_server_port_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetServer_port() string {
	return _swig_wrap_RippleServer_server_port_get(arg1)
}

func _swig_wrap_RippleServer_ripple_username_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetRipple_username(arg2 string) {
	_swig_wrap_RippleServer_ripple_username_set(arg1, arg2)
}

func _swig_wrap_RippleServer_ripple_username_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetRipple_username() string {
	return _swig_wrap_RippleServer_ripple_username_get(arg1)
}

func _swig_wrap_RippleServer_ripple_password_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetRipple_password(arg2 string) {
	_swig_wrap_RippleServer_ripple_password_set(arg1, arg2)
}

func _swig_wrap_RippleServer_ripple_password_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetRipple_password() string {
	return _swig_wrap_RippleServer_ripple_password_get(arg1)
}

func _swig_wrap_RippleServer_namefield_id_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetNamefield_id(arg2 string) {
	_swig_wrap_RippleServer_namefield_id_set(arg1, arg2)
}

func _swig_wrap_RippleServer_namefield_id_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetNamefield_id() string {
	return _swig_wrap_RippleServer_namefield_id_get(arg1)
}

func _swig_wrap_RippleServer_passfield_id_set(SwigcptrRippleServer, string)

func (arg1 SwigcptrRippleServer) SetPassfield_id(arg2 string) {
	_swig_wrap_RippleServer_passfield_id_set(arg1, arg2)
}

func _swig_wrap_RippleServer_passfield_id_get(SwigcptrRippleServer) string

func (arg1 SwigcptrRippleServer) GetPassfield_id() string {
	return _swig_wrap_RippleServer_passfield_id_get(arg1)
}

func _swig_wrap_RippleServer_ot_dynamic_cast(uintptr) SwigcptrRippleServer

func RippleServerOt_dynamic_cast(arg1 Storable) RippleServer {
	return _swig_wrap_RippleServer_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_RippleServer_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func RippleServerCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_RippleServer_Create(arg1, arg2)
}

func (p SwigcptrRippleServer) SwigIsServer() {
}

func (p SwigcptrRippleServer) SwigGetServer() Server {
	return SwigcptrServer(p.Swigcptr())
}

func (p SwigcptrRippleServer) SwigIsServerInfo() {
}

func (p SwigcptrRippleServer) SwigGetServerInfo() ServerInfo {
	return SwigcptrServerInfo(p.Swigcptr())
}

func (p SwigcptrRippleServer) SwigIsDisplayable() {
}

func (p SwigcptrRippleServer) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrRippleServer) SwigIsStorable() {
}

func (p SwigcptrRippleServer) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type RippleServer interface {
	Swigcptr() uintptr
	SwigIsRippleServer()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetServer_type(arg2 string)
	GetServer_type() string
	SetServer_host(arg2 string)
	GetServer_host() string
	SetServer_port(arg2 string)
	GetServer_port() string
	SetRipple_username(arg2 string)
	GetRipple_username() string
	SetRipple_password(arg2 string)
	GetRipple_password() string
	SetNamefield_id(arg2 string)
	GetNamefield_id() string
	SetPassfield_id(arg2 string)
	GetPassfield_id() string
	SwigIsServer()
	SwigGetServer() Server
	SwigIsServerInfo()
	SwigGetServerInfo() ServerInfo
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrLoomServer uintptr

func (p SwigcptrLoomServer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLoomServer) SwigIsLoomServer() {
}

func _swig_wrap_delete_LoomServer(uintptr)

func DeleteLoomServer(arg1 LoomServer) {
	_swig_wrap_delete_LoomServer(arg1.Swigcptr())
}

func _swig_wrap_LoomServer_gui_label_set(SwigcptrLoomServer, string)

func (arg1 SwigcptrLoomServer) SetGui_label(arg2 string) {
	_swig_wrap_LoomServer_gui_label_set(arg1, arg2)
}

func _swig_wrap_LoomServer_gui_label_get(SwigcptrLoomServer) string

func (arg1 SwigcptrLoomServer) GetGui_label() string {
	return _swig_wrap_LoomServer_gui_label_get(arg1)
}

func _swig_wrap_LoomServer_server_id_set(SwigcptrLoomServer, string)

func (arg1 SwigcptrLoomServer) SetServer_id(arg2 string) {
	_swig_wrap_LoomServer_server_id_set(arg1, arg2)
}

func _swig_wrap_LoomServer_server_id_get(SwigcptrLoomServer) string

func (arg1 SwigcptrLoomServer) GetServer_id() string {
	return _swig_wrap_LoomServer_server_id_get(arg1)
}

func _swig_wrap_LoomServer_server_type_set(SwigcptrLoomServer, string)

func (arg1 SwigcptrLoomServer) SetServer_type(arg2 string) {
	_swig_wrap_LoomServer_server_type_set(arg1, arg2)
}

func _swig_wrap_LoomServer_server_type_get(SwigcptrLoomServer) string

func (arg1 SwigcptrLoomServer) GetServer_type() string {
	return _swig_wrap_LoomServer_server_type_get(arg1)
}

func _swig_wrap_LoomServer_server_host_set(SwigcptrLoomServer, string)

func (arg1 SwigcptrLoomServer) SetServer_host(arg2 string) {
	_swig_wrap_LoomServer_server_host_set(arg1, arg2)
}

func _swig_wrap_LoomServer_server_host_get(SwigcptrLoomServer) string

func (arg1 SwigcptrLoomServer) GetServer_host() string {
	return _swig_wrap_LoomServer_server_host_get(arg1)
}

func _swig_wrap_LoomServer_server_port_set(SwigcptrLoomServer, string)

func (arg1 SwigcptrLoomServer) SetServer_port(arg2 string) {
	_swig_wrap_LoomServer_server_port_set(arg1, arg2)
}

func _swig_wrap_LoomServer_server_port_get(SwigcptrLoomServer) string

func (arg1 SwigcptrLoomServer) GetServer_port() string {
	return _swig_wrap_LoomServer_server_port_get(arg1)
}

func _swig_wrap_LoomServer_loom_username_set(SwigcptrLoomServer, string)

func (arg1 SwigcptrLoomServer) SetLoom_username(arg2 string) {
	_swig_wrap_LoomServer_loom_username_set(arg1, arg2)
}

func _swig_wrap_LoomServer_loom_username_get(SwigcptrLoomServer) string

func (arg1 SwigcptrLoomServer) GetLoom_username() string {
	return _swig_wrap_LoomServer_loom_username_get(arg1)
}

func _swig_wrap_LoomServer_namefield_id_set(SwigcptrLoomServer, string)

func (arg1 SwigcptrLoomServer) SetNamefield_id(arg2 string) {
	_swig_wrap_LoomServer_namefield_id_set(arg1, arg2)
}

func _swig_wrap_LoomServer_namefield_id_get(SwigcptrLoomServer) string

func (arg1 SwigcptrLoomServer) GetNamefield_id() string {
	return _swig_wrap_LoomServer_namefield_id_get(arg1)
}

func _swig_wrap_LoomServer_ot_dynamic_cast(uintptr) SwigcptrLoomServer

func LoomServerOt_dynamic_cast(arg1 Storable) LoomServer {
	return _swig_wrap_LoomServer_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_LoomServer_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func LoomServerCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_LoomServer_Create(arg1, arg2)
}

func (p SwigcptrLoomServer) SwigIsServer() {
}

func (p SwigcptrLoomServer) SwigGetServer() Server {
	return SwigcptrServer(p.Swigcptr())
}

func (p SwigcptrLoomServer) SwigIsServerInfo() {
}

func (p SwigcptrLoomServer) SwigGetServerInfo() ServerInfo {
	return SwigcptrServerInfo(p.Swigcptr())
}

func (p SwigcptrLoomServer) SwigIsDisplayable() {
}

func (p SwigcptrLoomServer) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrLoomServer) SwigIsStorable() {
}

func (p SwigcptrLoomServer) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type LoomServer interface {
	Swigcptr() uintptr
	SwigIsLoomServer()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetServer_type(arg2 string)
	GetServer_type() string
	SetServer_host(arg2 string)
	GetServer_host() string
	SetServer_port(arg2 string)
	GetServer_port() string
	SetLoom_username(arg2 string)
	GetLoom_username() string
	SetNamefield_id(arg2 string)
	GetNamefield_id() string
	SwigIsServer()
	SwigGetServer() Server
	SwigIsServerInfo()
	SwigGetServerInfo() ServerInfo
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrContactNym uintptr

func (p SwigcptrContactNym) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrContactNym) SwigIsContactNym() {
}

func _swig_wrap_delete_ContactNym(uintptr)

func DeleteContactNym(arg1 ContactNym) {
	_swig_wrap_delete_ContactNym(arg1.Swigcptr())
}

func _swig_wrap_ContactNym_gui_label_set(SwigcptrContactNym, string)

func (arg1 SwigcptrContactNym) SetGui_label(arg2 string) {
	_swig_wrap_ContactNym_gui_label_set(arg1, arg2)
}

func _swig_wrap_ContactNym_gui_label_get(SwigcptrContactNym) string

func (arg1 SwigcptrContactNym) GetGui_label() string {
	return _swig_wrap_ContactNym_gui_label_get(arg1)
}

func _swig_wrap_ContactNym_nym_type_set(SwigcptrContactNym, string)

func (arg1 SwigcptrContactNym) SetNym_type(arg2 string) {
	_swig_wrap_ContactNym_nym_type_set(arg1, arg2)
}

func _swig_wrap_ContactNym_nym_type_get(SwigcptrContactNym) string

func (arg1 SwigcptrContactNym) GetNym_type() string {
	return _swig_wrap_ContactNym_nym_type_get(arg1)
}

func _swig_wrap_ContactNym_nym_id_set(SwigcptrContactNym, string)

func (arg1 SwigcptrContactNym) SetNym_id(arg2 string) {
	_swig_wrap_ContactNym_nym_id_set(arg1, arg2)
}

func _swig_wrap_ContactNym_nym_id_get(SwigcptrContactNym) string

func (arg1 SwigcptrContactNym) GetNym_id() string {
	return _swig_wrap_ContactNym_nym_id_get(arg1)
}

func _swig_wrap_ContactNym_public_key_set(SwigcptrContactNym, string)

func (arg1 SwigcptrContactNym) SetPublic_key(arg2 string) {
	_swig_wrap_ContactNym_public_key_set(arg1, arg2)
}

func _swig_wrap_ContactNym_public_key_get(SwigcptrContactNym) string

func (arg1 SwigcptrContactNym) GetPublic_key() string {
	return _swig_wrap_ContactNym_public_key_get(arg1)
}

func _swig_wrap_ContactNym_memo_set(SwigcptrContactNym, string)

func (arg1 SwigcptrContactNym) SetMemo(arg2 string) {
	_swig_wrap_ContactNym_memo_set(arg1, arg2)
}

func _swig_wrap_ContactNym_memo_get(SwigcptrContactNym) string

func (arg1 SwigcptrContactNym) GetMemo() string {
	return _swig_wrap_ContactNym_memo_get(arg1)
}

func _swig_wrap_ContactNym_GetServerInfoCount(SwigcptrContactNym) int64

func (arg1 SwigcptrContactNym) GetServerInfoCount() int64 {
	return _swig_wrap_ContactNym_GetServerInfoCount(arg1)
}

func _swig_wrap_ContactNym_GetServerInfo(SwigcptrContactNym, int64) SwigcptrServerInfo

func (arg1 SwigcptrContactNym) GetServerInfo(arg2 int64) ServerInfo {
	return _swig_wrap_ContactNym_GetServerInfo(arg1, arg2)
}

func _swig_wrap_ContactNym_RemoveServerInfo(SwigcptrContactNym, int64) bool

func (arg1 SwigcptrContactNym) RemoveServerInfo(arg2 int64) bool {
	return _swig_wrap_ContactNym_RemoveServerInfo(arg1, arg2)
}

func _swig_wrap_ContactNym_AddServerInfo(SwigcptrContactNym, uintptr) bool

func (arg1 SwigcptrContactNym) AddServerInfo(arg2 ServerInfo) bool {
	return _swig_wrap_ContactNym_AddServerInfo(arg1, arg2.Swigcptr())
}

func _swig_wrap_ContactNym_ot_dynamic_cast(uintptr) SwigcptrContactNym

func ContactNymOt_dynamic_cast(arg1 Storable) ContactNym {
	return _swig_wrap_ContactNym_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_ContactNym_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func ContactNymCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_ContactNym_Create(arg1, arg2)
}

func (p SwigcptrContactNym) SwigIsDisplayable() {
}

func (p SwigcptrContactNym) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrContactNym) SwigIsStorable() {
}

func (p SwigcptrContactNym) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type ContactNym interface {
	Swigcptr() uintptr
	SwigIsContactNym()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetNym_type(arg2 string)
	GetNym_type() string
	SetNym_id(arg2 string)
	GetNym_id() string
	SetPublic_key(arg2 string)
	GetPublic_key() string
	SetMemo(arg2 string)
	GetMemo() string
	GetServerInfoCount() int64
	GetServerInfo(arg2 int64) ServerInfo
	RemoveServerInfo(arg2 int64) bool
	AddServerInfo(arg2 ServerInfo) bool
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrWalletData uintptr

func (p SwigcptrWalletData) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrWalletData) SwigIsWalletData() {
}

func _swig_wrap_delete_WalletData(uintptr)

func DeleteWalletData(arg1 WalletData) {
	_swig_wrap_delete_WalletData(arg1.Swigcptr())
}

func _swig_wrap_WalletData_GetBitcoinServerCount(SwigcptrWalletData) int64

func (arg1 SwigcptrWalletData) GetBitcoinServerCount() int64 {
	return _swig_wrap_WalletData_GetBitcoinServerCount(arg1)
}

func _swig_wrap_WalletData_GetBitcoinServer(SwigcptrWalletData, int64) SwigcptrBitcoinServer

func (arg1 SwigcptrWalletData) GetBitcoinServer(arg2 int64) BitcoinServer {
	return _swig_wrap_WalletData_GetBitcoinServer(arg1, arg2)
}

func _swig_wrap_WalletData_RemoveBitcoinServer(SwigcptrWalletData, int64) bool

func (arg1 SwigcptrWalletData) RemoveBitcoinServer(arg2 int64) bool {
	return _swig_wrap_WalletData_RemoveBitcoinServer(arg1, arg2)
}

func _swig_wrap_WalletData_AddBitcoinServer(SwigcptrWalletData, uintptr) bool

func (arg1 SwigcptrWalletData) AddBitcoinServer(arg2 BitcoinServer) bool {
	return _swig_wrap_WalletData_AddBitcoinServer(arg1, arg2.Swigcptr())
}

func _swig_wrap_WalletData_GetBitcoinAcctCount(SwigcptrWalletData) int64

func (arg1 SwigcptrWalletData) GetBitcoinAcctCount() int64 {
	return _swig_wrap_WalletData_GetBitcoinAcctCount(arg1)
}

func _swig_wrap_WalletData_GetBitcoinAcct(SwigcptrWalletData, int64) SwigcptrBitcoinAcct

func (arg1 SwigcptrWalletData) GetBitcoinAcct(arg2 int64) BitcoinAcct {
	return _swig_wrap_WalletData_GetBitcoinAcct(arg1, arg2)
}

func _swig_wrap_WalletData_RemoveBitcoinAcct(SwigcptrWalletData, int64) bool

func (arg1 SwigcptrWalletData) RemoveBitcoinAcct(arg2 int64) bool {
	return _swig_wrap_WalletData_RemoveBitcoinAcct(arg1, arg2)
}

func _swig_wrap_WalletData_AddBitcoinAcct(SwigcptrWalletData, uintptr) bool

func (arg1 SwigcptrWalletData) AddBitcoinAcct(arg2 BitcoinAcct) bool {
	return _swig_wrap_WalletData_AddBitcoinAcct(arg1, arg2.Swigcptr())
}

func _swig_wrap_WalletData_GetRippleServerCount(SwigcptrWalletData) int64

func (arg1 SwigcptrWalletData) GetRippleServerCount() int64 {
	return _swig_wrap_WalletData_GetRippleServerCount(arg1)
}

func _swig_wrap_WalletData_GetRippleServer(SwigcptrWalletData, int64) SwigcptrRippleServer

func (arg1 SwigcptrWalletData) GetRippleServer(arg2 int64) RippleServer {
	return _swig_wrap_WalletData_GetRippleServer(arg1, arg2)
}

func _swig_wrap_WalletData_RemoveRippleServer(SwigcptrWalletData, int64) bool

func (arg1 SwigcptrWalletData) RemoveRippleServer(arg2 int64) bool {
	return _swig_wrap_WalletData_RemoveRippleServer(arg1, arg2)
}

func _swig_wrap_WalletData_AddRippleServer(SwigcptrWalletData, uintptr) bool

func (arg1 SwigcptrWalletData) AddRippleServer(arg2 RippleServer) bool {
	return _swig_wrap_WalletData_AddRippleServer(arg1, arg2.Swigcptr())
}

func _swig_wrap_WalletData_GetLoomServerCount(SwigcptrWalletData) int64

func (arg1 SwigcptrWalletData) GetLoomServerCount() int64 {
	return _swig_wrap_WalletData_GetLoomServerCount(arg1)
}

func _swig_wrap_WalletData_GetLoomServer(SwigcptrWalletData, int64) SwigcptrLoomServer

func (arg1 SwigcptrWalletData) GetLoomServer(arg2 int64) LoomServer {
	return _swig_wrap_WalletData_GetLoomServer(arg1, arg2)
}

func _swig_wrap_WalletData_RemoveLoomServer(SwigcptrWalletData, int64) bool

func (arg1 SwigcptrWalletData) RemoveLoomServer(arg2 int64) bool {
	return _swig_wrap_WalletData_RemoveLoomServer(arg1, arg2)
}

func _swig_wrap_WalletData_AddLoomServer(SwigcptrWalletData, uintptr) bool

func (arg1 SwigcptrWalletData) AddLoomServer(arg2 LoomServer) bool {
	return _swig_wrap_WalletData_AddLoomServer(arg1, arg2.Swigcptr())
}

func _swig_wrap_WalletData_ot_dynamic_cast(uintptr) SwigcptrWalletData

func WalletDataOt_dynamic_cast(arg1 Storable) WalletData {
	return _swig_wrap_WalletData_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_WalletData_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func WalletDataCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_WalletData_Create(arg1, arg2)
}

func (p SwigcptrWalletData) SwigIsStorable() {
}

func (p SwigcptrWalletData) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type WalletData interface {
	Swigcptr() uintptr
	SwigIsWalletData()
	GetBitcoinServerCount() int64
	GetBitcoinServer(arg2 int64) BitcoinServer
	RemoveBitcoinServer(arg2 int64) bool
	AddBitcoinServer(arg2 BitcoinServer) bool
	GetBitcoinAcctCount() int64
	GetBitcoinAcct(arg2 int64) BitcoinAcct
	RemoveBitcoinAcct(arg2 int64) bool
	AddBitcoinAcct(arg2 BitcoinAcct) bool
	GetRippleServerCount() int64
	GetRippleServer(arg2 int64) RippleServer
	RemoveRippleServer(arg2 int64) bool
	AddRippleServer(arg2 RippleServer) bool
	GetLoomServerCount() int64
	GetLoomServer(arg2 int64) LoomServer
	RemoveLoomServer(arg2 int64) bool
	AddLoomServer(arg2 LoomServer) bool
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrContactAcct uintptr

func (p SwigcptrContactAcct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrContactAcct) SwigIsContactAcct() {
}

func _swig_wrap_delete_ContactAcct(uintptr)

func DeleteContactAcct(arg1 ContactAcct) {
	_swig_wrap_delete_ContactAcct(arg1.Swigcptr())
}

func _swig_wrap_ContactAcct_gui_label_set(SwigcptrContactAcct, string)

func (arg1 SwigcptrContactAcct) SetGui_label(arg2 string) {
	_swig_wrap_ContactAcct_gui_label_set(arg1, arg2)
}

func _swig_wrap_ContactAcct_gui_label_get(SwigcptrContactAcct) string

func (arg1 SwigcptrContactAcct) GetGui_label() string {
	return _swig_wrap_ContactAcct_gui_label_get(arg1)
}

func _swig_wrap_ContactAcct_server_type_set(SwigcptrContactAcct, string)

func (arg1 SwigcptrContactAcct) SetServer_type(arg2 string) {
	_swig_wrap_ContactAcct_server_type_set(arg1, arg2)
}

func _swig_wrap_ContactAcct_server_type_get(SwigcptrContactAcct) string

func (arg1 SwigcptrContactAcct) GetServer_type() string {
	return _swig_wrap_ContactAcct_server_type_get(arg1)
}

func _swig_wrap_ContactAcct_server_id_set(SwigcptrContactAcct, string)

func (arg1 SwigcptrContactAcct) SetServer_id(arg2 string) {
	_swig_wrap_ContactAcct_server_id_set(arg1, arg2)
}

func _swig_wrap_ContactAcct_server_id_get(SwigcptrContactAcct) string

func (arg1 SwigcptrContactAcct) GetServer_id() string {
	return _swig_wrap_ContactAcct_server_id_get(arg1)
}

func _swig_wrap_ContactAcct_asset_type_id_set(SwigcptrContactAcct, string)

func (arg1 SwigcptrContactAcct) SetAsset_type_id(arg2 string) {
	_swig_wrap_ContactAcct_asset_type_id_set(arg1, arg2)
}

func _swig_wrap_ContactAcct_asset_type_id_get(SwigcptrContactAcct) string

func (arg1 SwigcptrContactAcct) GetAsset_type_id() string {
	return _swig_wrap_ContactAcct_asset_type_id_get(arg1)
}

func _swig_wrap_ContactAcct_acct_id_set(SwigcptrContactAcct, string)

func (arg1 SwigcptrContactAcct) SetAcct_id(arg2 string) {
	_swig_wrap_ContactAcct_acct_id_set(arg1, arg2)
}

func _swig_wrap_ContactAcct_acct_id_get(SwigcptrContactAcct) string

func (arg1 SwigcptrContactAcct) GetAcct_id() string {
	return _swig_wrap_ContactAcct_acct_id_get(arg1)
}

func _swig_wrap_ContactAcct_nym_id_set(SwigcptrContactAcct, string)

func (arg1 SwigcptrContactAcct) SetNym_id(arg2 string) {
	_swig_wrap_ContactAcct_nym_id_set(arg1, arg2)
}

func _swig_wrap_ContactAcct_nym_id_get(SwigcptrContactAcct) string

func (arg1 SwigcptrContactAcct) GetNym_id() string {
	return _swig_wrap_ContactAcct_nym_id_get(arg1)
}

func _swig_wrap_ContactAcct_memo_set(SwigcptrContactAcct, string)

func (arg1 SwigcptrContactAcct) SetMemo(arg2 string) {
	_swig_wrap_ContactAcct_memo_set(arg1, arg2)
}

func _swig_wrap_ContactAcct_memo_get(SwigcptrContactAcct) string

func (arg1 SwigcptrContactAcct) GetMemo() string {
	return _swig_wrap_ContactAcct_memo_get(arg1)
}

func _swig_wrap_ContactAcct_public_key_set(SwigcptrContactAcct, string)

func (arg1 SwigcptrContactAcct) SetPublic_key(arg2 string) {
	_swig_wrap_ContactAcct_public_key_set(arg1, arg2)
}

func _swig_wrap_ContactAcct_public_key_get(SwigcptrContactAcct) string

func (arg1 SwigcptrContactAcct) GetPublic_key() string {
	return _swig_wrap_ContactAcct_public_key_get(arg1)
}

func _swig_wrap_ContactAcct_ot_dynamic_cast(uintptr) SwigcptrContactAcct

func ContactAcctOt_dynamic_cast(arg1 Storable) ContactAcct {
	return _swig_wrap_ContactAcct_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_ContactAcct_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func ContactAcctCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_ContactAcct_Create(arg1, arg2)
}

func (p SwigcptrContactAcct) SwigIsDisplayable() {
}

func (p SwigcptrContactAcct) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrContactAcct) SwigIsStorable() {
}

func (p SwigcptrContactAcct) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type ContactAcct interface {
	Swigcptr() uintptr
	SwigIsContactAcct()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetServer_type(arg2 string)
	GetServer_type() string
	SetServer_id(arg2 string)
	GetServer_id() string
	SetAsset_type_id(arg2 string)
	GetAsset_type_id() string
	SetAcct_id(arg2 string)
	GetAcct_id() string
	SetNym_id(arg2 string)
	GetNym_id() string
	SetMemo(arg2 string)
	GetMemo() string
	SetPublic_key(arg2 string)
	GetPublic_key() string
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrContact uintptr

func (p SwigcptrContact) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrContact) SwigIsContact() {
}

func _swig_wrap_delete_Contact(uintptr)

func DeleteContact(arg1 Contact) {
	_swig_wrap_delete_Contact(arg1.Swigcptr())
}

func _swig_wrap_Contact_gui_label_set(SwigcptrContact, string)

func (arg1 SwigcptrContact) SetGui_label(arg2 string) {
	_swig_wrap_Contact_gui_label_set(arg1, arg2)
}

func _swig_wrap_Contact_gui_label_get(SwigcptrContact) string

func (arg1 SwigcptrContact) GetGui_label() string {
	return _swig_wrap_Contact_gui_label_get(arg1)
}

func _swig_wrap_Contact_contact_id_set(SwigcptrContact, string)

func (arg1 SwigcptrContact) SetContact_id(arg2 string) {
	_swig_wrap_Contact_contact_id_set(arg1, arg2)
}

func _swig_wrap_Contact_contact_id_get(SwigcptrContact) string

func (arg1 SwigcptrContact) GetContact_id() string {
	return _swig_wrap_Contact_contact_id_get(arg1)
}

func _swig_wrap_Contact_email_set(SwigcptrContact, string)

func (arg1 SwigcptrContact) SetEmail(arg2 string) {
	_swig_wrap_Contact_email_set(arg1, arg2)
}

func _swig_wrap_Contact_email_get(SwigcptrContact) string

func (arg1 SwigcptrContact) GetEmail() string {
	return _swig_wrap_Contact_email_get(arg1)
}

func _swig_wrap_Contact_memo_set(SwigcptrContact, string)

func (arg1 SwigcptrContact) SetMemo(arg2 string) {
	_swig_wrap_Contact_memo_set(arg1, arg2)
}

func _swig_wrap_Contact_memo_get(SwigcptrContact) string

func (arg1 SwigcptrContact) GetMemo() string {
	return _swig_wrap_Contact_memo_get(arg1)
}

func _swig_wrap_Contact_public_key_set(SwigcptrContact, string)

func (arg1 SwigcptrContact) SetPublic_key(arg2 string) {
	_swig_wrap_Contact_public_key_set(arg1, arg2)
}

func _swig_wrap_Contact_public_key_get(SwigcptrContact) string

func (arg1 SwigcptrContact) GetPublic_key() string {
	return _swig_wrap_Contact_public_key_get(arg1)
}

func _swig_wrap_Contact_GetContactNymCount(SwigcptrContact) int64

func (arg1 SwigcptrContact) GetContactNymCount() int64 {
	return _swig_wrap_Contact_GetContactNymCount(arg1)
}

func _swig_wrap_Contact_GetContactNym(SwigcptrContact, int64) SwigcptrContactNym

func (arg1 SwigcptrContact) GetContactNym(arg2 int64) ContactNym {
	return _swig_wrap_Contact_GetContactNym(arg1, arg2)
}

func _swig_wrap_Contact_RemoveContactNym(SwigcptrContact, int64) bool

func (arg1 SwigcptrContact) RemoveContactNym(arg2 int64) bool {
	return _swig_wrap_Contact_RemoveContactNym(arg1, arg2)
}

func _swig_wrap_Contact_AddContactNym(SwigcptrContact, uintptr) bool

func (arg1 SwigcptrContact) AddContactNym(arg2 ContactNym) bool {
	return _swig_wrap_Contact_AddContactNym(arg1, arg2.Swigcptr())
}

func _swig_wrap_Contact_GetContactAcctCount(SwigcptrContact) int64

func (arg1 SwigcptrContact) GetContactAcctCount() int64 {
	return _swig_wrap_Contact_GetContactAcctCount(arg1)
}

func _swig_wrap_Contact_GetContactAcct(SwigcptrContact, int64) SwigcptrContactAcct

func (arg1 SwigcptrContact) GetContactAcct(arg2 int64) ContactAcct {
	return _swig_wrap_Contact_GetContactAcct(arg1, arg2)
}

func _swig_wrap_Contact_RemoveContactAcct(SwigcptrContact, int64) bool

func (arg1 SwigcptrContact) RemoveContactAcct(arg2 int64) bool {
	return _swig_wrap_Contact_RemoveContactAcct(arg1, arg2)
}

func _swig_wrap_Contact_AddContactAcct(SwigcptrContact, uintptr) bool

func (arg1 SwigcptrContact) AddContactAcct(arg2 ContactAcct) bool {
	return _swig_wrap_Contact_AddContactAcct(arg1, arg2.Swigcptr())
}

func _swig_wrap_Contact_ot_dynamic_cast(uintptr) SwigcptrContact

func ContactOt_dynamic_cast(arg1 Storable) Contact {
	return _swig_wrap_Contact_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_Contact_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func ContactCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_Contact_Create(arg1, arg2)
}

func (p SwigcptrContact) SwigIsDisplayable() {
}

func (p SwigcptrContact) SwigGetDisplayable() Displayable {
	return SwigcptrDisplayable(p.Swigcptr())
}

func (p SwigcptrContact) SwigIsStorable() {
}

func (p SwigcptrContact) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type Contact interface {
	Swigcptr() uintptr
	SwigIsContact()
	SetGui_label(arg2 string)
	GetGui_label() string
	SetContact_id(arg2 string)
	GetContact_id() string
	SetEmail(arg2 string)
	GetEmail() string
	SetMemo(arg2 string)
	GetMemo() string
	SetPublic_key(arg2 string)
	GetPublic_key() string
	GetContactNymCount() int64
	GetContactNym(arg2 int64) ContactNym
	RemoveContactNym(arg2 int64) bool
	AddContactNym(arg2 ContactNym) bool
	GetContactAcctCount() int64
	GetContactAcct(arg2 int64) ContactAcct
	RemoveContactAcct(arg2 int64) bool
	AddContactAcct(arg2 ContactAcct) bool
	SwigIsDisplayable()
	SwigGetDisplayable() Displayable
	SwigIsStorable()
	SwigGetStorable() Storable
}

type SwigcptrAddressBook uintptr

func (p SwigcptrAddressBook) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAddressBook) SwigIsAddressBook() {
}

func _swig_wrap_delete_AddressBook(uintptr)

func DeleteAddressBook(arg1 AddressBook) {
	_swig_wrap_delete_AddressBook(arg1.Swigcptr())
}

func _swig_wrap_AddressBook_GetContactCount(SwigcptrAddressBook) int64

func (arg1 SwigcptrAddressBook) GetContactCount() int64 {
	return _swig_wrap_AddressBook_GetContactCount(arg1)
}

func _swig_wrap_AddressBook_GetContact(SwigcptrAddressBook, int64) SwigcptrContact

func (arg1 SwigcptrAddressBook) GetContact(arg2 int64) Contact {
	return _swig_wrap_AddressBook_GetContact(arg1, arg2)
}

func _swig_wrap_AddressBook_RemoveContact(SwigcptrAddressBook, int64) bool

func (arg1 SwigcptrAddressBook) RemoveContact(arg2 int64) bool {
	return _swig_wrap_AddressBook_RemoveContact(arg1, arg2)
}

func _swig_wrap_AddressBook_AddContact(SwigcptrAddressBook, uintptr) bool

func (arg1 SwigcptrAddressBook) AddContact(arg2 Contact) bool {
	return _swig_wrap_AddressBook_AddContact(arg1, arg2.Swigcptr())
}

func _swig_wrap_AddressBook_ot_dynamic_cast(uintptr) SwigcptrAddressBook

func AddressBookOt_dynamic_cast(arg1 Storable) AddressBook {
	return _swig_wrap_AddressBook_ot_dynamic_cast(arg1.Swigcptr())
}

func _swig_wrap_AddressBook_Create(OTDBStoredObjectType, OTDBPackType) SwigcptrStorable

func AddressBookCreate(arg1 OTDBStoredObjectType, arg2 OTDBPackType) Storable {
	return _swig_wrap_AddressBook_Create(arg1, arg2)
}

func (p SwigcptrAddressBook) SwigIsStorable() {
}

func (p SwigcptrAddressBook) SwigGetStorable() Storable {
	return SwigcptrStorable(p.Swigcptr())
}

type AddressBook interface {
	Swigcptr() uintptr
	SwigIsAddressBook()
	GetContactCount() int64
	GetContact(arg2 int64) Contact
	RemoveContact(arg2 int64) bool
	AddContact(arg2 Contact) bool
	SwigIsStorable()
	SwigGetStorable() Storable
}

func _swig_wrap_OT_API_Set_PasswordCallback(uintptr) bool

func OT_API_Set_PasswordCallback(arg1 OTCaller) bool {
	return _swig_wrap_OT_API_Set_PasswordCallback(arg1.Swigcptr())
}


type SwigcptrOTVariable uintptr
type OTVariable interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOTVariable) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOT_API uintptr
type OT_API interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOT_API) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOTPacker uintptr
type OTPacker interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOTPacker) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOTAPI_Exec uintptr
type OTAPI_Exec interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOTAPI_Exec) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_OTCallback uintptr
type SwigDirector_OTCallback interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_OTCallback) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

